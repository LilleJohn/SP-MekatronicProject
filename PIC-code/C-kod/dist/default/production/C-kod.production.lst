

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Oct 10 11:34:15 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     _ADCON0	set	4034
    38  0000                     _ADCON0bits	set	4034
    39  0000                     _ADCON1	set	4033
    40  0000                     _ADCON2	set	4032
    41  0000                     _ADRESH	set	4036
    42  0000                     _ADRESL	set	4035
    43  0000                     _ANSELA	set	3896
    44  0000                     _ANSELB	set	3897
    45  0000                     _ANSELC	set	3898
    46  0000                     _BAUDCON1	set	4024
    47  0000                     _CCP5CON	set	3924
    48  0000                     _CCPR5L	set	3925
    49  0000                     _CCPTMRS1	set	3912
    50  0000                     _CM1CON0	set	3961
    51  0000                     _CM1CON0bits	set	3961
    52  0000                     _CM2CON1	set	3959
    53  0000                     _INTCON	set	4082
    54  0000                     _IPR1	set	3999
    55  0000                     _LATBbits	set	3978
    56  0000                     _LATCbits	set	3979
    57  0000                     _PIE1	set	3997
    58  0000                     _PIE1bits	set	3997
    59  0000                     _PIR1bits	set	3998
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTCbits	set	3970
    62  0000                     _PR2	set	4027
    63  0000                     _RCSTA1	set	4011
    64  0000                     _SPBRG1	set	4015
    65  0000                     _T1CON	set	4045
    66  0000                     _T2CON	set	4026
    67  0000                     _TMR1H	set	4047
    68  0000                     _TMR1L	set	4046
    69  0000                     _TRISA	set	3986
    70  0000                     _TRISAbits	set	3986
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISC	set	3988
    73  0000                     _TXREG1	set	4013
    74  0000                     _TXSTA1	set	4012
    75  0000                     _VREFCON0	set	3906
    76                           
    77                           	psect	smallconst
    78  000600                     __psmallconst:
    79                           	opt stack 0
    80  000600  00                 	db	0
    81  000601                     __stringdata:
    82                           	opt stack 0
    83  000601                     STR_7:
    84  000601  62                 	db	98	;'b'
    85  000602  20                 	db	32
    86  000603  72                 	db	114	;'r'
    87  000604  3A                 	db	58	;':'
    88  000605  20                 	db	32
    89  000606  20                 	db	32
    90  000607  25                 	db	37
    91  000608  20                 	db	32
    92  000609  30                 	db	48	;'0'
    93  00060A  30                 	db	48	;'0'
    94  00060B  3A                 	db	58	;':'
    95  00060C  30                 	db	48	;'0'
    96  00060D  30                 	db	48	;'0'
    97  00060E  3A                 	db	58	;':'
    98  00060F  30                 	db	48	;'0'
    99  000610  30                 	db	48	;'0'
   100  000611  00                 	db	0
   101  000612                     STR_8:
   102  000612  20                 	db	32
   103  000613  72                 	db	114	;'r'
   104  000614  3A                 	db	58	;':'
   105  000615  20                 	db	32
   106  000616  20                 	db	32
   107  000617  20                 	db	32
   108  000618  25                 	db	37
   109  000619  20                 	db	32
   110  00061A  52                 	db	82	;'R'
   111  00061B  3A                 	db	58	;':'
   112  00061C  20                 	db	32
   113  00061D  20                 	db	32
   114  00061E  25                 	db	37
   115  00061F  20                 	db	32
   116  000620  20                 	db	32
   117  000621  00                 	db	0
   118  000622                     __end_of__stringdata:
   119                           	opt stack 0
   120                           
   121                           ; #config settings
   122  000622  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           	psect	cinit
   125  001AFE                     __pcinit:
   126                           	opt stack 0
   127  001AFE                     start_initialization:
   128                           	opt stack 0
   129  001AFE                     __initialization:
   130                           	opt stack 0
   131                           
   132                           ; Clear objects allocated to BANK0 (18 bytes)
   133  001AFE  EE00  F07C         	lfsr	0,__pbssBANK0
   134  001B02  0E12               	movlw	18
   135  001B04                     clear_0:
   136  001B04  6AEE               	clrf	postinc0,c
   137  001B06  06E8               	decf	wreg,f,c
   138  001B08  E1FD               	bnz	clear_0
   139                           
   140                           ; Clear objects allocated to COMRAM (4 bytes)
   141  001B0A  6A4B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   142  001B0C  6A4A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   143  001B0E  6A49               	clrf	(__pbssCOMRAM+1)& (0+255),c
   144  001B10  6A48               	clrf	__pbssCOMRAM& (0+255),c
   145  001B12                     end_of_initialization:
   146                           	opt stack 0
   147  001B12                     __end_of__initialization:
   148                           	opt stack 0
   149  001B12  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  001B14  6EF8               	movwf	tblptru,c
   151  001B16  0100               	movlb	0
   152  001B18  EF12  F003         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           postinc0	equ	0xFEE
   155                           wreg	equ	0xFE8
   156                           
   157                           	psect	bssCOMRAM
   158  000048                     __pbssCOMRAM:
   159                           	opt stack 0
   160  000048                     _time_scaler:
   161                           	opt stack 0
   162  000048                     	ds	2
   163  00004A                     _ramptime_scaler:
   164                           	opt stack 0
   165  00004A                     	ds	1
   166  00004B                     _sample_interval:
   167                           	opt stack 0
   168  00004B                     	ds	1
   169                           tblptru	equ	0xFF8
   170                           postinc0	equ	0xFEE
   171                           wreg	equ	0xFE8
   172                           
   173                           	psect	bssBANK0
   174  00007C                     __pbssBANK0:
   175                           	opt stack 0
   176  00007C                     _minuter:
   177                           	opt stack 0
   178  00007C                     	ds	2
   179  00007E                     _pot_Val:
   180                           	opt stack 0
   181  00007E                     	ds	2
   182  000080                     _rampsignal:
   183                           	opt stack 0
   184  000080                     	ds	2
   185  000082                     _sample_flag:
   186                           	opt stack 0
   187  000082                     	ds	2
   188  000084                     _sekunder:
   189                           	opt stack 0
   190  000084                     	ds	2
   191  000086                     _styrsignal:
   192                           	opt stack 0
   193  000086                     	ds	2
   194  000088                     _timmar:
   195                           	opt stack 0
   196  000088                     	ds	2
   197  00008A                     _act_Val:
   198                           	opt stack 0
   199  00008A                     	ds	1
   200  00008B                     _blink_battery:
   201                           	opt stack 0
   202  00008B                     	ds	1
   203  00008C                     _rampknapp_flag:
   204                           	opt stack 0
   205  00008C                     	ds	1
   206  00008D                     _set_Val:
   207                           	opt stack 0
   208  00008D                     	ds	1
   209                           tblptru	equ	0xFF8
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           
   213                           	psect	cstackBANK0
   214  000060                     __pcstackBANK0:
   215                           	opt stack 0
   216  000060                     main@character_code:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x0
   220  000060                     	ds	1
   221  000061                     main@battery_status:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x1
   225  000061                     	ds	1
   226  000062                     _main$1490:
   227                           	opt stack 0
   228                           
   229                           ; 4 bytes @ 0x2
   230  000062                     	ds	4
   231  000066                     main@pump_signal2:
   232                           	opt stack 0
   233                           
   234                           ; 4 bytes @ 0x6
   235  000066                     	ds	4
   236  00006A                     main@res_error2:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0xA
   240  00006A                     	ds	2
   241  00006C                     main@duty_MSB:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0xC
   245  00006C                     	ds	1
   246  00006D                     main@duty_LSB:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0xD
   250  00006D                     	ds	1
   251  00006E                     main@variabel:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0xE
   255  00006E                     	ds	1
   256  00006F                     main@res_error1:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0xF
   260  00006F                     	ds	2
   261  000071                     main@sensor_Val:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x11
   265  000071                     	ds	2
   266  000073                     main@tid_old:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x13
   270  000073                     	ds	2
   271  000075                     main@disp_rampsignal:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x15
   275  000075                     	ds	1
   276  000076                     main@pump_signal1:
   277                           	opt stack 0
   278                           
   279                           ; 4 bytes @ 0x16
   280  000076                     	ds	4
   281  00007A                     main@tid:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x1A
   285  00007A                     	ds	2
   286                           tblptru	equ	0xFF8
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290                           	psect	cstackCOMRAM
   291  000001                     __pcstackCOMRAM:
   292                           	opt stack 0
   293  000001                     ??_isr:
   294  000001                     
   295                           ; 0 bytes @ 0x0
   296  000001                     	ds	14
   297  00000F                     ?_AD_omv:
   298                           	opt stack 0
   299  00000F                     ?___awdiv:
   300                           	opt stack 0
   301  00000F                     ?___awmod:
   302                           	opt stack 0
   303  00000F                     ?___flpack:
   304                           	opt stack 0
   305  00000F                     lcd_write@c:
   306                           	opt stack 0
   307  00000F                     ___awdiv@dividend:
   308                           	opt stack 0
   309  00000F                     ___awmod@dividend:
   310                           	opt stack 0
   311  00000F                     ___flpack@arg:
   312                           	opt stack 0
   313  00000F                     ___flge@ff1:
   314                           	opt stack 0
   315                           
   316                           ; 4 bytes @ 0xE
   317  00000F                     	ds	1
   318  000010                     ??_lcd_clear:
   319  000010                     lcd_char@cgram_addr:
   320                           	opt stack 0
   321  000010                     lcd_goto@pos:
   322                           	opt stack 0
   323  000010                     lcd_cmd@command:
   324                           	opt stack 0
   325  000010                     lcd_writesc@s:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0xF
   329  000010                     	ds	1
   330  000011                     ??_AD_omv:
   331  000011                     create_char@i:
   332                           	opt stack 0
   333  000011                     ___awdiv@divisor:
   334                           	opt stack 0
   335  000011                     ___awmod@divisor:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x10
   339  000011                     	ds	1
   340  000012                     ??_lcd_init:
   341  000012                     
   342                           ; 0 bytes @ 0x11
   343  000012                     	ds	1
   344  000013                     AD_omv@ADkanal:
   345                           	opt stack 0
   346  000013                     ___awdiv@counter:
   347                           	opt stack 0
   348  000013                     ___awmod@counter:
   349                           	opt stack 0
   350  000013                     ___flpack@exp:
   351                           	opt stack 0
   352  000013                     create_char@i_774:
   353                           	opt stack 0
   354  000013                     ___flge@ff2:
   355                           	opt stack 0
   356                           
   357                           ; 4 bytes @ 0x12
   358  000013                     	ds	1
   359  000014                     ___awdiv@sign:
   360                           	opt stack 0
   361  000014                     ___awmod@sign:
   362                           	opt stack 0
   363  000014                     ___flpack@sign:
   364                           	opt stack 0
   365  000014                     AD_omv@AD_value:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x13
   369  000014                     	ds	1
   370  000015                     ??___flpack:
   371  000015                     create_char@i_775:
   372                           	opt stack 0
   373  000015                     ___awdiv@quotient:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x14
   377  000015                     	ds	2
   378  000017                     ??___flge:
   379  000017                     printTime@minuter:
   380                           	opt stack 0
   381  000017                     create_char@i_776:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x16
   385  000017                     	ds	1
   386  000018                     printTime@timmar:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x17
   390  000018                     	ds	1
   391  000019                     ??_printTime:
   392  000019                     ?___awtofl:
   393                           	opt stack 0
   394  000019                     ?___lwtofl:
   395                           	opt stack 0
   396  000019                     ___awtofl@c:
   397                           	opt stack 0
   398  000019                     ___lwtofl@c:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x18
   402  000019                     	ds	2
   403  00001B                     printTime@sekunder:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x1A
   407  00001B                     	ds	1
   408  00001C                     printTime@pos1:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x1B
   412  00001C                     	ds	1
   413  00001D                     ?___fldiv:
   414                           	opt stack 0
   415  00001D                     ___awtofl@sign:
   416                           	opt stack 0
   417  00001D                     ___fldiv@f1:
   418                           	opt stack 0
   419                           
   420                           ; 4 bytes @ 0x1C
   421  00001D                     	ds	1
   422  00001E                     ?___flmul:
   423                           	opt stack 0
   424  00001E                     printTime@pos2:
   425                           	opt stack 0
   426  00001E                     ___flmul@f1:
   427                           	opt stack 0
   428                           
   429                           ; 4 bytes @ 0x1D
   430  00001E                     	ds	2
   431  000020                     printTime@i:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x1F
   435  000020                     	ds	1
   436  000021                     ___fldiv@f2:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x20
   440  000021                     	ds	1
   441  000022                     printTime@var:
   442                           	opt stack 0
   443  000022                     ___flmul@f2:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0x21
   447  000022                     	ds	3
   448  000025                     ??___fldiv:
   449                           
   450                           ; 0 bytes @ 0x24
   451  000025                     	ds	1
   452  000026                     ??___flmul:
   453                           
   454                           ; 0 bytes @ 0x25
   455  000026                     	ds	3
   456  000029                     ___fldiv@f3:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x28
   460  000029                     	ds	1
   461  00002A                     ___flmul@exp:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x29
   465  00002A                     	ds	1
   466  00002B                     ___flmul@f3_as_product:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x2A
   470  00002B                     	ds	2
   471  00002D                     ___fldiv@cntr:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x2C
   475  00002D                     	ds	1
   476  00002E                     ___fldiv@exp:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x2D
   480  00002E                     	ds	1
   481  00002F                     ___fldiv@sign:
   482                           	opt stack 0
   483  00002F                     ___flmul@cntr:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x2E
   487  00002F                     	ds	1
   488  000030                     ?___fltol:
   489                           	opt stack 0
   490  000030                     ___flmul@sign:
   491                           	opt stack 0
   492  000030                     ___fltol@f1:
   493                           	opt stack 0
   494                           
   495                           ; 4 bytes @ 0x2F
   496  000030                     	ds	1
   497  000031                     ?___flneg:
   498                           	opt stack 0
   499  000031                     ___flneg@f1:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x30
   503  000031                     	ds	3
   504  000034                     ??___fltol:
   505                           
   506                           ; 0 bytes @ 0x33
   507  000034                     	ds	1
   508  000035                     ?___fladd:
   509                           	opt stack 0
   510  000035                     ___fladd@f1:
   511                           	opt stack 0
   512                           
   513                           ; 4 bytes @ 0x34
   514  000035                     	ds	3
   515  000038                     ___fltol@sign1:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x37
   519  000038                     	ds	1
   520  000039                     ___fltol@exp1:
   521                           	opt stack 0
   522  000039                     ___fladd@f2:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x38
   526  000039                     	ds	4
   527  00003D                     ??___fladd:
   528                           
   529                           ; 0 bytes @ 0x3C
   530  00003D                     	ds	4
   531  000041                     ___fladd@sign:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x40
   535  000041                     	ds	1
   536  000042                     ___fladd@exp2:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x41
   540  000042                     	ds	1
   541  000043                     ___fladd@exp1:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x42
   545  000043                     	ds	1
   546  000044                     ??_main:
   547                           
   548                           ; 0 bytes @ 0x43
   549  000044                     	ds	4
   550                           tblptru	equ	0xFF8
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 51 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  pump_signal1    4   22[BANK0 ] PTR const unsigned char 
   564 ;;  pump_signal2    4    6[BANK0 ] PTR const unsigned char 
   565 ;;  ASCII_string    4    0        unsigned char [4]
   566 ;;  tid             2   26[BANK0 ] unsigned int 
   567 ;;  tid_old         2   19[BANK0 ] unsigned int 
   568 ;;  sensor_Val      2   17[BANK0 ] unsigned int 
   569 ;;  res_error1      2   15[BANK0 ] int 
   570 ;;  res_error2      2   10[BANK0 ] int 
   571 ;;  disp_rampsig    1   21[BANK0 ] unsigned char 
   572 ;;  variabel        1   14[BANK0 ] unsigned char 
   573 ;;  duty_LSB        1   13[BANK0 ] unsigned char 
   574 ;;  duty_MSB        1   12[BANK0 ] unsigned char 
   575 ;;  battery_stat    1    1[BANK0 ] unsigned char 
   576 ;;  character_co    1    0[BANK0 ] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;		None               void
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   586 ;;      Params:         0       0       0       0       0       0       0
   587 ;;      Locals:         0      28       0       0       0       0       0
   588 ;;      Temps:          4       0       0       0       0       0       0
   589 ;;      Totals:         4      28       0       0       0       0       0
   590 ;;Total ram usage:       32 bytes
   591 ;; Hardware stack levels required when called:    4
   592 ;; This function calls:
   593 ;;		_AD_omv
   594 ;;		___awdiv
   595 ;;		___awmod
   596 ;;		___awtofl
   597 ;;		___fladd
   598 ;;		___fldiv
   599 ;;		___flge
   600 ;;		___flmul
   601 ;;		___flneg
   602 ;;		___fltol
   603 ;;		___lwtofl
   604 ;;		_create_char
   605 ;;		_init
   606 ;;		_lcd_goto
   607 ;;		_lcd_init
   608 ;;		_lcd_write
   609 ;;		_lcd_writesc
   610 ;;		_printTime
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text0
   617  000624                     __ptext0:
   618                           	opt stack 0
   619  000624                     _main:
   620                           	opt stack 27
   621                           
   622                           ;main.c: 54: char ASCII_string[4];
   623                           ;main.c: 55: unsigned char character_code=0;
   624                           
   625                           ;incstack = 0
   626  000624  0E00               	movlw	0
   627  000626  0100               	movlb	0	; () banked
   628  000628  6F60               	movwf	main@character_code& (0+255),b
   629                           
   630                           ; BSR set to: 0
   631                           ;main.c: 57: init();
   632  00062A  EC84  F00C         	call	_init	;wreg free
   633                           
   634                           ;main.c: 58: lcd_init();
   635  00062E  EC22  F00B         	call	_lcd_init	;wreg free
   636                           
   637                           ;main.c: 59: create_char();
   638  000632  ECCB  F007         	call	_create_char	;wreg free
   639                           
   640                           ;main.c: 61: unsigned char duty_MSB, duty_LSB;
   641                           ;main.c: 62: unsigned int sensor_Val;
   642                           ;main.c: 63: unsigned int tid = 0;
   643  000636  0E00               	movlw	0
   644  000638  0100               	movlb	0	; () banked
   645  00063A  6F7B               	movwf	(main@tid+1)& (0+255),b
   646  00063C  0E00               	movlw	0
   647  00063E  0100               	movlb	0	; () banked
   648  000640  6F7A               	movwf	main@tid& (0+255),b
   649                           
   650                           ; BSR set to: 0
   651                           ;main.c: 64: unsigned int tid_old = 0;
   652  000642  0E00               	movlw	0
   653  000644  0100               	movlb	0	; () banked
   654  000646  6F74               	movwf	(main@tid_old+1)& (0+255),b
   655  000648  0E00               	movlw	0
   656  00064A  0100               	movlb	0	; () banked
   657  00064C  6F73               	movwf	main@tid_old& (0+255),b
   658                           
   659                           ; BSR set to: 0
   660                           ;main.c: 65: bool battery_status = 1;
   661  00064E  0E01               	movlw	1
   662  000650  0100               	movlb	0	; () banked
   663  000652  6F61               	movwf	main@battery_status& (0+255),b
   664                           
   665                           ; BSR set to: 0
   666                           ;main.c: 66: char variabel = 0;
   667  000654  0E00               	movlw	0
   668  000656  0100               	movlb	0	; () banked
   669  000658  6F6E               	movwf	main@variabel& (0+255),b
   670                           
   671                           ; BSR set to: 0
   672                           ;main.c: 67: int res_error1 = 0;
   673  00065A  0E00               	movlw	0
   674  00065C  0100               	movlb	0	; () banked
   675  00065E  6F70               	movwf	(main@res_error1+1)& (0+255),b
   676  000660  0E00               	movlw	0
   677  000662  0100               	movlb	0	; () banked
   678  000664  6F6F               	movwf	main@res_error1& (0+255),b
   679                           
   680                           ; BSR set to: 0
   681                           ;main.c: 68: int res_error2 = 0;
   682  000666  0E00               	movlw	0
   683  000668  0100               	movlb	0	; () banked
   684  00066A  6F6B               	movwf	(main@res_error2+1)& (0+255),b
   685  00066C  0E00               	movlw	0
   686  00066E  0100               	movlb	0	; () banked
   687  000670  6F6A               	movwf	main@res_error2& (0+255),b
   688                           
   689                           ; BSR set to: 0
   690                           ;main.c: 69: double pump_signal1 = 0;
   691  000672  0E00               	movlw	0
   692  000674  0100               	movlb	0	; () banked
   693  000676  6F76               	movwf	main@pump_signal1& (0+255),b
   694  000678  0E00               	movlw	0
   695  00067A  0100               	movlb	0	; () banked
   696  00067C  6F77               	movwf	(main@pump_signal1+1)& (0+255),b
   697  00067E  0E00               	movlw	0
   698  000680  0100               	movlb	0	; () banked
   699  000682  6F78               	movwf	(main@pump_signal1+2)& (0+255),b
   700  000684  0E00               	movlw	0
   701  000686  0100               	movlb	0	; () banked
   702  000688  6F79               	movwf	(main@pump_signal1+3)& (0+255),b
   703                           
   704                           ; BSR set to: 0
   705                           ;main.c: 70: double pump_signal2 = 0;
   706  00068A  0E00               	movlw	0
   707  00068C  0100               	movlb	0	; () banked
   708  00068E  6F66               	movwf	main@pump_signal2& (0+255),b
   709  000690  0E00               	movlw	0
   710  000692  0100               	movlb	0	; () banked
   711  000694  6F67               	movwf	(main@pump_signal2+1)& (0+255),b
   712  000696  0E00               	movlw	0
   713  000698  0100               	movlb	0	; () banked
   714  00069A  6F68               	movwf	(main@pump_signal2+2)& (0+255),b
   715  00069C  0E00               	movlw	0
   716  00069E  0100               	movlb	0	; () banked
   717  0006A0  6F69               	movwf	(main@pump_signal2+3)& (0+255),b
   718                           
   719                           ; BSR set to: 0
   720                           ;main.c: 71: unsigned char disp_rampsignal = 0;
   721  0006A2  0E00               	movlw	0
   722  0006A4  0100               	movlb	0	; () banked
   723  0006A6  6F75               	movwf	main@disp_rampsignal& (0+255),b
   724  0006A8                     l2464:
   725                           
   726                           ;main.c: 75: {
   727                           ;main.c: 77: styrsignal = (int)pump_signal1;
   728  0006A8  C076  F030         	movff	main@pump_signal1,___fltol@f1
   729  0006AC  C077  F031         	movff	main@pump_signal1+1,___fltol@f1+1
   730  0006B0  C078  F032         	movff	main@pump_signal1+2,___fltol@f1+2
   731  0006B4  C079  F033         	movff	main@pump_signal1+3,___fltol@f1+3
   732  0006B8  EC27  F00A         	call	___fltol	;wreg free
   733  0006BC  C030  F044         	movff	?___fltol,??_main
   734  0006C0  C031  F045         	movff	?___fltol+1,??_main+1
   735  0006C4  C032  F046         	movff	?___fltol+2,??_main+2
   736  0006C8  C033  F047         	movff	?___fltol+3,??_main+3
   737  0006CC  C044  F086         	movff	??_main,_styrsignal
   738  0006D0  C045  F087         	movff	??_main+1,_styrsignal+1
   739                           
   740                           ;main.c: 78: if(styrsignal >=1023){
   741  0006D4  0EFF               	movlw	255
   742  0006D6  0100               	movlb	0	; () banked
   743  0006D8  5D86               	subwf	_styrsignal& (0+255),w,b
   744  0006DA  0E03               	movlw	3
   745  0006DC  0100               	movlb	0	; () banked
   746  0006DE  5987               	subwfb	(_styrsignal+1)& (0+255),w,b
   747  0006E0  A0D8               	btfss	status,0,c
   748  0006E2  D005               	goto	l2470
   749                           
   750                           ; BSR set to: 0
   751                           ;main.c: 79: styrsignal = 1023;
   752  0006E4  0E03               	movlw	3
   753  0006E6  0100               	movlb	0	; () banked
   754  0006E8  6F87               	movwf	(_styrsignal+1)& (0+255),b
   755  0006EA  0100               	movlb	0	; () banked
   756  0006EC  6986               	setf	_styrsignal& (0+255),b
   757  0006EE                     l2470:
   758                           
   759                           ; BSR set to: 0
   760                           ;main.c: 80: }
   761                           ;main.c: 81: if(pump_signal1 <= -1023){
   762  0006EE  0E00               	movlw	0
   763  0006F0  6E0F               	movwf	___flge@ff1,c
   764  0006F2  0EC0               	movlw	192
   765  0006F4  6E10               	movwf	___flge@ff1+1,c
   766  0006F6  0E7F               	movlw	127
   767  0006F8  6E11               	movwf	___flge@ff1+2,c
   768  0006FA  0EC4               	movlw	196
   769  0006FC  6E12               	movwf	___flge@ff1+3,c
   770  0006FE  C076  F013         	movff	main@pump_signal1,___flge@ff2
   771  000702  C077  F014         	movff	main@pump_signal1+1,___flge@ff2+1
   772  000706  C078  F015         	movff	main@pump_signal1+2,___flge@ff2+2
   773  00070A  C079  F016         	movff	main@pump_signal1+3,___flge@ff2+3
   774  00070E  EC8E  F00B         	call	___flge	;wreg free
   775  000712  A0D8               	btfss	status,0,c
   776  000714  D00C               	goto	l2474
   777                           
   778                           ;main.c: 82: pump_signal1 = -1023;
   779  000716  0E00               	movlw	0
   780  000718  0100               	movlb	0	; () banked
   781  00071A  6F76               	movwf	main@pump_signal1& (0+255),b
   782  00071C  0EC0               	movlw	192
   783  00071E  0100               	movlb	0	; () banked
   784  000720  6F77               	movwf	(main@pump_signal1+1)& (0+255),b
   785  000722  0E7F               	movlw	127
   786  000724  0100               	movlb	0	; () banked
   787  000726  6F78               	movwf	(main@pump_signal1+2)& (0+255),b
   788  000728  0EC4               	movlw	196
   789  00072A  0100               	movlb	0	; () banked
   790  00072C  6F79               	movwf	(main@pump_signal1+3)& (0+255),b
   791  00072E                     l2474:
   792                           
   793                           ;main.c: 83: }
   794                           ;main.c: 84: if(pump_signal1 >= 1023){
   795  00072E  C076  F00F         	movff	main@pump_signal1,___flge@ff1
   796  000732  C077  F010         	movff	main@pump_signal1+1,___flge@ff1+1
   797  000736  C078  F011         	movff	main@pump_signal1+2,___flge@ff1+2
   798  00073A  C079  F012         	movff	main@pump_signal1+3,___flge@ff1+3
   799  00073E  0E00               	movlw	0
   800  000740  6E13               	movwf	___flge@ff2,c
   801  000742  0EC0               	movlw	192
   802  000744  6E14               	movwf	___flge@ff2+1,c
   803  000746  0E7F               	movlw	127
   804  000748  6E15               	movwf	___flge@ff2+2,c
   805  00074A  0E44               	movlw	68
   806  00074C  6E16               	movwf	___flge@ff2+3,c
   807  00074E  EC8E  F00B         	call	___flge	;wreg free
   808  000752  A0D8               	btfss	status,0,c
   809  000754  D00C               	goto	l2478
   810                           
   811                           ;main.c: 85: pump_signal1 = 1023;
   812  000756  0E00               	movlw	0
   813  000758  0100               	movlb	0	; () banked
   814  00075A  6F76               	movwf	main@pump_signal1& (0+255),b
   815  00075C  0EC0               	movlw	192
   816  00075E  0100               	movlb	0	; () banked
   817  000760  6F77               	movwf	(main@pump_signal1+1)& (0+255),b
   818  000762  0E7F               	movlw	127
   819  000764  0100               	movlb	0	; () banked
   820  000766  6F78               	movwf	(main@pump_signal1+2)& (0+255),b
   821  000768  0E44               	movlw	68
   822  00076A  0100               	movlb	0	; () banked
   823  00076C  6F79               	movwf	(main@pump_signal1+3)& (0+255),b
   824  00076E                     l2478:
   825                           
   826                           ;main.c: 86: }
   827                           ;main.c: 87: if(pump_signal1 < 0){
   828  00076E  0100               	movlb	0	; () banked
   829  000770  AF79               	btfss	(main@pump_signal1+3)& (0+255),7,b
   830  000772  D018               	goto	l129
   831                           
   832                           ; BSR set to: 0
   833                           ;main.c: 88: styrsignal += (int)pump_signal1;
   834  000774  C076  F030         	movff	main@pump_signal1,___fltol@f1
   835  000778  C077  F031         	movff	main@pump_signal1+1,___fltol@f1+1
   836  00077C  C078  F032         	movff	main@pump_signal1+2,___fltol@f1+2
   837  000780  C079  F033         	movff	main@pump_signal1+3,___fltol@f1+3
   838  000784  EC27  F00A         	call	___fltol	;wreg free
   839  000788  C030  F044         	movff	?___fltol,??_main
   840  00078C  C031  F045         	movff	?___fltol+1,??_main+1
   841  000790  C032  F046         	movff	?___fltol+2,??_main+2
   842  000794  C033  F047         	movff	?___fltol+3,??_main+3
   843  000798  5044               	movf	??_main,w,c
   844  00079A  0100               	movlb	0	; () banked
   845  00079C  2786               	addwf	_styrsignal& (0+255),f,b
   846  00079E  5045               	movf	??_main+1,w,c
   847  0007A0  0100               	movlb	0	; () banked
   848  0007A2  2387               	addwfc	(_styrsignal+1)& (0+255),f,b
   849  0007A4                     l129:
   850                           
   851                           ; BSR set to: 0
   852                           ;main.c: 89: }
   853                           ;main.c: 90: pot_Val = AD_omv(10);
   854  0007A4  0E0A               	movlw	10
   855  0007A6  EC19  F00D         	call	_AD_omv
   856  0007AA  C00F  F07E         	movff	?_AD_omv,_pot_Val
   857  0007AE  C010  F07F         	movff	?_AD_omv+1,_pot_Val+1
   858                           
   859                           ;main.c: 91: duty_MSB = styrsignal>>2;
   860  0007B2  0100               	movlb	0	; () banked
   861  0007B4  C086  F044         	movff	_styrsignal,??_main
   862  0007B8  0100               	movlb	0	; () banked
   863  0007BA  C087  F045         	movff	_styrsignal+1,??_main+1
   864  0007BE  90D8               	bcf	status,0,c
   865  0007C0  3245               	rrcf	??_main+1,f,c
   866  0007C2  3244               	rrcf	??_main,f,c
   867  0007C4  90D8               	bcf	status,0,c
   868  0007C6  3245               	rrcf	??_main+1,f,c
   869  0007C8  3244               	rrcf	??_main,f,c
   870  0007CA  5044               	movf	??_main,w,c
   871  0007CC  0100               	movlb	0	; () banked
   872  0007CE  6F6C               	movwf	main@duty_MSB& (0+255),b
   873                           
   874                           ; BSR set to: 0
   875                           ;main.c: 92: duty_LSB = styrsignal & 0x0003;
   876  0007D0  0100               	movlb	0	; () banked
   877  0007D2  5186               	movf	_styrsignal& (0+255),w,b
   878  0007D4  0B03               	andlw	3
   879  0007D6  0100               	movlb	0	; () banked
   880  0007D8  6F6D               	movwf	main@duty_LSB& (0+255),b
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 93: CCPR5L = duty_MSB;
   884  0007DA  C06C  FF55         	movff	main@duty_MSB,3925	;volatile
   885                           
   886                           ; BSR set to: 0
   887                           ;main.c: 94: CCP5CON = (CCP5CON & 0b11001111)|(duty_LSB <<4);
   888  0007DE  C06D  F044         	movff	main@duty_LSB,??_main
   889  0007E2  3A44               	swapf	??_main,f,c
   890  0007E4  0EF0               	movlw	240
   891  0007E6  1644               	andwf	??_main,f,c
   892  0007E8  010F               	movlb	15	; () banked
   893  0007EA  5154               	movf	84,w,b	;volatile
   894  0007EC  0BCF               	andlw	207
   895  0007EE  1044               	iorwf	??_main,w,c
   896  0007F0  010F               	movlb	15	; () banked
   897  0007F2  6F54               	movwf	84,b	;volatile
   898                           
   899                           ; BSR set to: 15
   900                           ;main.c: 95: sensor_Val = AD_omv(12);
   901  0007F4  0E0C               	movlw	12
   902  0007F6  EC19  F00D         	call	_AD_omv
   903  0007FA  C00F  F071         	movff	?_AD_omv,main@sensor_Val
   904  0007FE  C010  F072         	movff	?_AD_omv+1,main@sensor_Val+1
   905                           
   906                           ;main.c: 97: tid += 1;
   907                           
   908                           ;main.c: 96: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
   909  000802  0100               	movlb	0	; () banked
   910  000804  4B7A               	infsnz	main@tid& (0+255),f,b
   911  000806  2B7B               	incf	(main@tid+1)& (0+255),f,b
   912                           
   913                           ; BSR set to: 0
   914                           ;main.c: 100: variabel = sensor_Val>>2;
   915  000808  0100               	movlb	0	; () banked
   916  00080A  C071  F044         	movff	main@sensor_Val,??_main
   917  00080E  0100               	movlb	0	; () banked
   918  000810  C072  F045         	movff	main@sensor_Val+1,??_main+1
   919  000814  90D8               	bcf	status,0,c
   920  000816  3245               	rrcf	??_main+1,f,c
   921  000818  3244               	rrcf	??_main,f,c
   922  00081A  90D8               	bcf	status,0,c
   923  00081C  3245               	rrcf	??_main+1,f,c
   924  00081E  3244               	rrcf	??_main,f,c
   925  000820  5044               	movf	??_main,w,c
   926  000822  0100               	movlb	0	; () banked
   927  000824  6F6E               	movwf	main@variabel& (0+255),b
   928                           
   929                           ; BSR set to: 0
   930                           ;main.c: 101: TXREG1 = variabel;
   931  000826  C06E  FFAD         	movff	main@variabel,4013	;volatile
   932                           
   933                           ; BSR set to: 0
   934                           ;main.c: 105: if(sample_flag == 1){
   935  00082A  0100               	movlb	0	; () banked
   936  00082C  0582               	decf	_sample_flag& (0+255),w,b
   937  00082E  1183               	iorwf	(_sample_flag+1)& (0+255),w,b
   938  000830  A4D8               	btfss	status,2,c
   939  000832  D094               	goto	l2512
   940                           
   941                           ; BSR set to: 0
   942                           ;main.c: 106: pump_signal2 = pump_signal1;
   943  000834  C076  F066         	movff	main@pump_signal1,main@pump_signal2
   944  000838  C077  F067         	movff	main@pump_signal1+1,main@pump_signal2+1
   945  00083C  C078  F068         	movff	main@pump_signal1+2,main@pump_signal2+2
   946  000840  C079  F069         	movff	main@pump_signal1+3,main@pump_signal2+3
   947                           
   948                           ;main.c: 107: res_error2 = res_error1;
   949  000844  C06F  F06A         	movff	main@res_error1,main@res_error2
   950  000848  C070  F06B         	movff	main@res_error1+1,main@res_error2+1
   951                           
   952                           ; BSR set to: 0
   953                           ;main.c: 108: res_error1 = rampsignal - sensor_Val;
   954  00084C  0100               	movlb	0	; () banked
   955  00084E  C071  F044         	movff	main@sensor_Val,??_main
   956  000852  0100               	movlb	0	; () banked
   957  000854  C072  F045         	movff	main@sensor_Val+1,??_main+1
   958  000858  1E44               	comf	??_main,f,c
   959  00085A  1E45               	comf	??_main+1,f,c
   960  00085C  4A44               	infsnz	??_main,f,c
   961  00085E  2A45               	incf	??_main+1,f,c
   962  000860  0100               	movlb	0	; () banked
   963  000862  5180               	movf	_rampsignal& (0+255),w,b
   964  000864  2444               	addwf	??_main,w,c
   965  000866  0100               	movlb	0	; () banked
   966  000868  6F6F               	movwf	main@res_error1& (0+255),b
   967  00086A  0100               	movlb	0	; () banked
   968  00086C  5181               	movf	(_rampsignal+1)& (0+255),w,b
   969  00086E  2045               	addwfc	??_main+1,w,c
   970  000870  0100               	movlb	0	; () banked
   971  000872  6F70               	movwf	(main@res_error1+1)& (0+255),b
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 109: pump_signal1=2.298*res_error1 - 2.266*res_error2 + pump_signal2;
   975  000874  0E25               	movlw	37
   976  000876  6E22               	movwf	___flmul@f2,c
   977  000878  0E06               	movlw	6
   978  00087A  6E23               	movwf	___flmul@f2+1,c
   979  00087C  0E11               	movlw	17
   980  00087E  6E24               	movwf	___flmul@f2+2,c
   981  000880  0E40               	movlw	64
   982  000882  6E25               	movwf	___flmul@f2+3,c
   983  000884  C06A  F019         	movff	main@res_error2,___awtofl@c
   984  000888  C06B  F01A         	movff	main@res_error2+1,___awtofl@c+1
   985  00088C  ECF3  F00C         	call	___awtofl	;wreg free
   986  000890  C019  F01E         	movff	?___awtofl,___flmul@f1
   987  000894  C01A  F01F         	movff	?___awtofl+1,___flmul@f1+1
   988  000898  C01B  F020         	movff	?___awtofl+2,___flmul@f1+2
   989  00089C  C01C  F021         	movff	?___awtofl+3,___flmul@f1+3
   990  0008A0  EC6B  F008         	call	___flmul	;wreg free
   991  0008A4  C01E  F031         	movff	?___flmul,___flneg@f1
   992  0008A8  C01F  F032         	movff	?___flmul+1,___flneg@f1+1
   993  0008AC  C020  F033         	movff	?___flmul+2,___flneg@f1+2
   994  0008B0  C021  F034         	movff	?___flmul+3,___flneg@f1+3
   995  0008B4  EC3C  F00D         	call	___flneg	;wreg free
   996  0008B8  C031  F039         	movff	?___flneg,___fladd@f2
   997  0008BC  C032  F03A         	movff	?___flneg+1,___fladd@f2+1
   998  0008C0  C033  F03B         	movff	?___flneg+2,___fladd@f2+2
   999  0008C4  C034  F03C         	movff	?___flneg+3,___fladd@f2+3
  1000  0008C8  0E6F               	movlw	111
  1001  0008CA  6E22               	movwf	___flmul@f2,c
  1002  0008CC  0E12               	movlw	18
  1003  0008CE  6E23               	movwf	___flmul@f2+1,c
  1004  0008D0  0E13               	movlw	19
  1005  0008D2  6E24               	movwf	___flmul@f2+2,c
  1006  0008D4  0E40               	movlw	64
  1007  0008D6  6E25               	movwf	___flmul@f2+3,c
  1008  0008D8  C06F  F019         	movff	main@res_error1,___awtofl@c
  1009  0008DC  C070  F01A         	movff	main@res_error1+1,___awtofl@c+1
  1010  0008E0  ECF3  F00C         	call	___awtofl	;wreg free
  1011  0008E4  C019  F01E         	movff	?___awtofl,___flmul@f1
  1012  0008E8  C01A  F01F         	movff	?___awtofl+1,___flmul@f1+1
  1013  0008EC  C01B  F020         	movff	?___awtofl+2,___flmul@f1+2
  1014  0008F0  C01C  F021         	movff	?___awtofl+3,___flmul@f1+3
  1015  0008F4  EC6B  F008         	call	___flmul	;wreg free
  1016  0008F8  C01E  F035         	movff	?___flmul,___fladd@f1
  1017  0008FC  C01F  F036         	movff	?___flmul+1,___fladd@f1+1
  1018  000900  C020  F037         	movff	?___flmul+2,___fladd@f1+2
  1019  000904  C021  F038         	movff	?___flmul+3,___fladd@f1+3
  1020  000908  ECCB  F006         	call	___fladd	;wreg free
  1021  00090C  C035  F062         	movff	?___fladd,_main$1490
  1022  000910  C036  F063         	movff	?___fladd+1,_main$1490+1
  1023  000914  C037  F064         	movff	?___fladd+2,_main$1490+2
  1024  000918  C038  F065         	movff	?___fladd+3,_main$1490+3
  1025                           
  1026                           ;main.c: 109: pump_signal1=2.298*res_error1 - 2.266*res_error2 + pump_signal2;
  1027  00091C  C062  F035         	movff	_main$1490,___fladd@f1
  1028  000920  C063  F036         	movff	_main$1490+1,___fladd@f1+1
  1029  000924  C064  F037         	movff	_main$1490+2,___fladd@f1+2
  1030  000928  C065  F038         	movff	_main$1490+3,___fladd@f1+3
  1031  00092C  C066  F039         	movff	main@pump_signal2,___fladd@f2
  1032  000930  C067  F03A         	movff	main@pump_signal2+1,___fladd@f2+1
  1033  000934  C068  F03B         	movff	main@pump_signal2+2,___fladd@f2+2
  1034  000938  C069  F03C         	movff	main@pump_signal2+3,___fladd@f2+3
  1035  00093C  ECCB  F006         	call	___fladd	;wreg free
  1036  000940  C035  F076         	movff	?___fladd,main@pump_signal1
  1037  000944  C036  F077         	movff	?___fladd+1,main@pump_signal1+1
  1038  000948  C037  F078         	movff	?___fladd+2,main@pump_signal1+2
  1039  00094C  C038  F079         	movff	?___fladd+3,main@pump_signal1+3
  1040                           
  1041                           ;main.c: 110: sample_flag = 0;
  1042  000950  0E00               	movlw	0
  1043  000952  0100               	movlb	0	; () banked
  1044  000954  6F83               	movwf	(_sample_flag+1)& (0+255),b
  1045  000956  0E00               	movlw	0
  1046  000958  0100               	movlb	0	; () banked
  1047  00095A  6F82               	movwf	_sample_flag& (0+255),b
  1048  00095C                     l2512:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;main.c: 111: }
  1052                           ;main.c: 117: if(PORTCbits.RC1 && tid >= (tid_old+50)) {
  1053  00095C  A282               	btfss	3970,1,c	;volatile
  1054  00095E  D016               	goto	l2520
  1055                           
  1056                           ; BSR set to: 0
  1057  000960  0E32               	movlw	50
  1058  000962  0100               	movlb	0	; () banked
  1059  000964  2573               	addwf	main@tid_old& (0+255),w,b
  1060  000966  6E44               	movwf	??_main& (0+255),c
  1061  000968  0E00               	movlw	0
  1062  00096A  0100               	movlb	0	; () banked
  1063  00096C  2174               	addwfc	(main@tid_old+1)& (0+255),w,b
  1064  00096E  6E45               	movwf	(??_main+1)& (0+255),c
  1065  000970  5044               	movf	??_main,w,c
  1066  000972  0100               	movlb	0	; () banked
  1067  000974  5D7A               	subwf	main@tid& (0+255),w,b
  1068  000976  5045               	movf	??_main+1,w,c
  1069  000978  0100               	movlb	0	; () banked
  1070  00097A  597B               	subwfb	(main@tid+1)& (0+255),w,b
  1071  00097C  A0D8               	btfss	status,0,c
  1072  00097E  D006               	goto	l2520
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;main.c: 120: rampknapp_flag = ~rampknapp_flag;
  1076  000980  0100               	movlb	0	; () banked
  1077  000982  1F8C               	comf	_rampknapp_flag& (0+255),f,b
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;main.c: 122: tid_old = tid;
  1081  000984  C07A  F073         	movff	main@tid,main@tid_old
  1082  000988  C07B  F074         	movff	main@tid+1,main@tid_old+1
  1083  00098C                     l2520:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 123: }
  1087                           ;main.c: 124: if(rampknapp_flag == 0xFF){
  1088  00098C  0100               	movlb	0	; () banked
  1089  00098E  298C               	incf	_rampknapp_flag& (0+255),w,b
  1090  000990  A4D8               	btfss	status,2,c
  1091  000992  D006               	goto	l2526
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;main.c: 125: lcd_goto(0x4E);
  1095  000994  0E4E               	movlw	78
  1096  000996  EC9B  F00D         	call	_lcd_goto
  1097                           
  1098                           ;main.c: 126: lcd_write(0x03);
  1099  00099A  0E03               	movlw	3
  1100  00099C  ECBF  F00C         	call	_lcd_write
  1101  0009A0                     l2526:
  1102                           
  1103                           ;main.c: 127: }
  1104                           ;main.c: 128: if(rampknapp_flag == 0){
  1105  0009A0  0100               	movlb	0	; () banked
  1106  0009A2  678C               	tstfsz	_rampknapp_flag& (0+255),b
  1107  0009A4  D006               	goto	l2532
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;main.c: 129: lcd_goto(0x4E);
  1111  0009A6  0E4E               	movlw	78
  1112  0009A8  EC9B  F00D         	call	_lcd_goto
  1113                           
  1114                           ;main.c: 130: lcd_write(0x20);
  1115  0009AC  0E20               	movlw	32
  1116  0009AE  ECBF  F00C         	call	_lcd_write
  1117  0009B2                     l2532:
  1118                           
  1119                           ;main.c: 131: }
  1120                           ;main.c: 135: set_Val = (char)(pot_Val/10.23);
  1121  0009B2  0E14               	movlw	20
  1122  0009B4  6E21               	movwf	___fldiv@f2,c
  1123  0009B6  0EAE               	movlw	174
  1124  0009B8  6E22               	movwf	___fldiv@f2+1,c
  1125  0009BA  0E23               	movlw	35
  1126  0009BC  6E23               	movwf	___fldiv@f2+2,c
  1127  0009BE  0E41               	movlw	65
  1128  0009C0  6E24               	movwf	___fldiv@f2+3,c
  1129  0009C2  C07E  F019         	movff	_pot_Val,___lwtofl@c
  1130  0009C6  C07F  F01A         	movff	_pot_Val+1,___lwtofl@c+1
  1131  0009CA  EC6A  F00D         	call	___lwtofl	;wreg free
  1132  0009CE  C019  F01D         	movff	?___lwtofl,___fldiv@f1
  1133  0009D2  C01A  F01E         	movff	?___lwtofl+1,___fldiv@f1+1
  1134  0009D6  C01B  F01F         	movff	?___lwtofl+2,___fldiv@f1+2
  1135  0009DA  C01C  F020         	movff	?___lwtofl+3,___fldiv@f1+3
  1136  0009DE  EC98  F009         	call	___fldiv	;wreg free
  1137  0009E2  C01D  F030         	movff	?___fldiv,___fltol@f1
  1138  0009E6  C01E  F031         	movff	?___fldiv+1,___fltol@f1+1
  1139  0009EA  C01F  F032         	movff	?___fldiv+2,___fltol@f1+2
  1140  0009EE  C020  F033         	movff	?___fldiv+3,___fltol@f1+3
  1141  0009F2  EC27  F00A         	call	___fltol	;wreg free
  1142  0009F6  C030  F044         	movff	?___fltol,??_main
  1143  0009FA  C031  F045         	movff	?___fltol+1,??_main+1
  1144  0009FE  C032  F046         	movff	?___fltol+2,??_main+2
  1145  000A02  C033  F047         	movff	?___fltol+3,??_main+3
  1146  000A06  5044               	movf	??_main,w,c
  1147  000A08  0100               	movlb	0	; () banked
  1148  000A0A  6F8D               	movwf	_set_Val& (0+255),b
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;main.c: 136: if(set_Val < 10) {
  1152  000A0C  0E0A               	movlw	10
  1153  000A0E  0100               	movlb	0	; () banked
  1154  000A10  5D8D               	subwf	_set_Val& (0+255),w,b
  1155  000A12  B0D8               	btfsc	status,0,c
  1156  000A14  D012               	goto	l2544
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;main.c: 137: lcd_goto(0x04);
  1160  000A16  0E04               	movlw	4
  1161  000A18  EC9B  F00D         	call	_lcd_goto
  1162                           
  1163                           ;main.c: 138: lcd_writesc(" ");
  1164  000A1C  0E06               	movlw	high (STR_8+14)
  1165  000A1E  6E11               	movwf	lcd_writesc@s+1,c
  1166  000A20  0E20               	movlw	low (STR_8+14)
  1167  000A22  6E10               	movwf	lcd_writesc@s,c
  1168  000A24  EC55  F00D         	call	_lcd_writesc	;wreg free
  1169                           
  1170                           ;main.c: 139: lcd_goto(0x05);
  1171  000A28  0E05               	movlw	5
  1172  000A2A  EC9B  F00D         	call	_lcd_goto
  1173                           
  1174                           ;main.c: 140: lcd_write(0x30+set_Val);
  1175  000A2E  0100               	movlb	0	; () banked
  1176  000A30  518D               	movf	_set_Val& (0+255),w,b
  1177  000A32  0F30               	addlw	48
  1178  000A34  ECBF  F00C         	call	_lcd_write
  1179                           
  1180                           ;main.c: 141: }
  1181  000A38  D030               	goto	l2558
  1182  000A3A                     l2544:
  1183                           
  1184                           ;main.c: 142: else if(set_Val < 100) {
  1185  000A3A  0E64               	movlw	100
  1186  000A3C  0100               	movlb	0	; () banked
  1187  000A3E  5D8D               	subwf	_set_Val& (0+255),w,b
  1188  000A40  B0D8               	btfsc	status,0,c
  1189  000A42  D02B               	goto	l2558
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;main.c: 143: lcd_goto(0x04);
  1193  000A44  0E04               	movlw	4
  1194  000A46  EC9B  F00D         	call	_lcd_goto
  1195                           
  1196                           ;main.c: 144: lcd_writesc(" ");
  1197  000A4A  0E06               	movlw	high (STR_8+14)
  1198  000A4C  6E11               	movwf	lcd_writesc@s+1,c
  1199  000A4E  0E20               	movlw	low (STR_8+14)
  1200  000A50  6E10               	movwf	lcd_writesc@s,c
  1201  000A52  EC55  F00D         	call	_lcd_writesc	;wreg free
  1202                           
  1203                           ;main.c: 145: lcd_goto(0x04);
  1204  000A56  0E04               	movlw	4
  1205  000A58  EC9B  F00D         	call	_lcd_goto
  1206                           
  1207                           ;main.c: 146: lcd_write(0x30+(set_Val/10));
  1208  000A5C  0100               	movlb	0	; () banked
  1209  000A5E  C08D  F00F         	movff	_set_Val,___awdiv@dividend
  1210  000A62  6A10               	clrf	___awdiv@dividend+1,c
  1211  000A64  0E00               	movlw	0
  1212  000A66  6E12               	movwf	___awdiv@divisor+1,c
  1213  000A68  0E0A               	movlw	10
  1214  000A6A  6E11               	movwf	___awdiv@divisor,c
  1215  000A6C  ECEA  F00B         	call	___awdiv	;wreg free
  1216  000A70  500F               	movf	?___awdiv,w,c
  1217  000A72  0F30               	addlw	48
  1218  000A74  ECBF  F00C         	call	_lcd_write
  1219                           
  1220                           ;main.c: 147: lcd_goto(0x05);
  1221  000A78  0E05               	movlw	5
  1222  000A7A  EC9B  F00D         	call	_lcd_goto
  1223                           
  1224                           ;main.c: 148: lcd_write(0x30+(set_Val%10));
  1225  000A7E  0100               	movlb	0	; () banked
  1226  000A80  C08D  F00F         	movff	_set_Val,___awmod@dividend
  1227  000A84  6A10               	clrf	___awmod@dividend+1,c
  1228  000A86  0E00               	movlw	0
  1229  000A88  6E12               	movwf	___awmod@divisor+1,c
  1230  000A8A  0E0A               	movlw	10
  1231  000A8C  6E11               	movwf	___awmod@divisor,c
  1232  000A8E  EC3C  F00C         	call	___awmod	;wreg free
  1233  000A92  500F               	movf	?___awmod,w,c
  1234  000A94  0F30               	addlw	48
  1235  000A96  ECBF  F00C         	call	_lcd_write
  1236  000A9A                     l2558:
  1237                           
  1238                           ;main.c: 149: }
  1239                           ;main.c: 152: act_Val = (char)(sensor_Val/10.23);
  1240  000A9A  0E14               	movlw	20
  1241  000A9C  6E21               	movwf	___fldiv@f2,c
  1242  000A9E  0EAE               	movlw	174
  1243  000AA0  6E22               	movwf	___fldiv@f2+1,c
  1244  000AA2  0E23               	movlw	35
  1245  000AA4  6E23               	movwf	___fldiv@f2+2,c
  1246  000AA6  0E41               	movlw	65
  1247  000AA8  6E24               	movwf	___fldiv@f2+3,c
  1248  000AAA  C071  F019         	movff	main@sensor_Val,___lwtofl@c
  1249  000AAE  C072  F01A         	movff	main@sensor_Val+1,___lwtofl@c+1
  1250  000AB2  EC6A  F00D         	call	___lwtofl	;wreg free
  1251  000AB6  C019  F01D         	movff	?___lwtofl,___fldiv@f1
  1252  000ABA  C01A  F01E         	movff	?___lwtofl+1,___fldiv@f1+1
  1253  000ABE  C01B  F01F         	movff	?___lwtofl+2,___fldiv@f1+2
  1254  000AC2  C01C  F020         	movff	?___lwtofl+3,___fldiv@f1+3
  1255  000AC6  EC98  F009         	call	___fldiv	;wreg free
  1256  000ACA  C01D  F030         	movff	?___fldiv,___fltol@f1
  1257  000ACE  C01E  F031         	movff	?___fldiv+1,___fltol@f1+1
  1258  000AD2  C01F  F032         	movff	?___fldiv+2,___fltol@f1+2
  1259  000AD6  C020  F033         	movff	?___fldiv+3,___fltol@f1+3
  1260  000ADA  EC27  F00A         	call	___fltol	;wreg free
  1261  000ADE  C030  F044         	movff	?___fltol,??_main
  1262  000AE2  C031  F045         	movff	?___fltol+1,??_main+1
  1263  000AE6  C032  F046         	movff	?___fltol+2,??_main+2
  1264  000AEA  C033  F047         	movff	?___fltol+3,??_main+3
  1265  000AEE  5044               	movf	??_main,w,c
  1266  000AF0  0100               	movlb	0	; () banked
  1267  000AF2  6F8A               	movwf	_act_Val& (0+255),b
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;main.c: 153: if(act_Val < 10) {
  1271  000AF4  0E0A               	movlw	10
  1272  000AF6  0100               	movlb	0	; () banked
  1273  000AF8  5D8A               	subwf	_act_Val& (0+255),w,b
  1274  000AFA  B0D8               	btfsc	status,0,c
  1275  000AFC  D012               	goto	l2570
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;main.c: 154: lcd_goto(0x44);
  1279  000AFE  0E44               	movlw	68
  1280  000B00  EC9B  F00D         	call	_lcd_goto
  1281                           
  1282                           ;main.c: 155: lcd_writesc(" ");
  1283  000B04  0E06               	movlw	high (STR_8+14)
  1284  000B06  6E11               	movwf	lcd_writesc@s+1,c
  1285  000B08  0E20               	movlw	low (STR_8+14)
  1286  000B0A  6E10               	movwf	lcd_writesc@s,c
  1287  000B0C  EC55  F00D         	call	_lcd_writesc	;wreg free
  1288                           
  1289                           ;main.c: 156: lcd_goto(0x45);
  1290  000B10  0E45               	movlw	69
  1291  000B12  EC9B  F00D         	call	_lcd_goto
  1292                           
  1293                           ;main.c: 157: lcd_write(0x30+act_Val);
  1294  000B16  0100               	movlb	0	; () banked
  1295  000B18  518A               	movf	_act_Val& (0+255),w,b
  1296  000B1A  0F30               	addlw	48
  1297  000B1C  ECBF  F00C         	call	_lcd_write
  1298                           
  1299                           ;main.c: 158: }
  1300  000B20  D030               	goto	l2584
  1301  000B22                     l2570:
  1302                           
  1303                           ;main.c: 159: else if(act_Val < 100) {
  1304  000B22  0E64               	movlw	100
  1305  000B24  0100               	movlb	0	; () banked
  1306  000B26  5D8A               	subwf	_act_Val& (0+255),w,b
  1307  000B28  B0D8               	btfsc	status,0,c
  1308  000B2A  D02B               	goto	l2584
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 160: lcd_goto(0x44);
  1312  000B2C  0E44               	movlw	68
  1313  000B2E  EC9B  F00D         	call	_lcd_goto
  1314                           
  1315                           ;main.c: 161: lcd_writesc(" ");
  1316  000B32  0E06               	movlw	high (STR_8+14)
  1317  000B34  6E11               	movwf	lcd_writesc@s+1,c
  1318  000B36  0E20               	movlw	low (STR_8+14)
  1319  000B38  6E10               	movwf	lcd_writesc@s,c
  1320  000B3A  EC55  F00D         	call	_lcd_writesc	;wreg free
  1321                           
  1322                           ;main.c: 162: lcd_goto(0x44);
  1323  000B3E  0E44               	movlw	68
  1324  000B40  EC9B  F00D         	call	_lcd_goto
  1325                           
  1326                           ;main.c: 163: lcd_write(0x30+(act_Val/10));
  1327  000B44  0100               	movlb	0	; () banked
  1328  000B46  C08A  F00F         	movff	_act_Val,___awdiv@dividend
  1329  000B4A  6A10               	clrf	___awdiv@dividend+1,c
  1330  000B4C  0E00               	movlw	0
  1331  000B4E  6E12               	movwf	___awdiv@divisor+1,c
  1332  000B50  0E0A               	movlw	10
  1333  000B52  6E11               	movwf	___awdiv@divisor,c
  1334  000B54  ECEA  F00B         	call	___awdiv	;wreg free
  1335  000B58  500F               	movf	?___awdiv,w,c
  1336  000B5A  0F30               	addlw	48
  1337  000B5C  ECBF  F00C         	call	_lcd_write
  1338                           
  1339                           ;main.c: 164: lcd_goto(0x45);
  1340  000B60  0E45               	movlw	69
  1341  000B62  EC9B  F00D         	call	_lcd_goto
  1342                           
  1343                           ;main.c: 165: lcd_write(0x30+(act_Val%10));
  1344  000B66  0100               	movlb	0	; () banked
  1345  000B68  C08A  F00F         	movff	_act_Val,___awmod@dividend
  1346  000B6C  6A10               	clrf	___awmod@dividend+1,c
  1347  000B6E  0E00               	movlw	0
  1348  000B70  6E12               	movwf	___awmod@divisor+1,c
  1349  000B72  0E0A               	movlw	10
  1350  000B74  6E11               	movwf	___awmod@divisor,c
  1351  000B76  EC3C  F00C         	call	___awmod	;wreg free
  1352  000B7A  500F               	movf	?___awmod,w,c
  1353  000B7C  0F30               	addlw	48
  1354  000B7E  ECBF  F00C         	call	_lcd_write
  1355  000B82                     l2584:
  1356                           
  1357                           ;main.c: 166: }
  1358                           ;main.c: 172: if(CM1CON0bits.C1OUT == 0) {
  1359  000B82  BC79               	btfsc	3961,6,c	;volatile
  1360  000B84  D006               	goto	l2590
  1361                           
  1362                           ;main.c: 173: lcd_goto(0x4F);
  1363  000B86  0E4F               	movlw	79
  1364  000B88  EC9B  F00D         	call	_lcd_goto
  1365                           
  1366                           ;main.c: 174: lcd_write(0x00);
  1367  000B8C  0E00               	movlw	0
  1368  000B8E  ECBF  F00C         	call	_lcd_write
  1369  000B92                     l2590:
  1370                           
  1371                           ;main.c: 175: }
  1372                           ;main.c: 178: if(CM1CON0bits.C1OUT == 1) {
  1373  000B92  AC79               	btfss	3961,6,c	;volatile
  1374  000B94  D019               	goto	l2608
  1375                           
  1376                           ;main.c: 179: if(blink_battery%2 == 1){
  1377  000B96  0100               	movlb	0	; () banked
  1378  000B98  A18B               	btfss	_blink_battery& (0+255),0,b
  1379  000B9A  D00D               	goto	l2602
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 180: lcd_goto(0x4F);
  1383  000B9C  0E4F               	movlw	79
  1384  000B9E  EC9B  F00D         	call	_lcd_goto
  1385                           
  1386                           ;main.c: 181: lcd_write(0x01);
  1387  000BA2  0E01               	movlw	1
  1388  000BA4  ECBF  F00C         	call	_lcd_write
  1389                           
  1390                           ;main.c: 182: if(blink_battery >10)
  1391  000BA8  0E0A               	movlw	10
  1392  000BAA  0100               	movlb	0	; () banked
  1393  000BAC  658B               	cpfsgt	_blink_battery& (0+255),b
  1394  000BAE  D003               	goto	l2602
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;main.c: 183: blink_battery = 1;
  1398  000BB0  0E01               	movlw	1
  1399  000BB2  0100               	movlb	0	; () banked
  1400  000BB4  6F8B               	movwf	_blink_battery& (0+255),b
  1401  000BB6                     l2602:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;main.c: 184: }
  1405                           ;main.c: 185: if(blink_battery%2 == 0){
  1406  000BB6  0100               	movlb	0	; () banked
  1407  000BB8  B18B               	btfsc	_blink_battery& (0+255),0,b
  1408  000BBA  D006               	goto	l2608
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;main.c: 186: lcd_goto(0x4F);
  1412  000BBC  0E4F               	movlw	79
  1413  000BBE  EC9B  F00D         	call	_lcd_goto
  1414                           
  1415                           ;main.c: 187: lcd_write(0x02);
  1416  000BC2  0E02               	movlw	2
  1417  000BC4  ECBF  F00C         	call	_lcd_write
  1418  000BC8                     l2608:
  1419                           
  1420                           ;main.c: 188: }
  1421                           ;main.c: 189: }
  1422                           ;main.c: 192: if(rampknapp_flag == 0){
  1423  000BC8  0100               	movlb	0	; () banked
  1424  000BCA  678C               	tstfsz	_rampknapp_flag& (0+255),b
  1425  000BCC  D004               	goto	l2612
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;main.c: 193: rampsignal = pot_Val;
  1429  000BCE  C07E  F080         	movff	_pot_Val,_rampsignal
  1430  000BD2  C07F  F081         	movff	_pot_Val+1,_rampsignal+1
  1431  000BD6                     l2612:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;main.c: 194: }
  1435                           ;main.c: 195: disp_rampsignal = (char)(rampsignal/10.23);
  1436  000BD6  0E14               	movlw	20
  1437  000BD8  6E21               	movwf	___fldiv@f2,c
  1438  000BDA  0EAE               	movlw	174
  1439  000BDC  6E22               	movwf	___fldiv@f2+1,c
  1440  000BDE  0E23               	movlw	35
  1441  000BE0  6E23               	movwf	___fldiv@f2+2,c
  1442  000BE2  0E41               	movlw	65
  1443  000BE4  6E24               	movwf	___fldiv@f2+3,c
  1444  000BE6  C080  F019         	movff	_rampsignal,___lwtofl@c
  1445  000BEA  C081  F01A         	movff	_rampsignal+1,___lwtofl@c+1
  1446  000BEE  EC6A  F00D         	call	___lwtofl	;wreg free
  1447  000BF2  C019  F01D         	movff	?___lwtofl,___fldiv@f1
  1448  000BF6  C01A  F01E         	movff	?___lwtofl+1,___fldiv@f1+1
  1449  000BFA  C01B  F01F         	movff	?___lwtofl+2,___fldiv@f1+2
  1450  000BFE  C01C  F020         	movff	?___lwtofl+3,___fldiv@f1+3
  1451  000C02  EC98  F009         	call	___fldiv	;wreg free
  1452  000C06  C01D  F030         	movff	?___fldiv,___fltol@f1
  1453  000C0A  C01E  F031         	movff	?___fldiv+1,___fltol@f1+1
  1454  000C0E  C01F  F032         	movff	?___fldiv+2,___fltol@f1+2
  1455  000C12  C020  F033         	movff	?___fldiv+3,___fltol@f1+3
  1456  000C16  EC27  F00A         	call	___fltol	;wreg free
  1457  000C1A  C030  F044         	movff	?___fltol,??_main
  1458  000C1E  C031  F045         	movff	?___fltol+1,??_main+1
  1459  000C22  C032  F046         	movff	?___fltol+2,??_main+2
  1460  000C26  C033  F047         	movff	?___fltol+3,??_main+3
  1461  000C2A  5044               	movf	??_main,w,c
  1462  000C2C  0100               	movlb	0	; () banked
  1463  000C2E  6F75               	movwf	main@disp_rampsignal& (0+255),b
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;main.c: 196: if(disp_rampsignal < 10) {
  1467  000C30  0E0A               	movlw	10
  1468  000C32  0100               	movlb	0	; () banked
  1469  000C34  5D75               	subwf	main@disp_rampsignal& (0+255),w,b
  1470  000C36  B0D8               	btfsc	status,0,c
  1471  000C38  D012               	goto	l2624
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;main.c: 197: lcd_goto(0x4A);
  1475  000C3A  0E4A               	movlw	74
  1476  000C3C  EC9B  F00D         	call	_lcd_goto
  1477                           
  1478                           ;main.c: 198: lcd_writesc(" ");
  1479  000C40  0E06               	movlw	high (STR_8+14)
  1480  000C42  6E11               	movwf	lcd_writesc@s+1,c
  1481  000C44  0E20               	movlw	low (STR_8+14)
  1482  000C46  6E10               	movwf	lcd_writesc@s,c
  1483  000C48  EC55  F00D         	call	_lcd_writesc	;wreg free
  1484                           
  1485                           ;main.c: 199: lcd_goto(0x4B);
  1486  000C4C  0E4B               	movlw	75
  1487  000C4E  EC9B  F00D         	call	_lcd_goto
  1488                           
  1489                           ;main.c: 200: lcd_write(0x30+disp_rampsignal);
  1490  000C52  0100               	movlb	0	; () banked
  1491  000C54  5175               	movf	main@disp_rampsignal& (0+255),w,b
  1492  000C56  0F30               	addlw	48
  1493  000C58  ECBF  F00C         	call	_lcd_write
  1494                           
  1495                           ;main.c: 201: }
  1496  000C5C  D030               	goto	l2638
  1497  000C5E                     l2624:
  1498                           
  1499                           ;main.c: 202: else if(disp_rampsignal < 100) {
  1500  000C5E  0E64               	movlw	100
  1501  000C60  0100               	movlb	0	; () banked
  1502  000C62  5D75               	subwf	main@disp_rampsignal& (0+255),w,b
  1503  000C64  B0D8               	btfsc	status,0,c
  1504  000C66  D02B               	goto	l2638
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;main.c: 203: lcd_goto(0x4A);
  1508  000C68  0E4A               	movlw	74
  1509  000C6A  EC9B  F00D         	call	_lcd_goto
  1510                           
  1511                           ;main.c: 204: lcd_writesc(" ");
  1512  000C6E  0E06               	movlw	high (STR_8+14)
  1513  000C70  6E11               	movwf	lcd_writesc@s+1,c
  1514  000C72  0E20               	movlw	low (STR_8+14)
  1515  000C74  6E10               	movwf	lcd_writesc@s,c
  1516  000C76  EC55  F00D         	call	_lcd_writesc	;wreg free
  1517                           
  1518                           ;main.c: 205: lcd_goto(0x4A);
  1519  000C7A  0E4A               	movlw	74
  1520  000C7C  EC9B  F00D         	call	_lcd_goto
  1521                           
  1522                           ;main.c: 206: lcd_write(0x30+(disp_rampsignal/10));
  1523  000C80  0100               	movlb	0	; () banked
  1524  000C82  C075  F00F         	movff	main@disp_rampsignal,___awdiv@dividend
  1525  000C86  6A10               	clrf	___awdiv@dividend+1,c
  1526  000C88  0E00               	movlw	0
  1527  000C8A  6E12               	movwf	___awdiv@divisor+1,c
  1528  000C8C  0E0A               	movlw	10
  1529  000C8E  6E11               	movwf	___awdiv@divisor,c
  1530  000C90  ECEA  F00B         	call	___awdiv	;wreg free
  1531  000C94  500F               	movf	?___awdiv,w,c
  1532  000C96  0F30               	addlw	48
  1533  000C98  ECBF  F00C         	call	_lcd_write
  1534                           
  1535                           ;main.c: 207: lcd_goto(0x4B);
  1536  000C9C  0E4B               	movlw	75
  1537  000C9E  EC9B  F00D         	call	_lcd_goto
  1538                           
  1539                           ;main.c: 208: lcd_write(0x30+(disp_rampsignal%10));
  1540  000CA2  0100               	movlb	0	; () banked
  1541  000CA4  C075  F00F         	movff	main@disp_rampsignal,___awmod@dividend
  1542  000CA8  6A10               	clrf	___awmod@dividend+1,c
  1543  000CAA  0E00               	movlw	0
  1544  000CAC  6E12               	movwf	___awmod@divisor+1,c
  1545  000CAE  0E0A               	movlw	10
  1546  000CB0  6E11               	movwf	___awmod@divisor,c
  1547  000CB2  EC3C  F00C         	call	___awmod	;wreg free
  1548  000CB6  500F               	movf	?___awmod,w,c
  1549  000CB8  0F30               	addlw	48
  1550  000CBA  ECBF  F00C         	call	_lcd_write
  1551  000CBE                     l2638:
  1552                           
  1553                           ;main.c: 209: }
  1554                           ;main.c: 214: if(PORTCbits.RC5 && tid >= (tid_old+50)) {
  1555  000CBE  AA82               	btfss	3970,5,c	;volatile
  1556  000CC0  D017               	goto	l2646
  1557  000CC2  0E32               	movlw	50
  1558  000CC4  0100               	movlb	0	; () banked
  1559  000CC6  2573               	addwf	main@tid_old& (0+255),w,b
  1560  000CC8  6E44               	movwf	??_main& (0+255),c
  1561  000CCA  0E00               	movlw	0
  1562  000CCC  0100               	movlb	0	; () banked
  1563  000CCE  2174               	addwfc	(main@tid_old+1)& (0+255),w,b
  1564  000CD0  6E45               	movwf	(??_main+1)& (0+255),c
  1565  000CD2  5044               	movf	??_main,w,c
  1566  000CD4  0100               	movlb	0	; () banked
  1567  000CD6  5D7A               	subwf	main@tid& (0+255),w,b
  1568  000CD8  5045               	movf	??_main+1,w,c
  1569  000CDA  0100               	movlb	0	; () banked
  1570  000CDC  597B               	subwfb	(main@tid+1)& (0+255),w,b
  1571  000CDE  A0D8               	btfss	status,0,c
  1572  000CE0  D007               	goto	l2646
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 215: timmar += 1;
  1576  000CE2  0100               	movlb	0	; () banked
  1577  000CE4  4B88               	infsnz	_timmar& (0+255),f,b
  1578  000CE6  2B89               	incf	(_timmar+1)& (0+255),f,b
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 216: tid_old = tid;
  1582  000CE8  C07A  F073         	movff	main@tid,main@tid_old
  1583  000CEC  C07B  F074         	movff	main@tid+1,main@tid_old+1
  1584  000CF0                     l2646:
  1585                           
  1586                           ;main.c: 217: }
  1587                           ;main.c: 218: if(PORTBbits.RB6 && tid >= (tid_old+50)) {
  1588  000CF0  AC81               	btfss	3969,6,c	;volatile
  1589  000CF2  D017               	goto	l2654
  1590  000CF4  0E32               	movlw	50
  1591  000CF6  0100               	movlb	0	; () banked
  1592  000CF8  2573               	addwf	main@tid_old& (0+255),w,b
  1593  000CFA  6E44               	movwf	??_main& (0+255),c
  1594  000CFC  0E00               	movlw	0
  1595  000CFE  0100               	movlb	0	; () banked
  1596  000D00  2174               	addwfc	(main@tid_old+1)& (0+255),w,b
  1597  000D02  6E45               	movwf	(??_main+1)& (0+255),c
  1598  000D04  5044               	movf	??_main,w,c
  1599  000D06  0100               	movlb	0	; () banked
  1600  000D08  5D7A               	subwf	main@tid& (0+255),w,b
  1601  000D0A  5045               	movf	??_main+1,w,c
  1602  000D0C  0100               	movlb	0	; () banked
  1603  000D0E  597B               	subwfb	(main@tid+1)& (0+255),w,b
  1604  000D10  A0D8               	btfss	status,0,c
  1605  000D12  D007               	goto	l2654
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 219: minuter += 1;
  1609  000D14  0100               	movlb	0	; () banked
  1610  000D16  4B7C               	infsnz	_minuter& (0+255),f,b
  1611  000D18  2B7D               	incf	(_minuter+1)& (0+255),f,b
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;main.c: 220: tid_old = tid;
  1615  000D1A  C07A  F073         	movff	main@tid,main@tid_old
  1616  000D1E  C07B  F074         	movff	main@tid+1,main@tid_old+1
  1617  000D22                     l2654:
  1618                           
  1619                           ;main.c: 221: }
  1620                           ;main.c: 222: if(PORTBbits.RB7 && tid >= (tid_old+50)) {
  1621  000D22  AE81               	btfss	3969,7,c	;volatile
  1622  000D24  D01A               	goto	l2662
  1623  000D26  0E32               	movlw	50
  1624  000D28  0100               	movlb	0	; () banked
  1625  000D2A  2573               	addwf	main@tid_old& (0+255),w,b
  1626  000D2C  6E44               	movwf	??_main& (0+255),c
  1627  000D2E  0E00               	movlw	0
  1628  000D30  0100               	movlb	0	; () banked
  1629  000D32  2174               	addwfc	(main@tid_old+1)& (0+255),w,b
  1630  000D34  6E45               	movwf	(??_main+1)& (0+255),c
  1631  000D36  5044               	movf	??_main,w,c
  1632  000D38  0100               	movlb	0	; () banked
  1633  000D3A  5D7A               	subwf	main@tid& (0+255),w,b
  1634  000D3C  5045               	movf	??_main+1,w,c
  1635  000D3E  0100               	movlb	0	; () banked
  1636  000D40  597B               	subwfb	(main@tid+1)& (0+255),w,b
  1637  000D42  A0D8               	btfss	status,0,c
  1638  000D44  D00A               	goto	l2662
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 223: sekunder = 0;
  1642  000D46  0E00               	movlw	0
  1643  000D48  0100               	movlb	0	; () banked
  1644  000D4A  6F85               	movwf	(_sekunder+1)& (0+255),b
  1645  000D4C  0E00               	movlw	0
  1646  000D4E  0100               	movlb	0	; () banked
  1647  000D50  6F84               	movwf	_sekunder& (0+255),b
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;main.c: 224: tid_old = tid;
  1651  000D52  C07A  F073         	movff	main@tid,main@tid_old
  1652  000D56  C07B  F074         	movff	main@tid+1,main@tid_old+1
  1653  000D5A                     l2662:
  1654                           
  1655                           ;main.c: 225: }
  1656                           ;main.c: 227: if(PORTBbits.RB6 && PORTBbits.RB7 == 1){
  1657  000D5A  BC81               	btfsc	3969,6,c	;volatile
  1658  000D5C  AE81               	btfss	3969,7,c	;volatile
  1659  000D5E  D012               	goto	l2668
  1660                           
  1661                           ;main.c: 228: sekunder = 0;
  1662  000D60  0E00               	movlw	0
  1663  000D62  0100               	movlb	0	; () banked
  1664  000D64  6F85               	movwf	(_sekunder+1)& (0+255),b
  1665  000D66  0E00               	movlw	0
  1666  000D68  0100               	movlb	0	; () banked
  1667  000D6A  6F84               	movwf	_sekunder& (0+255),b
  1668                           
  1669                           ;main.c: 229: minuter = 0;
  1670  000D6C  0E00               	movlw	0
  1671  000D6E  0100               	movlb	0	; () banked
  1672  000D70  6F7D               	movwf	(_minuter+1)& (0+255),b
  1673  000D72  0E00               	movlw	0
  1674  000D74  0100               	movlb	0	; () banked
  1675  000D76  6F7C               	movwf	_minuter& (0+255),b
  1676                           
  1677                           ;main.c: 230: timmar = 0;
  1678  000D78  0E00               	movlw	0
  1679  000D7A  0100               	movlb	0	; () banked
  1680  000D7C  6F89               	movwf	(_timmar+1)& (0+255),b
  1681  000D7E  0E00               	movlw	0
  1682  000D80  0100               	movlb	0	; () banked
  1683  000D82  6F88               	movwf	_timmar& (0+255),b
  1684  000D84                     l2668:
  1685                           
  1686                           ;main.c: 231: }
  1687                           ;main.c: 233: printTime(sekunder,minuter,timmar);
  1688  000D84  C07C  F017         	movff	_minuter,printTime@minuter
  1689  000D88  C088  F018         	movff	_timmar,printTime@timmar
  1690  000D8C  0100               	movlb	0	; () banked
  1691  000D8E  5184               	movf	_sekunder& (0+255),w,b
  1692  000D90  EC09  F009         	call	_printTime
  1693  000D94  D489               	goto	l2464
  1694  000D96                     __end_of_main:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _printTime *****************
  1702 ;; Defined at:
  1703 ;;		line 374 in file "main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  sekunder        1    wreg     unsigned char 
  1706 ;;  minuter         1   22[COMRAM] unsigned char 
  1707 ;;  timmar          1   23[COMRAM] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  sekunder        1   26[COMRAM] unsigned char 
  1710 ;;  var             2   33[COMRAM] int 
  1711 ;;  i               2   31[COMRAM] int 
  1712 ;;  pos2            2   29[COMRAM] int 
  1713 ;;  pos1            2   27[COMRAM] int 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;		None               void
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, prodl, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1723 ;;      Params:         2       0       0       0       0       0       0
  1724 ;;      Locals:         9       0       0       0       0       0       0
  1725 ;;      Temps:          2       0       0       0       0       0       0
  1726 ;;      Totals:        13       0       0       0       0       0       0
  1727 ;;Total ram usage:       13 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    3
  1730 ;; This function calls:
  1731 ;;		___awdiv
  1732 ;;		___awmod
  1733 ;;		_lcd_goto
  1734 ;;		_lcd_write
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text1
  1741  001212                     __ptext1:
  1742                           	opt stack 0
  1743  001212                     _printTime:
  1744                           	opt stack 27
  1745                           
  1746                           ;incstack = 0
  1747                           ;printTime@sekunder stored from wreg
  1748  001212  6E1B               	movwf	printTime@sekunder,c
  1749                           
  1750                           ;main.c: 376: int i = 0;
  1751  001214  0E00               	movlw	0
  1752  001216  6E21               	movwf	printTime@i+1,c
  1753  001218  0E00               	movlw	0
  1754  00121A  6E20               	movwf	printTime@i,c
  1755                           
  1756                           ;main.c: 377: int var = 0;
  1757  00121C  0E00               	movlw	0
  1758  00121E  6E23               	movwf	printTime@var+1,c
  1759  001220  0E00               	movlw	0
  1760  001222  6E22               	movwf	printTime@var,c
  1761                           
  1762                           ;main.c: 378: int pos1 = 0, pos2 = 0;
  1763  001224  0E00               	movlw	0
  1764  001226  6E1D               	movwf	printTime@pos1+1,c
  1765  001228  0E00               	movlw	0
  1766  00122A  6E1C               	movwf	printTime@pos1,c
  1767  00122C  0E00               	movlw	0
  1768  00122E  6E1F               	movwf	printTime@pos2+1,c
  1769  001230  0E00               	movlw	0
  1770  001232  6E1E               	movwf	printTime@pos2,c
  1771                           
  1772                           ;main.c: 379: for(i=0; i<3; i++){
  1773  001234  0E00               	movlw	0
  1774  001236  6E21               	movwf	printTime@i+1,c
  1775  001238  0E00               	movlw	0
  1776  00123A  6E20               	movwf	printTime@i,c
  1777  00123C  5021               	movf	printTime@i+1,w,c
  1778  00123E  0A80               	xorlw	128
  1779  001240  0F80               	addlw	-128
  1780  001242  0E03               	movlw	3
  1781  001244  B4D8               	btfsc	status,2,c
  1782  001246  5C20               	subwf	printTime@i,w,c
  1783  001248  B0D8               	btfsc	status,0,c
  1784  00124A  0012               	return	
  1785  00124C  D022               	goto	l2172
  1786  00124E                     l194:
  1787                           
  1788                           ;main.c: 382: var = timmar;
  1789  00124E  C018  F022         	movff	printTime@timmar,printTime@var
  1790  001252  6A23               	clrf	printTime@var+1,c
  1791                           
  1792                           ;main.c: 383: pos1 = 0x08;
  1793  001254  0E00               	movlw	0
  1794  001256  6E1D               	movwf	printTime@pos1+1,c
  1795  001258  0E08               	movlw	8
  1796  00125A  6E1C               	movwf	printTime@pos1,c
  1797                           
  1798                           ;main.c: 384: pos2 =0x09;
  1799  00125C  0E00               	movlw	0
  1800  00125E  6E1F               	movwf	printTime@pos2+1,c
  1801  001260  0E09               	movlw	9
  1802  001262  D015               	goto	L2
  1803  001264                     l196:
  1804                           
  1805                           ;main.c: 387: var = minuter;
  1806  001264  C017  F022         	movff	printTime@minuter,printTime@var
  1807  001268  6A23               	clrf	printTime@var+1,c
  1808                           
  1809                           ;main.c: 388: pos1 = 0x0B;
  1810  00126A  0E00               	movlw	0
  1811  00126C  6E1D               	movwf	printTime@pos1+1,c
  1812  00126E  0E0B               	movlw	11
  1813  001270  6E1C               	movwf	printTime@pos1,c
  1814                           
  1815                           ;main.c: 389: pos2= 0x0C;
  1816  001272  0E00               	movlw	0
  1817  001274  6E1F               	movwf	printTime@pos2+1,c
  1818  001276  0E0C               	movlw	12
  1819  001278  D00A               	goto	L2
  1820  00127A                     l197:
  1821                           
  1822                           ;main.c: 392: var = sekunder;
  1823  00127A  C01B  F022         	movff	printTime@sekunder,printTime@var
  1824  00127E  6A23               	clrf	printTime@var+1,c
  1825                           
  1826                           ;main.c: 393: pos1 = 0x0E;
  1827  001280  0E00               	movlw	0
  1828  001282  6E1D               	movwf	printTime@pos1+1,c
  1829  001284  0E0E               	movlw	14
  1830  001286  6E1C               	movwf	printTime@pos1,c
  1831                           
  1832                           ;main.c: 394: pos2 = 0x0F;
  1833  001288  0E00               	movlw	0
  1834  00128A  6E1F               	movwf	printTime@pos2+1,c
  1835  00128C  0E0F               	movlw	15
  1836  00128E                     L2:
  1837  00128E  6E1E               	movwf	printTime@pos2,c
  1838                           
  1839                           ;main.c: 395: break;
  1840  001290  D012               	goto	l2174
  1841  001292                     l2172:
  1842  001292  C020  F019         	movff	printTime@i,??_printTime
  1843  001296  C021  F01A         	movff	printTime@i+1,??_printTime+1
  1844                           
  1845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1846                           ; Switch size 1, requested type "space"
  1847                           ; Number of cases is 1, Range of values is 0 to 0
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte            4     3 (average)
  1851                           ;	Chosen strategy is simple_byte
  1852  00129A  501A               	movf	??_printTime+1,w,c
  1853  00129C  0A00               	xorlw	0	; case 0
  1854  00129E  A4D8               	btfss	status,2,c
  1855  0012A0  D00A               	goto	l2174
  1856                           
  1857                           ; Switch size 1, requested type "space"
  1858                           ; Number of cases is 3, Range of values is 0 to 2
  1859                           ; switch strategies available:
  1860                           ; Name         Instructions Cycles
  1861                           ; simple_byte           10     6 (average)
  1862                           ;	Chosen strategy is simple_byte
  1863  0012A2  5019               	movf	??_printTime,w,c
  1864  0012A4  0A00               	xorlw	0	; case 0
  1865  0012A6  B4D8               	btfsc	status,2,c
  1866  0012A8  D7D2               	goto	l194
  1867  0012AA  0A01               	xorlw	1	; case 1
  1868  0012AC  B4D8               	btfsc	status,2,c
  1869  0012AE  D7DA               	goto	l196
  1870  0012B0  0A03               	xorlw	3	; case 2
  1871  0012B2  B4D8               	btfsc	status,2,c
  1872  0012B4  D7E2               	goto	l197
  1873  0012B6                     l2174:
  1874                           
  1875                           ;main.c: 397: if(var < 10) {
  1876  0012B6  5023               	movf	printTime@var+1,w,c
  1877  0012B8  0A80               	xorlw	128
  1878  0012BA  6EF3               	movwf	prodl,c
  1879  0012BC  0E80               	movlw	128
  1880  0012BE  5CF3               	subwf	prodl,w,c
  1881  0012C0  0E0A               	movlw	10
  1882  0012C2  B4D8               	btfsc	status,2,c
  1883  0012C4  5C22               	subwf	printTime@var,w,c
  1884  0012C6  B0D8               	btfsc	status,0,c
  1885  0012C8  D00E               	goto	l2184
  1886                           
  1887                           ;main.c: 398: lcd_goto(pos1);
  1888  0012CA  501C               	movf	printTime@pos1,w,c
  1889  0012CC  EC9B  F00D         	call	_lcd_goto
  1890                           
  1891                           ;main.c: 399: lcd_write('0');
  1892  0012D0  0E30               	movlw	48
  1893  0012D2  ECBF  F00C         	call	_lcd_write
  1894                           
  1895                           ;main.c: 400: lcd_goto(pos2);
  1896  0012D6  501E               	movf	printTime@pos2,w,c
  1897  0012D8  EC9B  F00D         	call	_lcd_goto
  1898                           
  1899                           ;main.c: 401: lcd_write(0x30+var);
  1900  0012DC  5022               	movf	printTime@var,w,c
  1901  0012DE  0F30               	addlw	48
  1902  0012E0  ECBF  F00C         	call	_lcd_write
  1903                           
  1904                           ;main.c: 402: }
  1905  0012E4  D022               	goto	l2190
  1906  0012E6                     l2184:
  1907                           
  1908                           ;main.c: 403: else {
  1909                           ;main.c: 404: lcd_goto(pos1);
  1910  0012E6  501C               	movf	printTime@pos1,w,c
  1911  0012E8  EC9B  F00D         	call	_lcd_goto
  1912                           
  1913                           ;main.c: 405: lcd_write(0x30+(var/10));
  1914  0012EC  C022  F00F         	movff	printTime@var,___awdiv@dividend
  1915  0012F0  C023  F010         	movff	printTime@var+1,___awdiv@dividend+1
  1916  0012F4  0E00               	movlw	0
  1917  0012F6  6E12               	movwf	___awdiv@divisor+1,c
  1918  0012F8  0E0A               	movlw	10
  1919  0012FA  6E11               	movwf	___awdiv@divisor,c
  1920  0012FC  ECEA  F00B         	call	___awdiv	;wreg free
  1921  001300  500F               	movf	?___awdiv,w,c
  1922  001302  0F30               	addlw	48
  1923  001304  ECBF  F00C         	call	_lcd_write
  1924                           
  1925                           ;main.c: 406: lcd_goto(pos2);
  1926  001308  501E               	movf	printTime@pos2,w,c
  1927  00130A  EC9B  F00D         	call	_lcd_goto
  1928                           
  1929                           ;main.c: 407: lcd_write(0x30+(var%10));
  1930  00130E  C022  F00F         	movff	printTime@var,___awmod@dividend
  1931  001312  C023  F010         	movff	printTime@var+1,___awmod@dividend+1
  1932  001316  0E00               	movlw	0
  1933  001318  6E12               	movwf	___awmod@divisor+1,c
  1934  00131A  0E0A               	movlw	10
  1935  00131C  6E11               	movwf	___awmod@divisor,c
  1936  00131E  EC3C  F00C         	call	___awmod	;wreg free
  1937  001322  500F               	movf	?___awmod,w,c
  1938  001324  0F30               	addlw	48
  1939  001326  ECBF  F00C         	call	_lcd_write
  1940  00132A                     l2190:
  1941  00132A  4A20               	infsnz	printTime@i,f,c
  1942  00132C  2A21               	incf	printTime@i+1,f,c
  1943  00132E  D786               	goto	L3
  1944  001330                     __end_of_printTime:
  1945                           	opt stack 0
  1946                           tblptru	equ	0xFF8
  1947                           prodl	equ	0xFF3
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function ___awmod *****************
  1953 ;; Defined at:
  1954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  dividend        2   14[COMRAM] int 
  1957 ;;  divisor         2   16[COMRAM] int 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  sign            1   19[COMRAM] unsigned char 
  1960 ;;  counter         1   18[COMRAM] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2   14[COMRAM] int 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, prodl
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1970 ;;      Params:         4       0       0       0       0       0       0
  1971 ;;      Locals:         2       0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0
  1973 ;;      Totals:         6       0       0       0       0       0       0
  1974 ;;Total ram usage:        6 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;;		_printTime
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text2
  1986  001878                     __ptext2:
  1987                           	opt stack 0
  1988  001878                     ___awmod:
  1989                           	opt stack 28
  1990                           
  1991                           ;incstack = 0
  1992  001878  0E00               	movlw	0
  1993  00187A  6E14               	movwf	___awmod@sign,c
  1994  00187C  5010               	movf	___awmod@dividend+1,w,c
  1995  00187E  0A80               	xorlw	128
  1996  001880  6EF3               	movwf	prodl,c
  1997  001882  0E80               	movlw	128
  1998  001884  5CF3               	subwf	prodl,w,c
  1999  001886  0E00               	movlw	0
  2000  001888  B4D8               	btfsc	status,2,c
  2001  00188A  5C0F               	subwf	___awmod@dividend,w,c
  2002  00188C  B0D8               	btfsc	status,0,c
  2003  00188E  D006               	goto	l1952
  2004  001890  6C0F               	negf	___awmod@dividend,c
  2005  001892  1E10               	comf	___awmod@dividend+1,f,c
  2006  001894  B0D8               	btfsc	status,0,c
  2007  001896  2A10               	incf	___awmod@dividend+1,f,c
  2008  001898  0E01               	movlw	1
  2009  00189A  6E14               	movwf	___awmod@sign,c
  2010  00189C                     l1952:
  2011  00189C  5012               	movf	___awmod@divisor+1,w,c
  2012  00189E  0A80               	xorlw	128
  2013  0018A0  6EF3               	movwf	prodl,c
  2014  0018A2  0E80               	movlw	128
  2015  0018A4  5CF3               	subwf	prodl,w,c
  2016  0018A6  0E00               	movlw	0
  2017  0018A8  B4D8               	btfsc	status,2,c
  2018  0018AA  5C11               	subwf	___awmod@divisor,w,c
  2019  0018AC  B0D8               	btfsc	status,0,c
  2020  0018AE  D004               	goto	l1956
  2021  0018B0  6C11               	negf	___awmod@divisor,c
  2022  0018B2  1E12               	comf	___awmod@divisor+1,f,c
  2023  0018B4  B0D8               	btfsc	status,0,c
  2024  0018B6  2A12               	incf	___awmod@divisor+1,f,c
  2025  0018B8                     l1956:
  2026  0018B8  5012               	movf	___awmod@divisor+1,w,c
  2027  0018BA  1011               	iorwf	___awmod@divisor,w,c
  2028  0018BC  B4D8               	btfsc	status,2,c
  2029  0018BE  D018               	goto	l1972
  2030  0018C0  0E01               	movlw	1
  2031  0018C2  6E13               	movwf	___awmod@counter,c
  2032  0018C4  D004               	goto	l1962
  2033  0018C6                     l1960:
  2034  0018C6  90D8               	bcf	status,0,c
  2035  0018C8  3611               	rlcf	___awmod@divisor,f,c
  2036  0018CA  3612               	rlcf	___awmod@divisor+1,f,c
  2037  0018CC  2A13               	incf	___awmod@counter,f,c
  2038  0018CE                     l1962:
  2039  0018CE  AE12               	btfss	___awmod@divisor+1,7,c
  2040  0018D0  D7FA               	goto	l1960
  2041  0018D2                     l1964:
  2042  0018D2  5011               	movf	___awmod@divisor,w,c
  2043  0018D4  5C0F               	subwf	___awmod@dividend,w,c
  2044  0018D6  5012               	movf	___awmod@divisor+1,w,c
  2045  0018D8  5810               	subwfb	___awmod@dividend+1,w,c
  2046  0018DA  A0D8               	btfss	status,0,c
  2047  0018DC  D004               	goto	l1968
  2048  0018DE  5011               	movf	___awmod@divisor,w,c
  2049  0018E0  5E0F               	subwf	___awmod@dividend,f,c
  2050  0018E2  5012               	movf	___awmod@divisor+1,w,c
  2051  0018E4  5A10               	subwfb	___awmod@dividend+1,f,c
  2052  0018E6                     l1968:
  2053  0018E6  90D8               	bcf	status,0,c
  2054  0018E8  3212               	rrcf	___awmod@divisor+1,f,c
  2055  0018EA  3211               	rrcf	___awmod@divisor,f,c
  2056  0018EC  2E13               	decfsz	___awmod@counter,f,c
  2057  0018EE  D7F1               	goto	l1964
  2058  0018F0                     l1972:
  2059  0018F0  5014               	movf	___awmod@sign,w,c
  2060  0018F2  B4D8               	btfsc	status,2,c
  2061  0018F4  D004               	goto	l1976
  2062  0018F6  6C0F               	negf	___awmod@dividend,c
  2063  0018F8  1E10               	comf	___awmod@dividend+1,f,c
  2064  0018FA  B0D8               	btfsc	status,0,c
  2065  0018FC  2A10               	incf	___awmod@dividend+1,f,c
  2066  0018FE                     l1976:
  2067  0018FE  C00F  F00F         	movff	___awmod@dividend,?___awmod
  2068  001902  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  2069  001906  0012               	return	
  2070  001908                     __end_of___awmod:
  2071                           	opt stack 0
  2072                           tblptru	equ	0xFF8
  2073                           prodl	equ	0xFF3
  2074                           postinc0	equ	0xFEE
  2075                           wreg	equ	0xFE8
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function ___awdiv *****************
  2079 ;; Defined at:
  2080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  dividend        2   14[COMRAM] int 
  2083 ;;  divisor         2   16[COMRAM] int 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  quotient        2   20[COMRAM] int 
  2086 ;;  sign            1   19[COMRAM] unsigned char 
  2087 ;;  counter         1   18[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2   14[COMRAM] int 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, prodl
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2097 ;;      Params:         4       0       0       0       0       0       0
  2098 ;;      Locals:         4       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0
  2100 ;;      Totals:         8       0       0       0       0       0       0
  2101 ;;Total ram usage:        8 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;;		_printTime
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text3
  2113  0017D4                     __ptext3:
  2114                           	opt stack 0
  2115  0017D4                     ___awdiv:
  2116                           	opt stack 28
  2117                           
  2118                           ;incstack = 0
  2119  0017D4  0E00               	movlw	0
  2120  0017D6  6E14               	movwf	___awdiv@sign,c
  2121  0017D8  5012               	movf	___awdiv@divisor+1,w,c
  2122  0017DA  0A80               	xorlw	128
  2123  0017DC  6EF3               	movwf	prodl,c
  2124  0017DE  0E80               	movlw	128
  2125  0017E0  5CF3               	subwf	prodl,w,c
  2126  0017E2  0E00               	movlw	0
  2127  0017E4  B4D8               	btfsc	status,2,c
  2128  0017E6  5C11               	subwf	___awdiv@divisor,w,c
  2129  0017E8  B0D8               	btfsc	status,0,c
  2130  0017EA  D006               	goto	l1908
  2131  0017EC  6C11               	negf	___awdiv@divisor,c
  2132  0017EE  1E12               	comf	___awdiv@divisor+1,f,c
  2133  0017F0  B0D8               	btfsc	status,0,c
  2134  0017F2  2A12               	incf	___awdiv@divisor+1,f,c
  2135  0017F4  0E01               	movlw	1
  2136  0017F6  6E14               	movwf	___awdiv@sign,c
  2137  0017F8                     l1908:
  2138  0017F8  5010               	movf	___awdiv@dividend+1,w,c
  2139  0017FA  0A80               	xorlw	128
  2140  0017FC  6EF3               	movwf	prodl,c
  2141  0017FE  0E80               	movlw	128
  2142  001800  5CF3               	subwf	prodl,w,c
  2143  001802  0E00               	movlw	0
  2144  001804  B4D8               	btfsc	status,2,c
  2145  001806  5C0F               	subwf	___awdiv@dividend,w,c
  2146  001808  B0D8               	btfsc	status,0,c
  2147  00180A  D006               	goto	l1914
  2148  00180C  6C0F               	negf	___awdiv@dividend,c
  2149  00180E  1E10               	comf	___awdiv@dividend+1,f,c
  2150  001810  B0D8               	btfsc	status,0,c
  2151  001812  2A10               	incf	___awdiv@dividend+1,f,c
  2152  001814  0E01               	movlw	1
  2153  001816  1A14               	xorwf	___awdiv@sign,f,c
  2154  001818                     l1914:
  2155  001818  0E00               	movlw	0
  2156  00181A  6E16               	movwf	___awdiv@quotient+1,c
  2157  00181C  0E00               	movlw	0
  2158  00181E  6E15               	movwf	___awdiv@quotient,c
  2159  001820  5012               	movf	___awdiv@divisor+1,w,c
  2160  001822  1011               	iorwf	___awdiv@divisor,w,c
  2161  001824  B4D8               	btfsc	status,2,c
  2162  001826  D01C               	goto	l1936
  2163  001828  0E01               	movlw	1
  2164  00182A  6E13               	movwf	___awdiv@counter,c
  2165  00182C  D004               	goto	l1922
  2166  00182E                     l1920:
  2167  00182E  90D8               	bcf	status,0,c
  2168  001830  3611               	rlcf	___awdiv@divisor,f,c
  2169  001832  3612               	rlcf	___awdiv@divisor+1,f,c
  2170  001834  2A13               	incf	___awdiv@counter,f,c
  2171  001836                     l1922:
  2172  001836  AE12               	btfss	___awdiv@divisor+1,7,c
  2173  001838  D7FA               	goto	l1920
  2174  00183A                     l1924:
  2175  00183A  90D8               	bcf	status,0,c
  2176  00183C  3615               	rlcf	___awdiv@quotient,f,c
  2177  00183E  3616               	rlcf	___awdiv@quotient+1,f,c
  2178  001840  5011               	movf	___awdiv@divisor,w,c
  2179  001842  5C0F               	subwf	___awdiv@dividend,w,c
  2180  001844  5012               	movf	___awdiv@divisor+1,w,c
  2181  001846  5810               	subwfb	___awdiv@dividend+1,w,c
  2182  001848  A0D8               	btfss	status,0,c
  2183  00184A  D005               	goto	l1932
  2184  00184C  5011               	movf	___awdiv@divisor,w,c
  2185  00184E  5E0F               	subwf	___awdiv@dividend,f,c
  2186  001850  5012               	movf	___awdiv@divisor+1,w,c
  2187  001852  5A10               	subwfb	___awdiv@dividend+1,f,c
  2188  001854  8015               	bsf	___awdiv@quotient,0,c
  2189  001856                     l1932:
  2190  001856  90D8               	bcf	status,0,c
  2191  001858  3212               	rrcf	___awdiv@divisor+1,f,c
  2192  00185A  3211               	rrcf	___awdiv@divisor,f,c
  2193  00185C  2E13               	decfsz	___awdiv@counter,f,c
  2194  00185E  D7ED               	goto	l1924
  2195  001860                     l1936:
  2196  001860  5014               	movf	___awdiv@sign,w,c
  2197  001862  B4D8               	btfsc	status,2,c
  2198  001864  D004               	goto	l1940
  2199  001866  6C15               	negf	___awdiv@quotient,c
  2200  001868  1E16               	comf	___awdiv@quotient+1,f,c
  2201  00186A  B0D8               	btfsc	status,0,c
  2202  00186C  2A16               	incf	___awdiv@quotient+1,f,c
  2203  00186E                     l1940:
  2204  00186E  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  2205  001872  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  2206  001876  0012               	return	
  2207  001878                     __end_of___awdiv:
  2208                           	opt stack 0
  2209                           tblptru	equ	0xFF8
  2210                           prodl	equ	0xFF3
  2211                           postinc0	equ	0xFEE
  2212                           wreg	equ	0xFE8
  2213                           status	equ	0xFD8
  2214                           
  2215 ;; *************** function _lcd_init *****************
  2216 ;; Defined at:
  2217 ;;		line 100 in file "lcd.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;		None               void
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0
  2233 ;;      Temps:          1       0       0       0       0       0       0
  2234 ;;      Totals:         1       0       0       0       0       0       0
  2235 ;;Total ram usage:        1 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    3
  2238 ;; This function calls:
  2239 ;;		_lcd_clear
  2240 ;;		_lcd_cmd
  2241 ;;		_lcd_goto
  2242 ;;		_lcd_write
  2243 ;;		_lcd_writesc
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text4
  2250  001644                     __ptext4:
  2251                           	opt stack 0
  2252  001644                     _lcd_init:
  2253                           	opt stack 27
  2254                           
  2255                           ;incstack = 0
  2256  001644  948B               	bcf	3979,2,c	;volatile
  2257                           
  2258                           ;lcd.c: 102: LATCbits.LATC3 = 0;
  2259  001646  968B               	bcf	3979,3,c	;volatile
  2260                           
  2261                           ;lcd.c: 103: _delay((unsigned long)((40)*(4000000/4000.0)));
  2262  001648  0E34               	movlw	52
  2263  00164A  6E12               	movwf	??_lcd_init& (0+255),c
  2264  00164C  0EF2               	movlw	242
  2265  00164E                     u2557:
  2266  00164E  2EE8               	decfsz	wreg,f,c
  2267  001650  D7FE               	goto	u2557
  2268  001652  2E12               	decfsz	??_lcd_init& (0+255),f,c
  2269  001654  D7FC               	goto	u2557
  2270                           
  2271                           ;lcd.c: 104: LATBbits.LATB2 = 1;
  2272  001656  848A               	bsf	3978,2,c	;volatile
  2273                           
  2274                           ;lcd.c: 105: LATBbits.LATB3 = 1;
  2275  001658  868A               	bsf	3978,3,c	;volatile
  2276                           
  2277                           ;lcd.c: 106: LATBbits.LATB4 = 0;
  2278  00165A  988A               	bcf	3978,4,c	;volatile
  2279                           
  2280                           ;lcd.c: 107: LATBbits.LATB5 = 0;
  2281  00165C  9A8A               	bcf	3978,5,c	;volatile
  2282                           
  2283                           ;lcd.c: 108: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  2284  00165E  868B               	bsf	3979,3,c	;volatile
  2285  001660  F000               	nop	
  2286  001662  968B               	bcf	3979,3,c	;volatile
  2287                           
  2288                           ;lcd.c: 109: _delay((unsigned long)((6)*(4000000/4000.0)));
  2289  001664  0E08               	movlw	8
  2290  001666  6E12               	movwf	??_lcd_init& (0+255),c
  2291  001668  0ECA               	movlw	202
  2292  00166A                     u2567:
  2293  00166A  2EE8               	decfsz	wreg,f,c
  2294  00166C  D7FE               	goto	u2567
  2295  00166E  2E12               	decfsz	??_lcd_init& (0+255),f,c
  2296  001670  D7FC               	goto	u2567
  2297                           
  2298                           ;lcd.c: 110: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  2299  001672  868B               	bsf	3979,3,c	;volatile
  2300  001674  F000               	nop	
  2301  001676  968B               	bcf	3979,3,c	;volatile
  2302                           
  2303                           ;lcd.c: 111: _delay((unsigned long)((2)*(4000000/4000.0)));
  2304  001678  0E03               	movlw	3
  2305  00167A  6E12               	movwf	??_lcd_init& (0+255),c
  2306  00167C  0E98               	movlw	152
  2307  00167E                     u2577:
  2308  00167E  2EE8               	decfsz	wreg,f,c
  2309  001680  D7FE               	goto	u2577
  2310  001682  2E12               	decfsz	??_lcd_init& (0+255),f,c
  2311  001684  D7FC               	goto	u2577
  2312                           
  2313                           ;lcd.c: 112: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  2314  001686  868B               	bsf	3979,3,c	;volatile
  2315  001688  F000               	nop	
  2316  00168A  968B               	bcf	3979,3,c	;volatile
  2317                           
  2318                           ;lcd.c: 113: _delay((unsigned long)((2)*(4000000/4000.0)));
  2319  00168C  0E03               	movlw	3
  2320  00168E  6E12               	movwf	??_lcd_init& (0+255),c
  2321  001690  0E98               	movlw	152
  2322  001692                     u2587:
  2323  001692  2EE8               	decfsz	wreg,f,c
  2324  001694  D7FE               	goto	u2587
  2325  001696  2E12               	decfsz	??_lcd_init& (0+255),f,c
  2326  001698  D7FC               	goto	u2587
  2327                           
  2328                           ;lcd.c: 114: LATBbits.LATB2 = 0;
  2329  00169A  948A               	bcf	3978,2,c	;volatile
  2330                           
  2331                           ;lcd.c: 115: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  2332  00169C  868B               	bsf	3979,3,c	;volatile
  2333  00169E  F000               	nop	
  2334  0016A0  968B               	bcf	3979,3,c	;volatile
  2335                           
  2336                           ;lcd.c: 116: _delay((unsigned long)((2)*(4000000/4000.0)));
  2337  0016A2  0E03               	movlw	3
  2338  0016A4  6E12               	movwf	??_lcd_init& (0+255),c
  2339  0016A6  0E98               	movlw	152
  2340  0016A8                     u2597:
  2341  0016A8  2EE8               	decfsz	wreg,f,c
  2342  0016AA  D7FE               	goto	u2597
  2343  0016AC  2E12               	decfsz	??_lcd_init& (0+255),f,c
  2344  0016AE  D7FC               	goto	u2597
  2345                           
  2346                           ;lcd.c: 117: lcd_cmd(0b00101000);
  2347  0016B0  0E28               	movlw	40
  2348  0016B2  ECAB  F00D         	call	_lcd_cmd
  2349                           
  2350                           ;lcd.c: 118: lcd_cmd(0b00001100);
  2351  0016B6  0E0C               	movlw	12
  2352  0016B8  ECAB  F00D         	call	_lcd_cmd
  2353                           
  2354                           ;lcd.c: 119: lcd_cmd(0b00000110);
  2355  0016BC  0E06               	movlw	6
  2356  0016BE  ECAB  F00D         	call	_lcd_cmd
  2357                           
  2358                           ;lcd.c: 120: lcd_clear();
  2359  0016C2  EC8E  F00D         	call	_lcd_clear	;wreg free
  2360                           
  2361                           ;lcd.c: 122: lcd_goto(0);
  2362  0016C6  0E00               	movlw	0
  2363  0016C8  EC9B  F00D         	call	_lcd_goto
  2364                           
  2365                           ;lcd.c: 123: lcd_writesc("b r:  % 00:00:00");
  2366  0016CC  0E06               	movlw	high STR_7
  2367  0016CE  6E11               	movwf	lcd_writesc@s+1,c
  2368  0016D0  0E01               	movlw	low STR_7
  2369  0016D2  6E10               	movwf	lcd_writesc@s,c
  2370  0016D4  EC55  F00D         	call	_lcd_writesc	;wreg free
  2371                           
  2372                           ;lcd.c: 124: lcd_goto(0x40);
  2373  0016D8  0E40               	movlw	64
  2374  0016DA  EC9B  F00D         	call	_lcd_goto
  2375                           
  2376                           ;lcd.c: 125: lcd_writesc(" r:   % R:  %  ");
  2377  0016DE  0E06               	movlw	high STR_8
  2378  0016E0  6E11               	movwf	lcd_writesc@s+1,c
  2379  0016E2  0E12               	movlw	low STR_8
  2380  0016E4  6E10               	movwf	lcd_writesc@s,c
  2381  0016E6  EC55  F00D         	call	_lcd_writesc	;wreg free
  2382                           
  2383                           ;lcd.c: 126: lcd_goto(0x01);
  2384  0016EA  0E01               	movlw	1
  2385  0016EC  EC9B  F00D         	call	_lcd_goto
  2386                           
  2387                           ;lcd.c: 127: lcd_write(0xEF);
  2388  0016F0  0EEF               	movlw	239
  2389  0016F2  ECBF  F00C         	call	_lcd_write
  2390                           
  2391                           ;lcd.c: 128: lcd_goto(0x40);
  2392  0016F6  0E40               	movlw	64
  2393  0016F8  EC9B  F00D         	call	_lcd_goto
  2394                           
  2395                           ;lcd.c: 129: lcd_write(0xE1);
  2396  0016FC  0EE1               	movlw	225
  2397  0016FE  ECBF  F00C         	call	_lcd_write
  2398                           
  2399                           ;lcd.c: 130: lcd_goto(0x07);
  2400  001702  0E07               	movlw	7
  2401  001704  EC9B  F00D         	call	_lcd_goto
  2402                           
  2403                           ;lcd.c: 131: lcd_write(0xFF);
  2404  001708  0EFF               	movlw	255
  2405  00170A  ECBF  F00C         	call	_lcd_write
  2406                           
  2407                           ;lcd.c: 132: lcd_goto(0x47);
  2408  00170E  0E47               	movlw	71
  2409  001710  EC9B  F00D         	call	_lcd_goto
  2410                           
  2411                           ;lcd.c: 133: lcd_write(0xFF);
  2412  001714  0EFF               	movlw	255
  2413  001716  ECBF  F00C         	call	_lcd_write
  2414  00171A  0012               	return	
  2415  00171C                     __end_of_lcd_init:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           prodl	equ	0xFF3
  2419                           postinc0	equ	0xFEE
  2420                           wreg	equ	0xFE8
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _lcd_writesc *****************
  2424 ;; Defined at:
  2425 ;;		line 70 in file "lcd.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2428 ;;		 -> STR_8(16), STR_7(17), STR_6(2), STR_5(2), 
  2429 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2441 ;;      Params:         2       0       0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0
  2444 ;;      Totals:         2       0       0       0       0       0       0
  2445 ;;Total ram usage:        2 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    2
  2448 ;; This function calls:
  2449 ;;		_lcd_write
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;;		_lcd_init
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text5
  2457  001AAA                     __ptext5:
  2458                           	opt stack 0
  2459  001AAA                     _lcd_writesc:
  2460                           	opt stack 28
  2461                           
  2462                           ;incstack = 0
  2463  001AAA  D00A               	goto	l1846
  2464  001AAC                     l1842:
  2465                           
  2466                           ;lcd.c: 72: lcd_write(*s++);
  2467  001AAC  C010  FFF6         	movff	lcd_writesc@s,tblptrl
  2468  001AB0  C011  FFF7         	movff	lcd_writesc@s+1,tblptrh
  2469  001AB4                     	if	0	;tblptru may be non-zero
  2470  001AB4                     	endif
  2471  001AB4                     	if	0	;tblptru may be non-zero
  2472  001AB4                     	endif
  2473  001AB4  0008               	tblrd		*
  2474  001AB6  50F5               	movf	tablat,w,c
  2475  001AB8  ECBF  F00C         	call	_lcd_write
  2476  001ABC  4A10               	infsnz	lcd_writesc@s,f,c
  2477  001ABE  2A11               	incf	lcd_writesc@s+1,f,c
  2478  001AC0                     l1846:
  2479  001AC0  C010  FFF6         	movff	lcd_writesc@s,tblptrl
  2480  001AC4  C011  FFF7         	movff	lcd_writesc@s+1,tblptrh
  2481  001AC8                     	if	0	;tblptru may be non-zero
  2482  001AC8                     	endif
  2483  001AC8                     	if	0	;tblptru may be non-zero
  2484  001AC8                     	endif
  2485  001AC8  0008               	tblrd		*
  2486  001ACA  50F5               	movf	tablat,w,c
  2487  001ACC  0900               	iorlw	0
  2488  001ACE  B4D8               	btfsc	status,2,c
  2489  001AD0  0012               	return	
  2490  001AD2  D7EC               	goto	l1842
  2491  001AD4                     __end_of_lcd_writesc:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodl	equ	0xFF3
  2498                           postinc0	equ	0xFEE
  2499                           wreg	equ	0xFE8
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _lcd_goto *****************
  2503 ;; Defined at:
  2504 ;;		line 84 in file "lcd.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  pos             1    wreg     unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  pos             1   15[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2518 ;;      Params:         0       0       0       0       0       0       0
  2519 ;;      Locals:         1       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0
  2521 ;;      Totals:         1       0       0       0       0       0       0
  2522 ;;Total ram usage:        1 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		_lcd_write
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;;		_printTime
  2530 ;;		_lcd_init
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text6
  2535  001B36                     __ptext6:
  2536                           	opt stack 0
  2537  001B36                     _lcd_goto:
  2538                           	opt stack 27
  2539                           
  2540                           ;incstack = 0
  2541                           ;lcd_goto@pos stored from wreg
  2542  001B36  6E10               	movwf	lcd_goto@pos,c
  2543  001B38  948B               	bcf	3979,2,c	;volatile
  2544                           
  2545                           ;lcd.c: 86: lcd_write(0x80+pos);
  2546  001B3A  5010               	movf	lcd_goto@pos,w,c
  2547  001B3C  0F80               	addlw	128
  2548  001B3E  ECBF  F00C         	call	_lcd_write
  2549                           
  2550                           ;lcd.c: 87: LATCbits.LATC2=1;
  2551  001B42  848B               	bsf	3979,2,c	;volatile
  2552  001B44  0012               	return	
  2553  001B46                     __end_of_lcd_goto:
  2554                           	opt stack 0
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           prodl	equ	0xFF3
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _lcd_cmd *****************
  2565 ;; Defined at:
  2566 ;;		line 92 in file "lcd.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  command         1    wreg     unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  command         1   15[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         0       0       0       0       0       0       0
  2581 ;;      Locals:         1       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0
  2583 ;;      Totals:         1       0       0       0       0       0       0
  2584 ;;Total ram usage:        1 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    2
  2587 ;; This function calls:
  2588 ;;		_lcd_write
  2589 ;; This function is called by:
  2590 ;;		_lcd_init
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text7
  2595  001B56                     __ptext7:
  2596                           	opt stack 0
  2597  001B56                     _lcd_cmd:
  2598                           	opt stack 27
  2599                           
  2600                           ;incstack = 0
  2601                           ;lcd_cmd@command stored from wreg
  2602  001B56  6E10               	movwf	lcd_cmd@command,c
  2603  001B58  948B               	bcf	3979,2,c	;volatile
  2604                           
  2605                           ;lcd.c: 94: lcd_write(command);
  2606  001B5A  5010               	movf	lcd_cmd@command,w,c
  2607  001B5C  ECBF  F00C         	call	_lcd_write
  2608                           
  2609                           ;lcd.c: 95: LATCbits.LATC2=1;
  2610  001B60  848B               	bsf	3979,2,c	;volatile
  2611  001B62  0012               	return	
  2612  001B64                     __end_of_lcd_cmd:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodl	equ	0xFF3
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           status	equ	0xFD8
  2622                           
  2623 ;; *************** function _lcd_clear *****************
  2624 ;; Defined at:
  2625 ;;		line 61 in file "lcd.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;		None               void
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2639 ;;      Params:         0       0       0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0
  2641 ;;      Temps:          1       0       0       0       0       0       0
  2642 ;;      Totals:         1       0       0       0       0       0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    2
  2646 ;; This function calls:
  2647 ;;		_lcd_write
  2648 ;; This function is called by:
  2649 ;;		_lcd_init
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text8
  2654  001B1C                     __ptext8:
  2655                           	opt stack 0
  2656  001B1C                     _lcd_clear:
  2657                           	opt stack 27
  2658                           
  2659                           ;incstack = 0
  2660  001B1C  948B               	bcf	3979,2,c	;volatile
  2661                           
  2662                           ;lcd.c: 63: lcd_write(0x01);
  2663  001B1E  0E01               	movlw	1
  2664  001B20  ECBF  F00C         	call	_lcd_write
  2665                           
  2666                           ;lcd.c: 64: LATCbits.LATC2=1;
  2667  001B24  848B               	bsf	3979,2,c	;volatile
  2668                           
  2669                           ;lcd.c: 65: _delay((unsigned long)((2)*(4000000/4000.0)));
  2670  001B26  0E03               	movlw	3
  2671  001B28  6E10               	movwf	??_lcd_clear& (0+255),c
  2672  001B2A  0E98               	movlw	152
  2673  001B2C                     u2607:
  2674  001B2C  2EE8               	decfsz	wreg,f,c
  2675  001B2E  D7FE               	goto	u2607
  2676  001B30  2E10               	decfsz	??_lcd_clear& (0+255),f,c
  2677  001B32  D7FC               	goto	u2607
  2678  001B34  0012               	return	
  2679  001B36                     __end_of_lcd_clear:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           prodl	equ	0xFF3
  2686                           postinc0	equ	0xFEE
  2687                           wreg	equ	0xFE8
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _init *****************
  2691 ;; Defined at:
  2692 ;;		line 238 in file "main.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;		None               void
  2699 ;; Registers used:
  2700 ;;		wreg, status,2
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2706 ;;      Params:         0       0       0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text9
  2721  001908                     __ptext9:
  2722                           	opt stack 0
  2723  001908                     _init:
  2724                           	opt stack 29
  2725                           
  2726                           ;main.c: 240: ANSELA=0b00000000;
  2727                           
  2728                           ;incstack = 0
  2729  001908  0E00               	movlw	0
  2730  00190A  010F               	movlb	15	; () banked
  2731  00190C  6F38               	movwf	56,b	;volatile
  2732                           
  2733                           ;main.c: 241: ANSELB=0b00000011;
  2734  00190E  0E03               	movlw	3
  2735  001910  010F               	movlb	15	; () banked
  2736  001912  6F39               	movwf	57,b	;volatile
  2737                           
  2738                           ;main.c: 242: ANSELC=0b00000000;
  2739  001914  0E00               	movlw	0
  2740  001916  010F               	movlb	15	; () banked
  2741  001918  6F3A               	movwf	58,b	;volatile
  2742                           
  2743                           ;main.c: 243: TRISA=0b00000000;
  2744  00191A  0E00               	movlw	0
  2745  00191C  6E92               	movwf	3986,c	;volatile
  2746                           
  2747                           ;main.c: 244: TRISB=0b11000011;
  2748  00191E  0EC3               	movlw	195
  2749  001920  6E93               	movwf	3987,c	;volatile
  2750                           
  2751                           ;main.c: 245: TRISC=0b00100010;
  2752  001922  0E22               	movlw	34
  2753  001924  6E94               	movwf	3988,c	;volatile
  2754                           
  2755                           ; BSR set to: 15
  2756                           ;main.c: 246: TRISAbits.TRISA4=0;
  2757  001926  9892               	bcf	3986,4,c	;volatile
  2758                           
  2759                           ;main.c: 247: CCP5CON=0b00001100;
  2760  001928  0E0C               	movlw	12
  2761  00192A  010F               	movlb	15	; () banked
  2762  00192C  6F54               	movwf	84,b	;volatile
  2763                           
  2764                           ;main.c: 248: CCPTMRS1=0b00000001;
  2765  00192E  0E01               	movlw	1
  2766  001930  010F               	movlb	15	; () banked
  2767  001932  6F48               	movwf	72,b	;volatile
  2768                           
  2769                           ; BSR set to: 15
  2770                           ;main.c: 249: PR2=0xFF;
  2771  001934  68BB               	setf	4027,c	;volatile
  2772                           
  2773                           ;main.c: 250: T2CON=0x04;
  2774  001936  0E04               	movlw	4
  2775  001938  6EBA               	movwf	4026,c	;volatile
  2776                           
  2777                           ;main.c: 251: T1CON=0x1;
  2778  00193A  0E01               	movlw	1
  2779  00193C  6ECD               	movwf	4045,c	;volatile
  2780                           
  2781                           ;main.c: 252: TMR1H=0x3D;
  2782  00193E  0E3D               	movlw	61
  2783  001940  6ECF               	movwf	4047,c	;volatile
  2784                           
  2785                           ;main.c: 253: TMR1L=0x1D;
  2786  001942  0E1D               	movlw	29
  2787  001944  6ECE               	movwf	4046,c	;volatile
  2788                           
  2789                           ;main.c: 254: PIE1=0x1;
  2790  001946  0E01               	movlw	1
  2791  001948  6E9D               	movwf	3997,c	;volatile
  2792                           
  2793                           ;main.c: 255: IPR1=0x1;
  2794  00194A  0E01               	movlw	1
  2795  00194C  6E9F               	movwf	3999,c	;volatile
  2796                           
  2797                           ;main.c: 256: INTCON=0xC0;
  2798  00194E  0EC0               	movlw	192
  2799  001950  6EF2               	movwf	intcon,c	;volatile
  2800                           
  2801                           ;main.c: 257: ADCON0=0b0101001;
  2802  001952  0E29               	movlw	41
  2803  001954  6EC2               	movwf	4034,c	;volatile
  2804                           
  2805                           ;main.c: 258: ADCON1=0b00000000;
  2806  001956  0E00               	movlw	0
  2807  001958  6EC1               	movwf	4033,c	;volatile
  2808                           
  2809                           ;main.c: 259: ADCON2=0b10100100;
  2810  00195A  0EA4               	movlw	164
  2811  00195C  6EC0               	movwf	4032,c	;volatile
  2812                           
  2813                           ;main.c: 260: CM1CON0=0b10001100;
  2814  00195E  0E8C               	movlw	140
  2815  001960  6E79               	movwf	3961,c	;volatile
  2816                           
  2817                           ;main.c: 262: CM2CON1=0b00100000;
  2818  001962  0E20               	movlw	32
  2819  001964  6E77               	movwf	3959,c	;volatile
  2820                           
  2821                           ;main.c: 263: VREFCON0=0xF0;
  2822  001966  0EF0               	movlw	240
  2823  001968  010F               	movlb	15	; () banked
  2824  00196A  6F42               	movwf	66,b	;volatile
  2825                           
  2826                           ;main.c: 264: TXSTA1 = 0b00100100;
  2827  00196C  0E24               	movlw	36
  2828  00196E  6EAC               	movwf	4012,c	;volatile
  2829                           
  2830                           ;main.c: 265: RCSTA1 = 0b10000000;
  2831  001970  0E80               	movlw	128
  2832  001972  6EAB               	movwf	4011,c	;volatile
  2833                           
  2834                           ;main.c: 266: BAUDCON1 = 0b00000000;
  2835  001974  0E00               	movlw	0
  2836  001976  6EB8               	movwf	4024,c	;volatile
  2837                           
  2838                           ;main.c: 267: SPBRG1 = 12;
  2839  001978  0E0C               	movlw	12
  2840  00197A  6EAF               	movwf	4015,c	;volatile
  2841                           
  2842                           ; BSR set to: 15
  2843  00197C  0012               	return	
  2844  00197E                     __end_of_init:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function _create_char *****************
  2857 ;; Defined at:
  2858 ;;		line 271 in file "main.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  i               2   22[COMRAM] int 
  2863 ;;  i               2   20[COMRAM] int 
  2864 ;;  i               2   18[COMRAM] int 
  2865 ;;  i               2   16[COMRAM] int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;		None               void
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2875 ;;      Params:         0       0       0       0       0       0       0
  2876 ;;      Locals:         8       0       0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0
  2878 ;;      Totals:         8       0       0       0       0       0       0
  2879 ;;Total ram usage:        8 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    3
  2882 ;; This function calls:
  2883 ;;		_lcd_char
  2884 ;;		_lcd_write
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text10
  2891  000F96                     __ptext10:
  2892                           	opt stack 0
  2893  000F96                     _create_char:
  2894                           	opt stack 27
  2895                           
  2896                           ;main.c: 273: lcd_char(0x00);
  2897                           
  2898                           ; BSR set to: 15
  2899                           ;incstack = 0
  2900  000F96  0E00               	movlw	0
  2901  000F98  ECA3  F00D         	call	_lcd_char
  2902                           
  2903                           ;main.c: 274: lcd_write(0b01110);
  2904  000F9C  0E0E               	movlw	14
  2905  000F9E  ECBF  F00C         	call	_lcd_write
  2906                           
  2907                           ;main.c: 275: for(int i=1; i<=7; i++){
  2908  000FA2  0E00               	movlw	0
  2909  000FA4  6E12               	movwf	create_char@i+1,c
  2910  000FA6  0E01               	movlw	1
  2911  000FA8  6E11               	movwf	create_char@i,c
  2912  000FAA  5012               	movf	create_char@i+1,w,c
  2913  000FAC  0A80               	xorlw	128
  2914  000FAE  0F80               	addlw	-128
  2915  000FB0  0E08               	movlw	8
  2916  000FB2  B4D8               	btfsc	status,2,c
  2917  000FB4  5C11               	subwf	create_char@i,w,c
  2918  000FB6  B0D8               	btfsc	status,0,c
  2919  000FB8  D009               	goto	l2072
  2920                           
  2921                           ;main.c: 276: lcd_char(0x00+i);
  2922  000FBA  5011               	movf	create_char@i,w,c
  2923  000FBC  ECA3  F00D         	call	_lcd_char
  2924                           
  2925                           ;main.c: 277: lcd_write(0b11111);
  2926  000FC0  0E1F               	movlw	31
  2927  000FC2  ECBF  F00C         	call	_lcd_write
  2928  000FC6  4A11               	infsnz	create_char@i,f,c
  2929  000FC8  2A12               	incf	create_char@i+1,f,c
  2930  000FCA  D7EF               	goto	L4
  2931  000FCC                     l2072:
  2932                           
  2933                           ;main.c: 278: }
  2934                           ;main.c: 281: lcd_char(0x08);
  2935  000FCC  0E08               	movlw	8
  2936  000FCE  ECA3  F00D         	call	_lcd_char
  2937                           
  2938                           ;main.c: 282: lcd_write(0b01110);
  2939  000FD2  0E0E               	movlw	14
  2940  000FD4  ECBF  F00C         	call	_lcd_write
  2941                           
  2942                           ;main.c: 283: for(int i=1; i<6; i++){
  2943  000FD8  0E00               	movlw	0
  2944  000FDA  6E14               	movwf	create_char@i_774+1,c
  2945  000FDC  0E01               	movlw	1
  2946  000FDE  6E13               	movwf	create_char@i_774,c
  2947  000FE0  5014               	movf	create_char@i_774+1,w,c
  2948  000FE2  0A80               	xorlw	128
  2949  000FE4  0F80               	addlw	-128
  2950  000FE6  0E06               	movlw	6
  2951  000FE8  B4D8               	btfsc	status,2,c
  2952  000FEA  5C13               	subwf	create_char@i_774,w,c
  2953  000FEC  B0D8               	btfsc	status,0,c
  2954  000FEE  D00A               	goto	l2088
  2955                           
  2956                           ;main.c: 284: lcd_char(0x08+i);
  2957  000FF0  5013               	movf	create_char@i_774,w,c
  2958  000FF2  0F08               	addlw	8
  2959  000FF4  ECA3  F00D         	call	_lcd_char
  2960                           
  2961                           ;main.c: 285: lcd_write(0b10001);
  2962  000FF8  0E11               	movlw	17
  2963  000FFA  ECBF  F00C         	call	_lcd_write
  2964  000FFE  4A13               	infsnz	create_char@i_774,f,c
  2965  001000  2A14               	incf	create_char@i_774+1,f,c
  2966  001002  D7EE               	goto	L5
  2967  001004                     l2088:
  2968                           
  2969                           ;main.c: 286: }
  2970                           ;main.c: 287: for(int i=6; i<8; i++){
  2971  001004  0E00               	movlw	0
  2972  001006  6E16               	movwf	create_char@i_775+1,c
  2973  001008  0E06               	movlw	6
  2974  00100A  6E15               	movwf	create_char@i_775,c
  2975  00100C  5016               	movf	create_char@i_775+1,w,c
  2976  00100E  0A80               	xorlw	128
  2977  001010  0F80               	addlw	-128
  2978  001012  0E08               	movlw	8
  2979  001014  B4D8               	btfsc	status,2,c
  2980  001016  5C15               	subwf	create_char@i_775,w,c
  2981  001018  B0D8               	btfsc	status,0,c
  2982  00101A  D00A               	goto	l2102
  2983                           
  2984                           ;main.c: 288: lcd_char(0x08+i);
  2985  00101C  5015               	movf	create_char@i_775,w,c
  2986  00101E  0F08               	addlw	8
  2987  001020  ECA3  F00D         	call	_lcd_char
  2988                           
  2989                           ;main.c: 289: lcd_write(0b11111);
  2990  001024  0E1F               	movlw	31
  2991  001026  ECBF  F00C         	call	_lcd_write
  2992  00102A  4A15               	infsnz	create_char@i_775,f,c
  2993  00102C  2A16               	incf	create_char@i_775+1,f,c
  2994  00102E  D7EE               	goto	L6
  2995  001030                     l2102:
  2996                           
  2997                           ;main.c: 290: }
  2998                           ;main.c: 293: lcd_char(0x10);
  2999  001030  0E10               	movlw	16
  3000  001032  ECA3  F00D         	call	_lcd_char
  3001                           
  3002                           ;main.c: 294: lcd_write(0b01110);
  3003  001036  0E0E               	movlw	14
  3004  001038  ECBF  F00C         	call	_lcd_write
  3005                           
  3006                           ;main.c: 295: for(int i=1; i<7; i++){
  3007  00103C  0E00               	movlw	0
  3008  00103E  6E18               	movwf	create_char@i_776+1,c
  3009  001040  0E01               	movlw	1
  3010  001042  6E17               	movwf	create_char@i_776,c
  3011  001044  5018               	movf	create_char@i_776+1,w,c
  3012  001046  0A80               	xorlw	128
  3013  001048  0F80               	addlw	-128
  3014  00104A  0E07               	movlw	7
  3015  00104C  B4D8               	btfsc	status,2,c
  3016  00104E  5C17               	subwf	create_char@i_776,w,c
  3017  001050  B0D8               	btfsc	status,0,c
  3018  001052  D00A               	goto	l2118
  3019                           
  3020                           ;main.c: 296: lcd_char(0x10+i);
  3021  001054  5017               	movf	create_char@i_776,w,c
  3022  001056  0F10               	addlw	16
  3023  001058  ECA3  F00D         	call	_lcd_char
  3024                           
  3025                           ;main.c: 297: lcd_write(0b10001);
  3026  00105C  0E11               	movlw	17
  3027  00105E  ECBF  F00C         	call	_lcd_write
  3028  001062  4A17               	infsnz	create_char@i_776,f,c
  3029  001064  2A18               	incf	create_char@i_776+1,f,c
  3030  001066  D7EE               	goto	L7
  3031  001068                     l2118:
  3032                           
  3033                           ;main.c: 298: }
  3034                           ;main.c: 299: lcd_char(0x17);
  3035  001068  0E17               	movlw	23
  3036  00106A  ECA3  F00D         	call	_lcd_char
  3037                           
  3038                           ;main.c: 300: lcd_write(0b11111);
  3039  00106E  0E1F               	movlw	31
  3040  001070  ECBF  F00C         	call	_lcd_write
  3041                           
  3042                           ;main.c: 304: lcd_char(0x18);
  3043  001074  0E18               	movlw	24
  3044  001076  ECA3  F00D         	call	_lcd_char
  3045                           
  3046                           ;main.c: 305: lcd_write(0x00);
  3047  00107A  0E00               	movlw	0
  3048  00107C  ECBF  F00C         	call	_lcd_write
  3049                           
  3050                           ;main.c: 306: lcd_char(0x19);
  3051  001080  0E19               	movlw	25
  3052  001082  ECA3  F00D         	call	_lcd_char
  3053                           
  3054                           ;main.c: 307: lcd_write(0x00);
  3055  001086  0E00               	movlw	0
  3056  001088  ECBF  F00C         	call	_lcd_write
  3057                           
  3058                           ;main.c: 308: lcd_char(0x1A);
  3059  00108C  0E1A               	movlw	26
  3060  00108E  ECA3  F00D         	call	_lcd_char
  3061                           
  3062                           ;main.c: 309: lcd_write(0b00011);
  3063  001092  0E03               	movlw	3
  3064  001094  ECBF  F00C         	call	_lcd_write
  3065                           
  3066                           ;main.c: 310: lcd_char(0x1B);
  3067  001098  0E1B               	movlw	27
  3068  00109A  ECA3  F00D         	call	_lcd_char
  3069                           
  3070                           ;main.c: 311: lcd_write(0b00110);
  3071  00109E  0E06               	movlw	6
  3072  0010A0  ECBF  F00C         	call	_lcd_write
  3073                           
  3074                           ;main.c: 312: lcd_char(0x1C);
  3075  0010A4  0E1C               	movlw	28
  3076  0010A6  ECA3  F00D         	call	_lcd_char
  3077                           
  3078                           ;main.c: 313: lcd_write(0b01100);
  3079  0010AA  0E0C               	movlw	12
  3080  0010AC  ECBF  F00C         	call	_lcd_write
  3081                           
  3082                           ;main.c: 314: lcd_char(0x1D);
  3083  0010B0  0E1D               	movlw	29
  3084  0010B2  ECA3  F00D         	call	_lcd_char
  3085                           
  3086                           ;main.c: 315: lcd_write(0b11000);
  3087  0010B6  0E18               	movlw	24
  3088  0010B8  ECBF  F00C         	call	_lcd_write
  3089                           
  3090                           ;main.c: 316: lcd_char(0x1E);
  3091  0010BC  0E1E               	movlw	30
  3092  0010BE  ECA3  F00D         	call	_lcd_char
  3093                           
  3094                           ;main.c: 317: lcd_write(0x00);
  3095  0010C2  0E00               	movlw	0
  3096  0010C4  ECBF  F00C         	call	_lcd_write
  3097                           
  3098                           ;main.c: 318: lcd_char(0x1F);
  3099  0010C8  0E1F               	movlw	31
  3100  0010CA  ECA3  F00D         	call	_lcd_char
  3101                           
  3102                           ;main.c: 319: lcd_write(0x00);
  3103  0010CE  0E00               	movlw	0
  3104  0010D0  ECBF  F00C         	call	_lcd_write
  3105  0010D4  0012               	return	
  3106  0010D6                     __end_of_create_char:
  3107                           	opt stack 0
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodl	equ	0xFF3
  3113                           intcon	equ	0xFF2
  3114                           postinc0	equ	0xFEE
  3115                           wreg	equ	0xFE8
  3116                           status	equ	0xFD8
  3117                           
  3118 ;; *************** function _lcd_char *****************
  3119 ;; Defined at:
  3120 ;;		line 53 in file "lcd.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  cgram_addr      1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  cgram_addr      1   15[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;		None               void
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3134 ;;      Params:         0       0       0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    2
  3141 ;; This function calls:
  3142 ;;		_lcd_write
  3143 ;; This function is called by:
  3144 ;;		_create_char
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text11
  3149  001B46                     __ptext11:
  3150                           	opt stack 0
  3151  001B46                     _lcd_char:
  3152                           	opt stack 27
  3153                           
  3154                           ;incstack = 0
  3155                           ;lcd_char@cgram_addr stored from wreg
  3156  001B46  6E10               	movwf	lcd_char@cgram_addr,c
  3157                           
  3158                           ;lcd.c: 54: LATCbits.LATC2 = 0;
  3159  001B48  948B               	bcf	3979,2,c	;volatile
  3160                           
  3161                           ;lcd.c: 55: lcd_write(0x40+cgram_addr);
  3162  001B4A  5010               	movf	lcd_char@cgram_addr,w,c
  3163  001B4C  0F40               	addlw	64
  3164  001B4E  ECBF  F00C         	call	_lcd_write
  3165                           
  3166                           ;lcd.c: 56: LATCbits.LATC2=1;
  3167  001B52  848B               	bsf	3979,2,c	;volatile
  3168  001B54  0012               	return	
  3169  001B56                     __end_of_lcd_char:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _lcd_write *****************
  3182 ;; Defined at:
  3183 ;;		line 40 in file "lcd.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  c               1    wreg     unsigned char 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  c               1   14[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;		None               void
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3197 ;;      Params:         0       0       0       0       0       0       0
  3198 ;;      Locals:         1       0       0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0
  3200 ;;      Totals:         1       0       0       0       0       0       0
  3201 ;;Total ram usage:        1 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;;		_create_char
  3209 ;;		_printTime
  3210 ;;		_lcd_char
  3211 ;;		_lcd_clear
  3212 ;;		_lcd_writesc
  3213 ;;		_lcd_goto
  3214 ;;		_lcd_cmd
  3215 ;;		_lcd_init
  3216 ;;		_lcd_writesv
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text12
  3221  00197E                     __ptext12:
  3222                           	opt stack 0
  3223  00197E                     _lcd_write:
  3224                           	opt stack 28
  3225                           
  3226                           ;incstack = 0
  3227                           ;lcd_write@c stored from wreg
  3228  00197E  6E0F               	movwf	lcd_write@c,c
  3229  001980  AE0F               	btfss	lcd_write@c,7,c
  3230  001982  D002               	goto	l209
  3231  001984  8A8A               	bsf	3978,5,c	;volatile
  3232  001986  D001               	goto	l1804
  3233  001988                     l209:
  3234  001988  9A8A               	bcf	3978,5,c	;volatile
  3235  00198A                     l1804:
  3236                           
  3237                           ;lcd.c: 42: if(c & 0x40) LATBbits.LATB4=1; else LATBbits.LATB4=0;
  3238  00198A  AC0F               	btfss	lcd_write@c,6,c
  3239  00198C  D002               	goto	l211
  3240  00198E  888A               	bsf	3978,4,c	;volatile
  3241  001990  D001               	goto	l1808
  3242  001992                     l211:
  3243  001992  988A               	bcf	3978,4,c	;volatile
  3244  001994                     l1808:
  3245                           
  3246                           ;lcd.c: 43: if(c & 0x20) LATBbits.LATB3=1; else LATBbits.LATB3=0;
  3247  001994  AA0F               	btfss	lcd_write@c,5,c
  3248  001996  D002               	goto	l213
  3249  001998  868A               	bsf	3978,3,c	;volatile
  3250  00199A  D001               	goto	l1812
  3251  00199C                     l213:
  3252  00199C  968A               	bcf	3978,3,c	;volatile
  3253  00199E                     l1812:
  3254                           
  3255                           ;lcd.c: 44: if(c & 0x10) LATBbits.LATB2=1; else LATBbits.LATB2=0;
  3256  00199E  A80F               	btfss	lcd_write@c,4,c
  3257  0019A0  D002               	goto	l215
  3258  0019A2  848A               	bsf	3978,2,c	;volatile
  3259  0019A4  D001               	goto	l216
  3260  0019A6                     l215:
  3261  0019A6  948A               	bcf	3978,2,c	;volatile
  3262  0019A8                     l216:
  3263                           
  3264                           ;lcd.c: 45: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbit
      +                          s.LATC3=0;};
  3265  0019A8  868B               	bsf	3979,3,c	;volatile
  3266  0019AA  F000               	nop	
  3267  0019AC  968B               	bcf	3979,3,c	;volatile
  3268                           
  3269                           ;lcd.c: 46: if(c & 0x08) LATBbits.LATB5=1; else LATBbits.LATB5=0;
  3270  0019AE  A60F               	btfss	lcd_write@c,3,c
  3271  0019B0  D002               	goto	l217
  3272  0019B2  8A8A               	bsf	3978,5,c	;volatile
  3273  0019B4  D001               	goto	l1820
  3274  0019B6                     l217:
  3275  0019B6  9A8A               	bcf	3978,5,c	;volatile
  3276  0019B8                     l1820:
  3277                           
  3278                           ;lcd.c: 47: if(c & 0x04) LATBbits.LATB4=1; else LATBbits.LATB4=0;
  3279  0019B8  A40F               	btfss	lcd_write@c,2,c
  3280  0019BA  D002               	goto	l219
  3281  0019BC  888A               	bsf	3978,4,c	;volatile
  3282  0019BE  D001               	goto	l1824
  3283  0019C0                     l219:
  3284  0019C0  988A               	bcf	3978,4,c	;volatile
  3285  0019C2                     l1824:
  3286                           
  3287                           ;lcd.c: 48: if(c & 0x02) LATBbits.LATB3=1; else LATBbits.LATB3=0;
  3288  0019C2  A20F               	btfss	lcd_write@c,1,c
  3289  0019C4  D002               	goto	l221
  3290  0019C6  868A               	bsf	3978,3,c	;volatile
  3291  0019C8  D001               	goto	l1828
  3292  0019CA                     l221:
  3293  0019CA  968A               	bcf	3978,3,c	;volatile
  3294  0019CC                     l1828:
  3295                           
  3296                           ;lcd.c: 49: if(c & 0x01) LATBbits.LATB2=1; else LATBbits.LATB2=0;
  3297  0019CC  A00F               	btfss	lcd_write@c,0,c
  3298  0019CE  D002               	goto	l223
  3299  0019D0  848A               	bsf	3978,2,c	;volatile
  3300  0019D2  D001               	goto	l224
  3301  0019D4                     l223:
  3302  0019D4  948A               	bcf	3978,2,c	;volatile
  3303  0019D6                     l224:
  3304                           
  3305                           ;lcd.c: 50: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbit
      +                          s.LATC3=0;};
  3306  0019D6  868B               	bsf	3979,3,c	;volatile
  3307  0019D8  F000               	nop	
  3308  0019DA  968B               	bcf	3979,3,c	;volatile
  3309                           
  3310                           ;lcd.c: 51: _delay((unsigned long)((50)*(4000000/4000000.0)));
  3311  0019DC  0E10               	movlw	16
  3312  0019DE                     u2617:
  3313  0019DE  2EE8               	decfsz	wreg,f,c
  3314  0019E0  D7FE               	goto	u2617
  3315  0019E2  D000               	nop2		;nop
  3316  0019E4  0012               	return	
  3317  0019E6                     __end_of_lcd_write:
  3318                           	opt stack 0
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodl	equ	0xFF3
  3324                           intcon	equ	0xFF2
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function ___lwtofl *****************
  3330 ;; Defined at:
  3331 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtofl.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  c               2   24[COMRAM] unsigned int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  4   24[COMRAM] unsigned int 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3345 ;;      Params:         4       0       0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0
  3348 ;;      Totals:         4       0       0       0       0       0       0
  3349 ;;Total ram usage:        4 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    2
  3352 ;; This function calls:
  3353 ;;		___flpack
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text13
  3360  001AD4                     __ptext13:
  3361                           	opt stack 0
  3362  001AD4                     ___lwtofl:
  3363                           	opt stack 28
  3364                           
  3365                           ;incstack = 0
  3366  001AD4  C019  F00F         	movff	___lwtofl@c,___flpack@arg
  3367  001AD8  C01A  F010         	movff	___lwtofl@c+1,___flpack@arg+1
  3368  001ADC  6A11               	clrf	___flpack@arg+2,c
  3369  001ADE  6A12               	clrf	___flpack@arg+3,c
  3370  001AE0  0E96               	movlw	150
  3371  001AE2  6E13               	movwf	___flpack@exp,c
  3372  001AE4  0E00               	movlw	0
  3373  001AE6  6E14               	movwf	___flpack@sign,c
  3374  001AE8  ECA6  F00A         	call	___flpack	;wreg free
  3375  001AEC  C00F  F019         	movff	?___flpack,?___lwtofl
  3376  001AF0  C010  F01A         	movff	?___flpack+1,?___lwtofl+1
  3377  001AF4  C011  F01B         	movff	?___flpack+2,?___lwtofl+2
  3378  001AF8  C012  F01C         	movff	?___flpack+3,?___lwtofl+3
  3379  001AFC  0012               	return	
  3380  001AFE                     __end_of___lwtofl:
  3381                           	opt stack 0
  3382                           tblptru	equ	0xFF8
  3383                           tblptrh	equ	0xFF7
  3384                           tblptrl	equ	0xFF6
  3385                           tablat	equ	0xFF5
  3386                           prodl	equ	0xFF3
  3387                           intcon	equ	0xFF2
  3388                           postinc0	equ	0xFEE
  3389                           wreg	equ	0xFE8
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function ___fltol *****************
  3393 ;; Defined at:
  3394 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fltol.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  f1              4   47[COMRAM] unsigned int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  exp1            1   56[COMRAM] unsigned char 
  3399 ;;  sign1           1   55[COMRAM] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  4   47[COMRAM] long 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         4       0       0       0       0       0       0
  3410 ;;      Locals:         2       0       0       0       0       0       0
  3411 ;;      Temps:          4       0       0       0       0       0       0
  3412 ;;      Totals:        10       0       0       0       0       0       0
  3413 ;;Total ram usage:       10 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text14
  3424  00144E                     __ptext14:
  3425                           	opt stack 0
  3426  00144E                     ___fltol:
  3427                           	opt stack 29
  3428                           
  3429                           ;incstack = 0
  3430  00144E  C030  F034         	movff	___fltol@f1,??___fltol
  3431  001452  C031  F035         	movff	___fltol@f1+1,??___fltol+1
  3432  001456  C032  F036         	movff	___fltol@f1+2,??___fltol+2
  3433  00145A  C033  F037         	movff	___fltol@f1+3,??___fltol+3
  3434  00145E  0E18               	movlw	24
  3435  001460  D005               	goto	u2050
  3436  001462                     u2055:
  3437  001462  90D8               	bcf	status,0,c
  3438  001464  3237               	rrcf	??___fltol+3,f,c
  3439  001466  3236               	rrcf	??___fltol+2,f,c
  3440  001468  3235               	rrcf	??___fltol+1,f,c
  3441  00146A  3234               	rrcf	??___fltol,f,c
  3442  00146C                     u2050:
  3443  00146C  2EE8               	decfsz	wreg,f,c
  3444  00146E  D7F9               	goto	u2055
  3445  001470  5034               	movf	??___fltol,w,c
  3446  001472  6E39               	movwf	___fltol@exp1,c
  3447  001474  6639               	tstfsz	___fltol@exp1& (0+255),c
  3448  001476  D009               	goto	l2396
  3449  001478  0E00               	movlw	0
  3450  00147A  6E30               	movwf	?___fltol,c
  3451  00147C  0E00               	movlw	0
  3452  00147E  6E31               	movwf	?___fltol+1,c
  3453  001480  0E00               	movlw	0
  3454  001482  6E32               	movwf	?___fltol+2,c
  3455  001484  0E00               	movlw	0
  3456  001486  6E33               	movwf	?___fltol+3,c
  3457  001488  0012               	return	
  3458  00148A                     l2396:
  3459  00148A  C030  F034         	movff	___fltol@f1,??___fltol
  3460  00148E  C031  F035         	movff	___fltol@f1+1,??___fltol+1
  3461  001492  C032  F036         	movff	___fltol@f1+2,??___fltol+2
  3462  001496  C033  F037         	movff	___fltol@f1+3,??___fltol+3
  3463  00149A  0E20               	movlw	32
  3464  00149C  D005               	goto	u2070
  3465  00149E                     u2075:
  3466  00149E  90D8               	bcf	status,0,c
  3467  0014A0  3237               	rrcf	??___fltol+3,f,c
  3468  0014A2  3236               	rrcf	??___fltol+2,f,c
  3469  0014A4  3235               	rrcf	??___fltol+1,f,c
  3470  0014A6  3234               	rrcf	??___fltol,f,c
  3471  0014A8                     u2070:
  3472  0014A8  2EE8               	decfsz	wreg,f,c
  3473  0014AA  D7F9               	goto	u2075
  3474  0014AC  5034               	movf	??___fltol,w,c
  3475  0014AE  6E38               	movwf	___fltol@sign1,c
  3476  0014B0  8E32               	bsf	___fltol@f1+2,7,c
  3477  0014B2  0EFF               	movlw	255
  3478  0014B4  1630               	andwf	___fltol@f1,f,c
  3479  0014B6  0EFF               	movlw	255
  3480  0014B8  1631               	andwf	___fltol@f1+1,f,c
  3481  0014BA  0EFF               	movlw	255
  3482  0014BC  1632               	andwf	___fltol@f1+2,f,c
  3483  0014BE  0E00               	movlw	0
  3484  0014C0  1633               	andwf	___fltol@f1+3,f,c
  3485  0014C2  0E96               	movlw	150
  3486  0014C4  5E39               	subwf	___fltol@exp1,f,c
  3487  0014C6  AE39               	btfss	___fltol@exp1,7,c
  3488  0014C8  D019               	goto	l2416
  3489  0014CA  5039               	movf	___fltol@exp1,w,c
  3490  0014CC  0A80               	xorlw	128
  3491  0014CE  6E34               	movwf	??___fltol& (0+255),c
  3492  0014D0  0EE9               	movlw	233
  3493  0014D2  0A80               	xorlw	128
  3494  0014D4  5C34               	subwf	??___fltol,w,c
  3495  0014D6  B0D8               	btfsc	status,0,c
  3496  0014D8  D009               	goto	l2412
  3497  0014DA  0E00               	movlw	0
  3498  0014DC  6E30               	movwf	?___fltol,c
  3499  0014DE  0E00               	movlw	0
  3500  0014E0  6E31               	movwf	?___fltol+1,c
  3501  0014E2  0E00               	movlw	0
  3502  0014E4  6E32               	movwf	?___fltol+2,c
  3503  0014E6  0E00               	movlw	0
  3504  0014E8  6E33               	movwf	?___fltol+3,c
  3505  0014EA  0012               	return	
  3506  0014EC                     l2412:
  3507  0014EC  90D8               	bcf	status,0,c
  3508  0014EE  3233               	rrcf	___fltol@f1+3,f,c
  3509  0014F0  3232               	rrcf	___fltol@f1+2,f,c
  3510  0014F2  3231               	rrcf	___fltol@f1+1,f,c
  3511  0014F4  3230               	rrcf	___fltol@f1,f,c
  3512  0014F6  3E39               	incfsz	___fltol@exp1,f,c
  3513  0014F8  D7F9               	goto	l2412
  3514  0014FA  D014               	goto	l2426
  3515  0014FC                     l2416:
  3516  0014FC  0E1F               	movlw	31
  3517  0014FE  6439               	cpfsgt	___fltol@exp1,c
  3518  001500  D00F               	goto	l2424
  3519  001502  0E00               	movlw	0
  3520  001504  6E30               	movwf	?___fltol,c
  3521  001506  0E00               	movlw	0
  3522  001508  6E31               	movwf	?___fltol+1,c
  3523  00150A  0E00               	movlw	0
  3524  00150C  6E32               	movwf	?___fltol+2,c
  3525  00150E  0E00               	movlw	0
  3526  001510  6E33               	movwf	?___fltol+3,c
  3527  001512  0012               	return	
  3528  001514                     l2422:
  3529  001514  90D8               	bcf	status,0,c
  3530  001516  3630               	rlcf	___fltol@f1,f,c
  3531  001518  3631               	rlcf	___fltol@f1+1,f,c
  3532  00151A  3632               	rlcf	___fltol@f1+2,f,c
  3533  00151C  3633               	rlcf	___fltol@f1+3,f,c
  3534  00151E  0639               	decf	___fltol@exp1,f,c
  3535  001520                     l2424:
  3536  001520  6639               	tstfsz	___fltol@exp1,c
  3537  001522  D7F8               	goto	l2422
  3538  001524                     l2426:
  3539  001524  5038               	movf	___fltol@sign1,w,c
  3540  001526  B4D8               	btfsc	status,2,c
  3541  001528  D008               	goto	l2430
  3542  00152A  1E33               	comf	___fltol@f1+3,f,c
  3543  00152C  1E32               	comf	___fltol@f1+2,f,c
  3544  00152E  1E31               	comf	___fltol@f1+1,f,c
  3545  001530  6C30               	negf	___fltol@f1,c
  3546  001532  0E00               	movlw	0
  3547  001534  2231               	addwfc	___fltol@f1+1,f,c
  3548  001536  2232               	addwfc	___fltol@f1+2,f,c
  3549  001538  2233               	addwfc	___fltol@f1+3,f,c
  3550  00153A                     l2430:
  3551  00153A  C030  F030         	movff	___fltol@f1,?___fltol
  3552  00153E  C031  F031         	movff	___fltol@f1+1,?___fltol+1
  3553  001542  C032  F032         	movff	___fltol@f1+2,?___fltol+2
  3554  001546  C033  F033         	movff	___fltol@f1+3,?___fltol+3
  3555  00154A  0012               	return	
  3556  00154C                     __end_of___fltol:
  3557                           	opt stack 0
  3558                           tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           postinc0	equ	0xFEE
  3565                           wreg	equ	0xFE8
  3566                           status	equ	0xFD8
  3567                           
  3568 ;; *************** function ___flneg *****************
  3569 ;; Defined at:
  3570 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flneg.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  f1              4   48[COMRAM] long 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  4   48[COMRAM] long 
  3577 ;; Registers used:
  3578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3584 ;;      Params:         4       0       0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0
  3587 ;;      Totals:         4       0       0       0       0       0       0
  3588 ;;Total ram usage:        4 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    1
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text15
  3599  001A78                     __ptext15:
  3600                           	opt stack 0
  3601  001A78                     ___flneg:
  3602                           	opt stack 29
  3603                           
  3604                           ;incstack = 0
  3605  001A78  EE20  F031         	lfsr	2,___flneg@f1
  3606  001A7C  50DE               	movf	postinc2,w,c
  3607  001A7E  10DE               	iorwf	postinc2,w,c
  3608  001A80  10DE               	iorwf	postinc2,w,c
  3609  001A82  10DE               	iorwf	postinc2,w,c
  3610  001A84  B4D8               	btfsc	status,2,c
  3611  001A86  D008               	goto	l2386
  3612  001A88  0E00               	movlw	0
  3613  001A8A  1A31               	xorwf	___flneg@f1,f,c
  3614  001A8C  0E00               	movlw	0
  3615  001A8E  1A32               	xorwf	___flneg@f1+1,f,c
  3616  001A90  0E00               	movlw	0
  3617  001A92  1A33               	xorwf	___flneg@f1+2,f,c
  3618  001A94  0E80               	movlw	128
  3619  001A96  1A34               	xorwf	___flneg@f1+3,f,c
  3620  001A98                     l2386:
  3621  001A98  C031  F031         	movff	___flneg@f1,?___flneg
  3622  001A9C  C032  F032         	movff	___flneg@f1+1,?___flneg+1
  3623  001AA0  C033  F033         	movff	___flneg@f1+2,?___flneg+2
  3624  001AA4  C034  F034         	movff	___flneg@f1+3,?___flneg+3
  3625  001AA8  0012               	return	
  3626  001AAA                     __end_of___flneg:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodl	equ	0xFF3
  3633                           intcon	equ	0xFF2
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           postinc2	equ	0xFDE
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function ___flmul *****************
  3640 ;; Defined at:
  3641 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flmul.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  f1              4   29[COMRAM] long 
  3644 ;;  f2              4   33[COMRAM] long 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  f3_as_produc    4   42[COMRAM] unsigned long 
  3647 ;;  sign            1   47[COMRAM] unsigned char 
  3648 ;;  cntr            1   46[COMRAM] unsigned char 
  3649 ;;  exp             1   41[COMRAM] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  4   29[COMRAM] unsigned char 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3659 ;;      Params:         8       0       0       0       0       0       0
  3660 ;;      Locals:         7       0       0       0       0       0       0
  3661 ;;      Temps:          4       0       0       0       0       0       0
  3662 ;;      Totals:        19       0       0       0       0       0       0
  3663 ;;Total ram usage:       19 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    2
  3666 ;; This function calls:
  3667 ;;		___flpack
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text16
  3674  0010D6                     __ptext16:
  3675                           	opt stack 0
  3676  0010D6                     ___flmul:
  3677                           	opt stack 28
  3678                           
  3679                           ;incstack = 0
  3680  0010D6  C01E  F026         	movff	___flmul@f1,??___flmul
  3681  0010DA  C01F  F027         	movff	___flmul@f1+1,??___flmul+1
  3682  0010DE  C020  F028         	movff	___flmul@f1+2,??___flmul+2
  3683  0010E2  C021  F029         	movff	___flmul@f1+3,??___flmul+3
  3684  0010E6  0E18               	movlw	24
  3685  0010E8  D005               	goto	u1940
  3686  0010EA                     u1945:
  3687  0010EA  90D8               	bcf	status,0,c
  3688  0010EC  3229               	rrcf	??___flmul+3,f,c
  3689  0010EE  3228               	rrcf	??___flmul+2,f,c
  3690  0010F0  3227               	rrcf	??___flmul+1,f,c
  3691  0010F2  3226               	rrcf	??___flmul,f,c
  3692  0010F4                     u1940:
  3693  0010F4  2EE8               	decfsz	wreg,f,c
  3694  0010F6  D7F9               	goto	u1945
  3695  0010F8  5026               	movf	??___flmul,w,c
  3696  0010FA  6E2A               	movwf	___flmul@exp,c
  3697  0010FC  662A               	tstfsz	___flmul@exp& (0+255),c
  3698  0010FE  D009               	goto	l2314
  3699  001100  0E00               	movlw	0
  3700  001102  6E1E               	movwf	?___flmul,c
  3701  001104  0E00               	movlw	0
  3702  001106  6E1F               	movwf	?___flmul+1,c
  3703  001108  0E00               	movlw	0
  3704  00110A  6E20               	movwf	?___flmul+2,c
  3705  00110C  0E00               	movlw	0
  3706  00110E  6E21               	movwf	?___flmul+3,c
  3707  001110  0012               	return	
  3708  001112                     l2314:
  3709  001112  C022  F026         	movff	___flmul@f2,??___flmul
  3710  001116  C023  F027         	movff	___flmul@f2+1,??___flmul+1
  3711  00111A  C024  F028         	movff	___flmul@f2+2,??___flmul+2
  3712  00111E  C025  F029         	movff	___flmul@f2+3,??___flmul+3
  3713  001122  0E18               	movlw	24
  3714  001124  D005               	goto	u1960
  3715  001126                     u1965:
  3716  001126  90D8               	bcf	status,0,c
  3717  001128  3229               	rrcf	??___flmul+3,f,c
  3718  00112A  3228               	rrcf	??___flmul+2,f,c
  3719  00112C  3227               	rrcf	??___flmul+1,f,c
  3720  00112E  3226               	rrcf	??___flmul,f,c
  3721  001130                     u1960:
  3722  001130  2EE8               	decfsz	wreg,f,c
  3723  001132  D7F9               	goto	u1965
  3724  001134  5026               	movf	??___flmul,w,c
  3725  001136  6E30               	movwf	___flmul@sign,c
  3726  001138  6630               	tstfsz	___flmul@sign& (0+255),c
  3727  00113A  D009               	goto	l2320
  3728  00113C  0E00               	movlw	0
  3729  00113E  6E1E               	movwf	?___flmul,c
  3730  001140  0E00               	movlw	0
  3731  001142  6E1F               	movwf	?___flmul+1,c
  3732  001144  0E00               	movlw	0
  3733  001146  6E20               	movwf	?___flmul+2,c
  3734  001148  0E00               	movlw	0
  3735  00114A  6E21               	movwf	?___flmul+3,c
  3736  00114C  0012               	return	
  3737  00114E                     l2320:
  3738  00114E  5030               	movf	___flmul@sign,w,c
  3739  001150  0F7B               	addlw	123
  3740  001152  262A               	addwf	___flmul@exp,f,c
  3741  001154  C021  F030         	movff	___flmul@f1+3,___flmul@sign
  3742  001158  5025               	movf	___flmul@f2+3,w,c
  3743  00115A  1A30               	xorwf	___flmul@sign,f,c
  3744  00115C  0E80               	movlw	128
  3745  00115E  1630               	andwf	___flmul@sign,f,c
  3746  001160  8E20               	bsf	___flmul@f1+2,7,c
  3747  001162  8E24               	bsf	___flmul@f2+2,7,c
  3748  001164  0EFF               	movlw	255
  3749  001166  1622               	andwf	___flmul@f2,f,c
  3750  001168  0EFF               	movlw	255
  3751  00116A  1623               	andwf	___flmul@f2+1,f,c
  3752  00116C  0EFF               	movlw	255
  3753  00116E  1624               	andwf	___flmul@f2+2,f,c
  3754  001170  0E00               	movlw	0
  3755  001172  1625               	andwf	___flmul@f2+3,f,c
  3756  001174  0E00               	movlw	0
  3757  001176  6E2B               	movwf	___flmul@f3_as_product,c
  3758  001178  0E00               	movlw	0
  3759  00117A  6E2C               	movwf	___flmul@f3_as_product+1,c
  3760  00117C  0E00               	movlw	0
  3761  00117E  6E2D               	movwf	___flmul@f3_as_product+2,c
  3762  001180  0E00               	movlw	0
  3763  001182  6E2E               	movwf	___flmul@f3_as_product+3,c
  3764  001184  0E07               	movlw	7
  3765  001186  6E2F               	movwf	___flmul@cntr,c
  3766  001188                     l2332:
  3767  001188  A01E               	btfss	___flmul@f1,0,c
  3768  00118A  D008               	goto	l2336
  3769  00118C  5022               	movf	___flmul@f2,w,c
  3770  00118E  262B               	addwf	___flmul@f3_as_product,f,c
  3771  001190  5023               	movf	___flmul@f2+1,w,c
  3772  001192  222C               	addwfc	___flmul@f3_as_product+1,f,c
  3773  001194  5024               	movf	___flmul@f2+2,w,c
  3774  001196  222D               	addwfc	___flmul@f3_as_product+2,f,c
  3775  001198  5025               	movf	___flmul@f2+3,w,c
  3776  00119A  222E               	addwfc	___flmul@f3_as_product+3,f,c
  3777  00119C                     l2336:
  3778  00119C  90D8               	bcf	status,0,c
  3779  00119E  3221               	rrcf	___flmul@f1+3,f,c
  3780  0011A0  3220               	rrcf	___flmul@f1+2,f,c
  3781  0011A2  321F               	rrcf	___flmul@f1+1,f,c
  3782  0011A4  321E               	rrcf	___flmul@f1,f,c
  3783  0011A6  90D8               	bcf	status,0,c
  3784  0011A8  3622               	rlcf	___flmul@f2,f,c
  3785  0011AA  3623               	rlcf	___flmul@f2+1,f,c
  3786  0011AC  3624               	rlcf	___flmul@f2+2,f,c
  3787  0011AE  3625               	rlcf	___flmul@f2+3,f,c
  3788  0011B0  2E2F               	decfsz	___flmul@cntr,f,c
  3789  0011B2  D7EA               	goto	l2332
  3790  0011B4  0E11               	movlw	17
  3791  0011B6  6E2F               	movwf	___flmul@cntr,c
  3792  0011B8                     l2344:
  3793  0011B8  A01E               	btfss	___flmul@f1,0,c
  3794  0011BA  D008               	goto	l2348
  3795  0011BC  5022               	movf	___flmul@f2,w,c
  3796  0011BE  262B               	addwf	___flmul@f3_as_product,f,c
  3797  0011C0  5023               	movf	___flmul@f2+1,w,c
  3798  0011C2  222C               	addwfc	___flmul@f3_as_product+1,f,c
  3799  0011C4  5024               	movf	___flmul@f2+2,w,c
  3800  0011C6  222D               	addwfc	___flmul@f3_as_product+2,f,c
  3801  0011C8  5025               	movf	___flmul@f2+3,w,c
  3802  0011CA  222E               	addwfc	___flmul@f3_as_product+3,f,c
  3803  0011CC                     l2348:
  3804  0011CC  90D8               	bcf	status,0,c
  3805  0011CE  3221               	rrcf	___flmul@f1+3,f,c
  3806  0011D0  3220               	rrcf	___flmul@f1+2,f,c
  3807  0011D2  321F               	rrcf	___flmul@f1+1,f,c
  3808  0011D4  321E               	rrcf	___flmul@f1,f,c
  3809  0011D6  90D8               	bcf	status,0,c
  3810  0011D8  322E               	rrcf	___flmul@f3_as_product+3,f,c
  3811  0011DA  322D               	rrcf	___flmul@f3_as_product+2,f,c
  3812  0011DC  322C               	rrcf	___flmul@f3_as_product+1,f,c
  3813  0011DE  322B               	rrcf	___flmul@f3_as_product,f,c
  3814  0011E0  2E2F               	decfsz	___flmul@cntr,f,c
  3815  0011E2  D7EA               	goto	l2344
  3816  0011E4  C02B  F00F         	movff	___flmul@f3_as_product,___flpack@arg
  3817  0011E8  C02C  F010         	movff	___flmul@f3_as_product+1,___flpack@arg+1
  3818  0011EC  C02D  F011         	movff	___flmul@f3_as_product+2,___flpack@arg+2
  3819  0011F0  C02E  F012         	movff	___flmul@f3_as_product+3,___flpack@arg+3
  3820  0011F4  C02A  F013         	movff	___flmul@exp,___flpack@exp
  3821  0011F8  C030  F014         	movff	___flmul@sign,___flpack@sign
  3822  0011FC  ECA6  F00A         	call	___flpack	;wreg free
  3823  001200  C00F  F01E         	movff	?___flpack,?___flmul
  3824  001204  C010  F01F         	movff	?___flpack+1,?___flmul+1
  3825  001208  C011  F020         	movff	?___flpack+2,?___flmul+2
  3826  00120C  C012  F021         	movff	?___flpack+3,?___flmul+3
  3827  001210  0012               	return	
  3828  001212                     __end_of___flmul:
  3829                           	opt stack 0
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           prodl	equ	0xFF3
  3835                           intcon	equ	0xFF2
  3836                           postinc0	equ	0xFEE
  3837                           wreg	equ	0xFE8
  3838                           postinc2	equ	0xFDE
  3839                           status	equ	0xFD8
  3840                           
  3841 ;; *************** function ___flge *****************
  3842 ;; Defined at:
  3843 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flge.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  ff1             4   14[COMRAM] unsigned char 
  3846 ;;  ff2             4   18[COMRAM] unsigned char 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;		None               void
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3858 ;;      Params:         8       0       0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0
  3860 ;;      Temps:          4       0       0       0       0       0       0
  3861 ;;      Totals:        12       0       0       0       0       0       0
  3862 ;;Total ram usage:       12 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text17
  3873  00171C                     __ptext17:
  3874                           	opt stack 0
  3875  00171C                     ___flge:
  3876                           	opt stack 29
  3877                           
  3878                           ;incstack = 0
  3879  00171C  AE12               	btfss	___flge@ff1+3,7,c
  3880  00171E  D01D               	goto	l2372
  3881  001720  C00F  F017         	movff	___flge@ff1,??___flge
  3882  001724  C010  F018         	movff	___flge@ff1+1,??___flge+1
  3883  001728  C011  F019         	movff	___flge@ff1+2,??___flge+2
  3884  00172C  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  3885  001730  1E17               	comf	??___flge,f,c
  3886  001732  1E18               	comf	??___flge+1,f,c
  3887  001734  1E19               	comf	??___flge+2,f,c
  3888  001736  1E1A               	comf	??___flge+3,f,c
  3889  001738  2A17               	incf	??___flge,f,c
  3890  00173A  0E00               	movlw	0
  3891  00173C  2218               	addwfc	??___flge+1,f,c
  3892  00173E  2219               	addwfc	??___flge+2,f,c
  3893  001740  221A               	addwfc	??___flge+3,f,c
  3894  001742  0E00               	movlw	0
  3895  001744  2417               	addwf	??___flge,w,c
  3896  001746  6E0F               	movwf	___flge@ff1,c
  3897  001748  0E00               	movlw	0
  3898  00174A  2018               	addwfc	??___flge+1,w,c
  3899  00174C  6E10               	movwf	___flge@ff1+1,c
  3900  00174E  0E00               	movlw	0
  3901  001750  2019               	addwfc	??___flge+2,w,c
  3902  001752  6E11               	movwf	___flge@ff1+2,c
  3903  001754  0E80               	movlw	128
  3904  001756  201A               	addwfc	??___flge+3,w,c
  3905  001758  6E12               	movwf	___flge@ff1+3,c
  3906  00175A                     l2372:
  3907  00175A  AE16               	btfss	___flge@ff2+3,7,c
  3908  00175C  D01D               	goto	l537
  3909  00175E  C013  F017         	movff	___flge@ff2,??___flge
  3910  001762  C014  F018         	movff	___flge@ff2+1,??___flge+1
  3911  001766  C015  F019         	movff	___flge@ff2+2,??___flge+2
  3912  00176A  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  3913  00176E  1E17               	comf	??___flge,f,c
  3914  001770  1E18               	comf	??___flge+1,f,c
  3915  001772  1E19               	comf	??___flge+2,f,c
  3916  001774  1E1A               	comf	??___flge+3,f,c
  3917  001776  2A17               	incf	??___flge,f,c
  3918  001778  0E00               	movlw	0
  3919  00177A  2218               	addwfc	??___flge+1,f,c
  3920  00177C  2219               	addwfc	??___flge+2,f,c
  3921  00177E  221A               	addwfc	??___flge+3,f,c
  3922  001780  0E00               	movlw	0
  3923  001782  2417               	addwf	??___flge,w,c
  3924  001784  6E13               	movwf	___flge@ff2,c
  3925  001786  0E00               	movlw	0
  3926  001788  2018               	addwfc	??___flge+1,w,c
  3927  00178A  6E14               	movwf	___flge@ff2+1,c
  3928  00178C  0E00               	movlw	0
  3929  00178E  2019               	addwfc	??___flge+2,w,c
  3930  001790  6E15               	movwf	___flge@ff2+2,c
  3931  001792  0E80               	movlw	128
  3932  001794  201A               	addwfc	??___flge+3,w,c
  3933  001796  6E16               	movwf	___flge@ff2+3,c
  3934  001798                     l537:
  3935  001798  0E00               	movlw	0
  3936  00179A  1A0F               	xorwf	___flge@ff1,f,c
  3937  00179C  0E00               	movlw	0
  3938  00179E  1A10               	xorwf	___flge@ff1+1,f,c
  3939  0017A0  0E00               	movlw	0
  3940  0017A2  1A11               	xorwf	___flge@ff1+2,f,c
  3941  0017A4  0E80               	movlw	128
  3942  0017A6  1A12               	xorwf	___flge@ff1+3,f,c
  3943  0017A8  0E00               	movlw	0
  3944  0017AA  1A13               	xorwf	___flge@ff2,f,c
  3945  0017AC  0E00               	movlw	0
  3946  0017AE  1A14               	xorwf	___flge@ff2+1,f,c
  3947  0017B0  0E00               	movlw	0
  3948  0017B2  1A15               	xorwf	___flge@ff2+2,f,c
  3949  0017B4  0E80               	movlw	128
  3950  0017B6  1A16               	xorwf	___flge@ff2+3,f,c
  3951  0017B8  5013               	movf	___flge@ff2,w,c
  3952  0017BA  5C0F               	subwf	___flge@ff1,w,c
  3953  0017BC  5014               	movf	___flge@ff2+1,w,c
  3954  0017BE  5810               	subwfb	___flge@ff1+1,w,c
  3955  0017C0  5015               	movf	___flge@ff2+2,w,c
  3956  0017C2  5811               	subwfb	___flge@ff1+2,w,c
  3957  0017C4  5016               	movf	___flge@ff2+3,w,c
  3958  0017C6  5812               	subwfb	___flge@ff1+3,w,c
  3959  0017C8  B0D8               	btfsc	status,0,c
  3960  0017CA  D002               	goto	l2378
  3961  0017CC  90D8               	bcf	status,0,c
  3962  0017CE  0012               	return	
  3963  0017D0                     l2378:
  3964  0017D0  80D8               	bsf	status,0,c
  3965  0017D2  0012               	return	
  3966  0017D4                     __end_of___flge:
  3967                           	opt stack 0
  3968                           tblptru	equ	0xFF8
  3969                           tblptrh	equ	0xFF7
  3970                           tblptrl	equ	0xFF6
  3971                           tablat	equ	0xFF5
  3972                           prodl	equ	0xFF3
  3973                           intcon	equ	0xFF2
  3974                           postinc0	equ	0xFEE
  3975                           wreg	equ	0xFE8
  3976                           postinc2	equ	0xFDE
  3977                           status	equ	0xFD8
  3978                           
  3979 ;; *************** function ___fldiv *****************
  3980 ;; Defined at:
  3981 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldiv.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  f1              4   28[COMRAM] unsigned char 
  3984 ;;  f2              4   32[COMRAM] unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  f3              4   40[COMRAM] unsigned char 
  3987 ;;  sign            1   46[COMRAM] unsigned char 
  3988 ;;  exp             1   45[COMRAM] unsigned char 
  3989 ;;  cntr            1   44[COMRAM] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  4   28[COMRAM] unsigned char 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3999 ;;      Params:         8       0       0       0       0       0       0
  4000 ;;      Locals:         7       0       0       0       0       0       0
  4001 ;;      Temps:          4       0       0       0       0       0       0
  4002 ;;      Totals:        19       0       0       0       0       0       0
  4003 ;;Total ram usage:       19 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    2
  4006 ;; This function calls:
  4007 ;;		___flpack
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text18
  4014  001330                     __ptext18:
  4015                           	opt stack 0
  4016  001330                     ___fldiv:
  4017                           	opt stack 28
  4018                           
  4019                           ;incstack = 0
  4020  001330  C01D  F025         	movff	___fldiv@f1,??___fldiv
  4021  001334  C01E  F026         	movff	___fldiv@f1+1,??___fldiv+1
  4022  001338  C01F  F027         	movff	___fldiv@f1+2,??___fldiv+2
  4023  00133C  C020  F028         	movff	___fldiv@f1+3,??___fldiv+3
  4024  001340  0E18               	movlw	24
  4025  001342  D005               	goto	u1890
  4026  001344                     u1895:
  4027  001344  90D8               	bcf	status,0,c
  4028  001346  3228               	rrcf	??___fldiv+3,f,c
  4029  001348  3227               	rrcf	??___fldiv+2,f,c
  4030  00134A  3226               	rrcf	??___fldiv+1,f,c
  4031  00134C  3225               	rrcf	??___fldiv,f,c
  4032  00134E                     u1890:
  4033  00134E  2EE8               	decfsz	wreg,f,c
  4034  001350  D7F9               	goto	u1895
  4035  001352  5025               	movf	??___fldiv,w,c
  4036  001354  6E2E               	movwf	___fldiv@exp,c
  4037  001356  662E               	tstfsz	___fldiv@exp& (0+255),c
  4038  001358  D009               	goto	l2274
  4039  00135A  0E00               	movlw	0
  4040  00135C  6E1D               	movwf	?___fldiv,c
  4041  00135E  0E00               	movlw	0
  4042  001360  6E1E               	movwf	?___fldiv+1,c
  4043  001362  0E00               	movlw	0
  4044  001364  6E1F               	movwf	?___fldiv+2,c
  4045  001366  0E00               	movlw	0
  4046  001368  6E20               	movwf	?___fldiv+3,c
  4047  00136A  0012               	return	
  4048  00136C                     l2274:
  4049  00136C  C021  F025         	movff	___fldiv@f2,??___fldiv
  4050  001370  C022  F026         	movff	___fldiv@f2+1,??___fldiv+1
  4051  001374  C023  F027         	movff	___fldiv@f2+2,??___fldiv+2
  4052  001378  C024  F028         	movff	___fldiv@f2+3,??___fldiv+3
  4053  00137C  0E18               	movlw	24
  4054  00137E  D005               	goto	u1910
  4055  001380                     u1915:
  4056  001380  90D8               	bcf	status,0,c
  4057  001382  3228               	rrcf	??___fldiv+3,f,c
  4058  001384  3227               	rrcf	??___fldiv+2,f,c
  4059  001386  3226               	rrcf	??___fldiv+1,f,c
  4060  001388  3225               	rrcf	??___fldiv,f,c
  4061  00138A                     u1910:
  4062  00138A  2EE8               	decfsz	wreg,f,c
  4063  00138C  D7F9               	goto	u1915
  4064  00138E  5025               	movf	??___fldiv,w,c
  4065  001390  6E2F               	movwf	___fldiv@sign,c
  4066  001392  662F               	tstfsz	___fldiv@sign& (0+255),c
  4067  001394  D009               	goto	l2280
  4068  001396  0E00               	movlw	0
  4069  001398  6E1D               	movwf	?___fldiv,c
  4070  00139A  0E00               	movlw	0
  4071  00139C  6E1E               	movwf	?___fldiv+1,c
  4072  00139E  0E00               	movlw	0
  4073  0013A0  6E1F               	movwf	?___fldiv+2,c
  4074  0013A2  0E00               	movlw	0
  4075  0013A4  6E20               	movwf	?___fldiv+3,c
  4076  0013A6  0012               	return	
  4077  0013A8                     l2280:
  4078  0013A8  502F               	movf	___fldiv@sign,w,c
  4079  0013AA  0F89               	addlw	137
  4080  0013AC  5E2E               	subwf	___fldiv@exp,f,c
  4081  0013AE  C020  F02F         	movff	___fldiv@f1+3,___fldiv@sign
  4082  0013B2  5024               	movf	___fldiv@f2+3,w,c
  4083  0013B4  1A2F               	xorwf	___fldiv@sign,f,c
  4084  0013B6  0E80               	movlw	128
  4085  0013B8  162F               	andwf	___fldiv@sign,f,c
  4086  0013BA  8E1F               	bsf	___fldiv@f1+2,7,c
  4087  0013BC  0EFF               	movlw	255
  4088  0013BE  161D               	andwf	___fldiv@f1,f,c
  4089  0013C0  0EFF               	movlw	255
  4090  0013C2  161E               	andwf	___fldiv@f1+1,f,c
  4091  0013C4  0EFF               	movlw	255
  4092  0013C6  161F               	andwf	___fldiv@f1+2,f,c
  4093  0013C8  0E00               	movlw	0
  4094  0013CA  1620               	andwf	___fldiv@f1+3,f,c
  4095  0013CC  8E23               	bsf	___fldiv@f2+2,7,c
  4096  0013CE  0EFF               	movlw	255
  4097  0013D0  1621               	andwf	___fldiv@f2,f,c
  4098  0013D2  0EFF               	movlw	255
  4099  0013D4  1622               	andwf	___fldiv@f2+1,f,c
  4100  0013D6  0EFF               	movlw	255
  4101  0013D8  1623               	andwf	___fldiv@f2+2,f,c
  4102  0013DA  0E00               	movlw	0
  4103  0013DC  1624               	andwf	___fldiv@f2+3,f,c
  4104  0013DE  0E20               	movlw	32
  4105  0013E0  6E2D               	movwf	___fldiv@cntr,c
  4106  0013E2                     l2292:
  4107  0013E2  90D8               	bcf	status,0,c
  4108  0013E4  3629               	rlcf	___fldiv@f3,f,c
  4109  0013E6  362A               	rlcf	___fldiv@f3+1,f,c
  4110  0013E8  362B               	rlcf	___fldiv@f3+2,f,c
  4111  0013EA  362C               	rlcf	___fldiv@f3+3,f,c
  4112  0013EC  5021               	movf	___fldiv@f2,w,c
  4113  0013EE  5C1D               	subwf	___fldiv@f1,w,c
  4114  0013F0  5022               	movf	___fldiv@f2+1,w,c
  4115  0013F2  581E               	subwfb	___fldiv@f1+1,w,c
  4116  0013F4  5023               	movf	___fldiv@f2+2,w,c
  4117  0013F6  581F               	subwfb	___fldiv@f1+2,w,c
  4118  0013F8  5024               	movf	___fldiv@f2+3,w,c
  4119  0013FA  5820               	subwfb	___fldiv@f1+3,w,c
  4120  0013FC  A0D8               	btfss	status,0,c
  4121  0013FE  D009               	goto	l2300
  4122  001400  5021               	movf	___fldiv@f2,w,c
  4123  001402  5E1D               	subwf	___fldiv@f1,f,c
  4124  001404  5022               	movf	___fldiv@f2+1,w,c
  4125  001406  5A1E               	subwfb	___fldiv@f1+1,f,c
  4126  001408  5023               	movf	___fldiv@f2+2,w,c
  4127  00140A  5A1F               	subwfb	___fldiv@f1+2,f,c
  4128  00140C  5024               	movf	___fldiv@f2+3,w,c
  4129  00140E  5A20               	subwfb	___fldiv@f1+3,f,c
  4130  001410  8029               	bsf	___fldiv@f3,0,c
  4131  001412                     l2300:
  4132  001412  90D8               	bcf	status,0,c
  4133  001414  361D               	rlcf	___fldiv@f1,f,c
  4134  001416  361E               	rlcf	___fldiv@f1+1,f,c
  4135  001418  361F               	rlcf	___fldiv@f1+2,f,c
  4136  00141A  3620               	rlcf	___fldiv@f1+3,f,c
  4137  00141C  2E2D               	decfsz	___fldiv@cntr,f,c
  4138  00141E  D7E1               	goto	l2292
  4139  001420  C029  F00F         	movff	___fldiv@f3,___flpack@arg
  4140  001424  C02A  F010         	movff	___fldiv@f3+1,___flpack@arg+1
  4141  001428  C02B  F011         	movff	___fldiv@f3+2,___flpack@arg+2
  4142  00142C  C02C  F012         	movff	___fldiv@f3+3,___flpack@arg+3
  4143  001430  C02E  F013         	movff	___fldiv@exp,___flpack@exp
  4144  001434  C02F  F014         	movff	___fldiv@sign,___flpack@sign
  4145  001438  ECA6  F00A         	call	___flpack	;wreg free
  4146  00143C  C00F  F01D         	movff	?___flpack,?___fldiv
  4147  001440  C010  F01E         	movff	?___flpack+1,?___fldiv+1
  4148  001444  C011  F01F         	movff	?___flpack+2,?___fldiv+2
  4149  001448  C012  F020         	movff	?___flpack+3,?___fldiv+3
  4150  00144C  0012               	return	
  4151  00144E                     __end_of___fldiv:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           prodl	equ	0xFF3
  4158                           intcon	equ	0xFF2
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           postinc2	equ	0xFDE
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function ___fladd *****************
  4165 ;; Defined at:
  4166 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fladd.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  f1              4   52[COMRAM] unsigned char 
  4169 ;;  f2              4   56[COMRAM] unsigned char 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  exp1            1   66[COMRAM] unsigned char 
  4172 ;;  exp2            1   65[COMRAM] unsigned char 
  4173 ;;  sign            1   64[COMRAM] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  4   52[COMRAM] unsigned char 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4183 ;;      Params:         8       0       0       0       0       0       0
  4184 ;;      Locals:         3       0       0       0       0       0       0
  4185 ;;      Temps:          4       0       0       0       0       0       0
  4186 ;;      Totals:        15       0       0       0       0       0       0
  4187 ;;Total ram usage:       15 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    2
  4190 ;; This function calls:
  4191 ;;		___flpack
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text19
  4198  000D96                     __ptext19:
  4199                           	opt stack 0
  4200  000D96                     ___fladd:
  4201                           	opt stack 28
  4202                           
  4203                           ;incstack = 0
  4204  000D96  C035  F03D         	movff	___fladd@f1,??___fladd
  4205  000D9A  C036  F03E         	movff	___fladd@f1+1,??___fladd+1
  4206  000D9E  C037  F03F         	movff	___fladd@f1+2,??___fladd+2
  4207  000DA2  C038  F040         	movff	___fladd@f1+3,??___fladd+3
  4208  000DA6  0E18               	movlw	24
  4209  000DA8  D005               	goto	u1680
  4210  000DAA                     u1685:
  4211  000DAA  90D8               	bcf	status,0,c
  4212  000DAC  3240               	rrcf	??___fladd+3,f,c
  4213  000DAE  323F               	rrcf	??___fladd+2,f,c
  4214  000DB0  323E               	rrcf	??___fladd+1,f,c
  4215  000DB2  323D               	rrcf	??___fladd,f,c
  4216  000DB4                     u1680:
  4217  000DB4  2EE8               	decfsz	wreg,f,c
  4218  000DB6  D7F9               	goto	u1685
  4219  000DB8  503D               	movf	??___fladd,w,c
  4220  000DBA  6E43               	movwf	___fladd@exp1,c
  4221  000DBC  C039  F03D         	movff	___fladd@f2,??___fladd
  4222  000DC0  C03A  F03E         	movff	___fladd@f2+1,??___fladd+1
  4223  000DC4  C03B  F03F         	movff	___fladd@f2+2,??___fladd+2
  4224  000DC8  C03C  F040         	movff	___fladd@f2+3,??___fladd+3
  4225  000DCC  0E18               	movlw	24
  4226  000DCE  D005               	goto	u1690
  4227  000DD0                     u1695:
  4228  000DD0  90D8               	bcf	status,0,c
  4229  000DD2  3240               	rrcf	??___fladd+3,f,c
  4230  000DD4  323F               	rrcf	??___fladd+2,f,c
  4231  000DD6  323E               	rrcf	??___fladd+1,f,c
  4232  000DD8  323D               	rrcf	??___fladd,f,c
  4233  000DDA                     u1690:
  4234  000DDA  2EE8               	decfsz	wreg,f,c
  4235  000DDC  D7F9               	goto	u1695
  4236  000DDE  503D               	movf	??___fladd,w,c
  4237  000DE0  6E42               	movwf	___fladd@exp2,c
  4238  000DE2  5043               	movf	___fladd@exp1,w,c
  4239  000DE4  B4D8               	btfsc	status,2,c
  4240  000DE6  D00C               	goto	l497
  4241  000DE8  5042               	movf	___fladd@exp2,w,c
  4242  000DEA  5C43               	subwf	___fladd@exp1,w,c
  4243  000DEC  B0D8               	btfsc	status,0,c
  4244  000DEE  D011               	goto	l2206
  4245  000DF0  5043               	movf	___fladd@exp1,w,c
  4246  000DF2  0800               	sublw	0
  4247  000DF4  2442               	addwf	___fladd@exp2,w,c
  4248  000DF6  6E3D               	movwf	??___fladd& (0+255),c
  4249  000DF8  0E21               	movlw	33
  4250  000DFA  5C3D               	subwf	??___fladd,w,c
  4251  000DFC  A0D8               	btfss	status,0,c
  4252  000DFE  D009               	goto	l2206
  4253  000E00                     l497:
  4254  000E00  C039  F035         	movff	___fladd@f2,?___fladd
  4255  000E04  C03A  F036         	movff	___fladd@f2+1,?___fladd+1
  4256  000E08  C03B  F037         	movff	___fladd@f2+2,?___fladd+2
  4257  000E0C  C03C  F038         	movff	___fladd@f2+3,?___fladd+3
  4258  000E10  0012               	return	
  4259  000E12                     l2206:
  4260  000E12  5042               	movf	___fladd@exp2,w,c
  4261  000E14  B4D8               	btfsc	status,2,c
  4262  000E16  D00C               	goto	l501
  4263  000E18  5043               	movf	___fladd@exp1,w,c
  4264  000E1A  5C42               	subwf	___fladd@exp2,w,c
  4265  000E1C  B0D8               	btfsc	status,0,c
  4266  000E1E  D011               	goto	l2212
  4267  000E20  5042               	movf	___fladd@exp2,w,c
  4268  000E22  0800               	sublw	0
  4269  000E24  2443               	addwf	___fladd@exp1,w,c
  4270  000E26  6E3D               	movwf	??___fladd& (0+255),c
  4271  000E28  0E21               	movlw	33
  4272  000E2A  5C3D               	subwf	??___fladd,w,c
  4273  000E2C  A0D8               	btfss	status,0,c
  4274  000E2E  D009               	goto	l2212
  4275  000E30                     l501:
  4276  000E30  C035  F035         	movff	___fladd@f1,?___fladd
  4277  000E34  C036  F036         	movff	___fladd@f1+1,?___fladd+1
  4278  000E38  C037  F037         	movff	___fladd@f1+2,?___fladd+2
  4279  000E3C  C038  F038         	movff	___fladd@f1+3,?___fladd+3
  4280  000E40  0012               	return	
  4281  000E42                     l2212:
  4282  000E42  0E06               	movlw	6
  4283  000E44  6E41               	movwf	___fladd@sign,c
  4284  000E46  BE38               	btfsc	___fladd@f1+3,7,c
  4285  000E48  8E41               	bsf	___fladd@sign,7,c
  4286  000E4A  BE3C               	btfsc	___fladd@f2+3,7,c
  4287  000E4C  8C41               	bsf	___fladd@sign,6,c
  4288  000E4E  8E37               	bsf	___fladd@f1+2,7,c
  4289  000E50  0EFF               	movlw	255
  4290  000E52  1635               	andwf	___fladd@f1,f,c
  4291  000E54  0EFF               	movlw	255
  4292  000E56  1636               	andwf	___fladd@f1+1,f,c
  4293  000E58  0EFF               	movlw	255
  4294  000E5A  1637               	andwf	___fladd@f1+2,f,c
  4295  000E5C  0E00               	movlw	0
  4296  000E5E  1638               	andwf	___fladd@f1+3,f,c
  4297  000E60  8E3B               	bsf	___fladd@f2+2,7,c
  4298  000E62  0EFF               	movlw	255
  4299  000E64  1639               	andwf	___fladd@f2,f,c
  4300  000E66  0EFF               	movlw	255
  4301  000E68  163A               	andwf	___fladd@f2+1,f,c
  4302  000E6A  0EFF               	movlw	255
  4303  000E6C  163B               	andwf	___fladd@f2+2,f,c
  4304  000E6E  0E00               	movlw	0
  4305  000E70  163C               	andwf	___fladd@f2+3,f,c
  4306  000E72  5042               	movf	___fladd@exp2,w,c
  4307  000E74  5C43               	subwf	___fladd@exp1,w,c
  4308  000E76  B0D8               	btfsc	status,0,c
  4309  000E78  D01C               	goto	l2236
  4310  000E7A                     l2226:
  4311  000E7A  90D8               	bcf	status,0,c
  4312  000E7C  3639               	rlcf	___fladd@f2,f,c
  4313  000E7E  363A               	rlcf	___fladd@f2+1,f,c
  4314  000E80  363B               	rlcf	___fladd@f2+2,f,c
  4315  000E82  363C               	rlcf	___fladd@f2+3,f,c
  4316  000E84  0642               	decf	___fladd@exp2,f,c
  4317  000E86  5042               	movf	___fladd@exp2,w,c
  4318  000E88  1843               	xorwf	___fladd@exp1,w,c
  4319  000E8A  B4D8               	btfsc	status,2,c
  4320  000E8C  D00E               	goto	l2234
  4321  000E8E  0641               	decf	___fladd@sign,f,c
  4322  000E90  C041  F03D         	movff	___fladd@sign,??___fladd
  4323  000E94  0E07               	movlw	7
  4324  000E96  163D               	andwf	??___fladd,f,c
  4325  000E98  B4D8               	btfsc	status,2,c
  4326  000E9A  D007               	goto	l2234
  4327  000E9C  D7EE               	goto	l2226
  4328  000E9E                     l2232:
  4329  000E9E  90D8               	bcf	status,0,c
  4330  000EA0  3238               	rrcf	___fladd@f1+3,f,c
  4331  000EA2  3237               	rrcf	___fladd@f1+2,f,c
  4332  000EA4  3236               	rrcf	___fladd@f1+1,f,c
  4333  000EA6  3235               	rrcf	___fladd@f1,f,c
  4334  000EA8  2A43               	incf	___fladd@exp1,f,c
  4335  000EAA                     l2234:
  4336  000EAA  5042               	movf	___fladd@exp2,w,c
  4337  000EAC  6243               	cpfseq	___fladd@exp1,c
  4338  000EAE  D7F7               	goto	l2232
  4339  000EB0  D01F               	goto	l512
  4340  000EB2                     l2236:
  4341  000EB2  5043               	movf	___fladd@exp1,w,c
  4342  000EB4  5C42               	subwf	___fladd@exp2,w,c
  4343  000EB6  B0D8               	btfsc	status,0,c
  4344  000EB8  D01B               	goto	l512
  4345  000EBA                     l2238:
  4346  000EBA  90D8               	bcf	status,0,c
  4347  000EBC  3635               	rlcf	___fladd@f1,f,c
  4348  000EBE  3636               	rlcf	___fladd@f1+1,f,c
  4349  000EC0  3637               	rlcf	___fladd@f1+2,f,c
  4350  000EC2  3638               	rlcf	___fladd@f1+3,f,c
  4351  000EC4  0643               	decf	___fladd@exp1,f,c
  4352  000EC6  5042               	movf	___fladd@exp2,w,c
  4353  000EC8  1843               	xorwf	___fladd@exp1,w,c
  4354  000ECA  B4D8               	btfsc	status,2,c
  4355  000ECC  D00E               	goto	l2246
  4356  000ECE  0641               	decf	___fladd@sign,f,c
  4357  000ED0  C041  F03D         	movff	___fladd@sign,??___fladd
  4358  000ED4  0E07               	movlw	7
  4359  000ED6  163D               	andwf	??___fladd,f,c
  4360  000ED8  B4D8               	btfsc	status,2,c
  4361  000EDA  D007               	goto	l2246
  4362  000EDC  D7EE               	goto	l2238
  4363  000EDE                     l2244:
  4364  000EDE  90D8               	bcf	status,0,c
  4365  000EE0  323C               	rrcf	___fladd@f2+3,f,c
  4366  000EE2  323B               	rrcf	___fladd@f2+2,f,c
  4367  000EE4  323A               	rrcf	___fladd@f2+1,f,c
  4368  000EE6  3239               	rrcf	___fladd@f2,f,c
  4369  000EE8  2A42               	incf	___fladd@exp2,f,c
  4370  000EEA                     l2246:
  4371  000EEA  5042               	movf	___fladd@exp2,w,c
  4372  000EEC  6243               	cpfseq	___fladd@exp1,c
  4373  000EEE  D7F7               	goto	l2244
  4374  000EF0                     l512:
  4375  000EF0  AE41               	btfss	___fladd@sign,7,c
  4376  000EF2  D00E               	goto	l2250
  4377  000EF4  0EFF               	movlw	255
  4378  000EF6  1A35               	xorwf	___fladd@f1,f,c
  4379  000EF8  0EFF               	movlw	255
  4380  000EFA  1A36               	xorwf	___fladd@f1+1,f,c
  4381  000EFC  0EFF               	movlw	255
  4382  000EFE  1A37               	xorwf	___fladd@f1+2,f,c
  4383  000F00  0EFF               	movlw	255
  4384  000F02  1A38               	xorwf	___fladd@f1+3,f,c
  4385  000F04  0E01               	movlw	1
  4386  000F06  2635               	addwf	___fladd@f1,f,c
  4387  000F08  0E00               	movlw	0
  4388  000F0A  2236               	addwfc	___fladd@f1+1,f,c
  4389  000F0C  2237               	addwfc	___fladd@f1+2,f,c
  4390  000F0E  2238               	addwfc	___fladd@f1+3,f,c
  4391  000F10                     l2250:
  4392  000F10  AC41               	btfss	___fladd@sign,6,c
  4393  000F12  D00E               	goto	l2254
  4394  000F14  0EFF               	movlw	255
  4395  000F16  1A39               	xorwf	___fladd@f2,f,c
  4396  000F18  0EFF               	movlw	255
  4397  000F1A  1A3A               	xorwf	___fladd@f2+1,f,c
  4398  000F1C  0EFF               	movlw	255
  4399  000F1E  1A3B               	xorwf	___fladd@f2+2,f,c
  4400  000F20  0EFF               	movlw	255
  4401  000F22  1A3C               	xorwf	___fladd@f2+3,f,c
  4402  000F24  0E01               	movlw	1
  4403  000F26  2639               	addwf	___fladd@f2,f,c
  4404  000F28  0E00               	movlw	0
  4405  000F2A  223A               	addwfc	___fladd@f2+1,f,c
  4406  000F2C  223B               	addwfc	___fladd@f2+2,f,c
  4407  000F2E  223C               	addwfc	___fladd@f2+3,f,c
  4408  000F30                     l2254:
  4409  000F30  0E00               	movlw	0
  4410  000F32  6E41               	movwf	___fladd@sign,c
  4411  000F34  5035               	movf	___fladd@f1,w,c
  4412  000F36  2639               	addwf	___fladd@f2,f,c
  4413  000F38  5036               	movf	___fladd@f1+1,w,c
  4414  000F3A  223A               	addwfc	___fladd@f2+1,f,c
  4415  000F3C  5037               	movf	___fladd@f1+2,w,c
  4416  000F3E  223B               	addwfc	___fladd@f2+2,f,c
  4417  000F40  5038               	movf	___fladd@f1+3,w,c
  4418  000F42  223C               	addwfc	___fladd@f2+3,f,c
  4419  000F44  AE3C               	btfss	___fladd@f2+3,7,c
  4420  000F46  D010               	goto	l2264
  4421  000F48  0EFF               	movlw	255
  4422  000F4A  1A39               	xorwf	___fladd@f2,f,c
  4423  000F4C  0EFF               	movlw	255
  4424  000F4E  1A3A               	xorwf	___fladd@f2+1,f,c
  4425  000F50  0EFF               	movlw	255
  4426  000F52  1A3B               	xorwf	___fladd@f2+2,f,c
  4427  000F54  0EFF               	movlw	255
  4428  000F56  1A3C               	xorwf	___fladd@f2+3,f,c
  4429  000F58  0E01               	movlw	1
  4430  000F5A  2639               	addwf	___fladd@f2,f,c
  4431  000F5C  0E00               	movlw	0
  4432  000F5E  223A               	addwfc	___fladd@f2+1,f,c
  4433  000F60  223B               	addwfc	___fladd@f2+2,f,c
  4434  000F62  223C               	addwfc	___fladd@f2+3,f,c
  4435  000F64  0E01               	movlw	1
  4436  000F66  6E41               	movwf	___fladd@sign,c
  4437  000F68                     l2264:
  4438  000F68  C039  F00F         	movff	___fladd@f2,___flpack@arg
  4439  000F6C  C03A  F010         	movff	___fladd@f2+1,___flpack@arg+1
  4440  000F70  C03B  F011         	movff	___fladd@f2+2,___flpack@arg+2
  4441  000F74  C03C  F012         	movff	___fladd@f2+3,___flpack@arg+3
  4442  000F78  C043  F013         	movff	___fladd@exp1,___flpack@exp
  4443  000F7C  C041  F014         	movff	___fladd@sign,___flpack@sign
  4444  000F80  ECA6  F00A         	call	___flpack	;wreg free
  4445  000F84  C00F  F035         	movff	?___flpack,?___fladd
  4446  000F88  C010  F036         	movff	?___flpack+1,?___fladd+1
  4447  000F8C  C011  F037         	movff	?___flpack+2,?___fladd+2
  4448  000F90  C012  F038         	movff	?___flpack+3,?___fladd+3
  4449  000F94  0012               	return	
  4450  000F96                     __end_of___fladd:
  4451                           	opt stack 0
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           postinc2	equ	0xFDE
  4461                           status	equ	0xFD8
  4462                           
  4463 ;; *************** function ___awtofl *****************
  4464 ;; Defined at:
  4465 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtofl.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  c               2   24[COMRAM] int 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  f1              4    0        int 
  4470 ;;  sign            1   28[COMRAM] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  4   24[COMRAM] unsigned char 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, prodl, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4480 ;;      Params:         4       0       0       0       0       0       0
  4481 ;;      Locals:         1       0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0
  4483 ;;      Totals:         5       0       0       0       0       0       0
  4484 ;;Total ram usage:        5 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    2
  4487 ;; This function calls:
  4488 ;;		___flpack
  4489 ;; This function is called by:
  4490 ;;		_main
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text20
  4495  0019E6                     __ptext20:
  4496                           	opt stack 0
  4497  0019E6                     ___awtofl:
  4498                           	opt stack 28
  4499                           
  4500                           ;incstack = 0
  4501  0019E6  0E00               	movlw	0
  4502  0019E8  6E1D               	movwf	___awtofl@sign,c
  4503  0019EA  501A               	movf	___awtofl@c+1,w,c
  4504  0019EC  0A80               	xorlw	128
  4505  0019EE  6EF3               	movwf	prodl,c
  4506  0019F0  0E80               	movlw	128
  4507  0019F2  5CF3               	subwf	prodl,w,c
  4508  0019F4  0E00               	movlw	0
  4509  0019F6  B4D8               	btfsc	status,2,c
  4510  0019F8  5C19               	subwf	___awtofl@c,w,c
  4511  0019FA  B0D8               	btfsc	status,0,c
  4512  0019FC  D005               	goto	l2364
  4513  0019FE  6C19               	negf	___awtofl@c,c
  4514  001A00  1E1A               	comf	___awtofl@c+1,f,c
  4515  001A02  B0D8               	btfsc	status,0,c
  4516  001A04  2A1A               	incf	___awtofl@c+1,f,c
  4517  001A06  2A1D               	incf	___awtofl@sign,f,c
  4518  001A08                     l2364:
  4519  001A08  C019  F00F         	movff	___awtofl@c,___flpack@arg
  4520  001A0C  C01A  F010         	movff	___awtofl@c+1,___flpack@arg+1
  4521  001A10  6A11               	clrf	___flpack@arg+2,c
  4522  001A12  6A12               	clrf	___flpack@arg+3,c
  4523  001A14  0E96               	movlw	150
  4524  001A16  6E13               	movwf	___flpack@exp,c
  4525  001A18  C01D  F014         	movff	___awtofl@sign,___flpack@sign
  4526  001A1C  ECA6  F00A         	call	___flpack	;wreg free
  4527  001A20  C00F  F019         	movff	?___flpack,?___awtofl
  4528  001A24  C010  F01A         	movff	?___flpack+1,?___awtofl+1
  4529  001A28  C011  F01B         	movff	?___flpack+2,?___awtofl+2
  4530  001A2C  C012  F01C         	movff	?___flpack+3,?___awtofl+3
  4531  001A30  0012               	return	
  4532  001A32                     __end_of___awtofl:
  4533                           	opt stack 0
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postinc2	equ	0xFDE
  4543                           status	equ	0xFD8
  4544                           
  4545 ;; *************** function ___flpack *****************
  4546 ;; Defined at:
  4547 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\double.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  arg             4   14[COMRAM] unsigned long 
  4550 ;;  exp             1   18[COMRAM] unsigned char 
  4551 ;;  sign            1   19[COMRAM] unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  4   14[COMRAM] unsigned char 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4563 ;;      Params:         6       0       0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0
  4565 ;;      Temps:          4       0       0       0       0       0       0
  4566 ;;      Totals:        10       0       0       0       0       0       0
  4567 ;;Total ram usage:       10 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    1
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		___awtofl
  4574 ;;		___fladd
  4575 ;;		___fldiv
  4576 ;;		___flmul
  4577 ;;		___lwtofl
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text21
  4582  00154C                     __ptext21:
  4583                           	opt stack 0
  4584  00154C                     ___flpack:
  4585                           	opt stack 28
  4586                           
  4587                           ;incstack = 0
  4588  00154C  5013               	movf	___flpack@exp,w,c
  4589  00154E  B4D8               	btfsc	status,2,c
  4590  001550  D006               	goto	l1872
  4591  001552  5012               	movf	___flpack@arg+3,w,c
  4592  001554  100F               	iorwf	___flpack@arg,w,c
  4593  001556  1010               	iorwf	___flpack@arg+1,w,c
  4594  001558  1011               	iorwf	___flpack@arg+2,w,c
  4595  00155A  A4D8               	btfss	status,2,c
  4596  00155C  D00F               	goto	l1878
  4597  00155E                     l1872:
  4598  00155E  0E00               	movlw	0
  4599  001560  6E0F               	movwf	?___flpack,c
  4600  001562  0E00               	movlw	0
  4601  001564  6E10               	movwf	?___flpack+1,c
  4602  001566  0E00               	movlw	0
  4603  001568  6E11               	movwf	?___flpack+2,c
  4604  00156A  0E00               	movlw	0
  4605  00156C  6E12               	movwf	?___flpack+3,c
  4606  00156E  0012               	return	
  4607  001570                     l1876:
  4608  001570  2A13               	incf	___flpack@exp,f,c
  4609  001572  90D8               	bcf	status,0,c
  4610  001574  3212               	rrcf	___flpack@arg+3,f,c
  4611  001576  3211               	rrcf	___flpack@arg+2,f,c
  4612  001578  3210               	rrcf	___flpack@arg+1,f,c
  4613  00157A  320F               	rrcf	___flpack@arg,f,c
  4614  00157C                     l1878:
  4615  00157C  0E00               	movlw	0
  4616  00157E  140F               	andwf	___flpack@arg,w,c
  4617  001580  6E15               	movwf	??___flpack& (0+255),c
  4618  001582  0E00               	movlw	0
  4619  001584  1410               	andwf	___flpack@arg+1,w,c
  4620  001586  6E16               	movwf	(??___flpack+1)& (0+255),c
  4621  001588  0E00               	movlw	0
  4622  00158A  1411               	andwf	___flpack@arg+2,w,c
  4623  00158C  6E17               	movwf	(??___flpack+2)& (0+255),c
  4624  00158E  0EFE               	movlw	254
  4625  001590  1412               	andwf	___flpack@arg+3,w,c
  4626  001592  6E18               	movwf	(??___flpack+3)& (0+255),c
  4627  001594  5018               	movf	??___flpack+3,w,c
  4628  001596  1015               	iorwf	??___flpack,w,c
  4629  001598  1016               	iorwf	??___flpack+1,w,c
  4630  00159A  1017               	iorwf	??___flpack+2,w,c
  4631  00159C  B4D8               	btfsc	status,2,c
  4632  00159E  D00D               	goto	l483
  4633  0015A0  D7E7               	goto	l1876
  4634  0015A2                     l1880:
  4635  0015A2  2A13               	incf	___flpack@exp,f,c
  4636  0015A4  0E01               	movlw	1
  4637  0015A6  260F               	addwf	___flpack@arg,f,c
  4638  0015A8  0E00               	movlw	0
  4639  0015AA  2210               	addwfc	___flpack@arg+1,f,c
  4640  0015AC  2211               	addwfc	___flpack@arg+2,f,c
  4641  0015AE  2212               	addwfc	___flpack@arg+3,f,c
  4642  0015B0  90D8               	bcf	status,0,c
  4643  0015B2  3212               	rrcf	___flpack@arg+3,f,c
  4644  0015B4  3211               	rrcf	___flpack@arg+2,f,c
  4645  0015B6  3210               	rrcf	___flpack@arg+1,f,c
  4646  0015B8  320F               	rrcf	___flpack@arg,f,c
  4647  0015BA                     l483:
  4648  0015BA  0E00               	movlw	0
  4649  0015BC  140F               	andwf	___flpack@arg,w,c
  4650  0015BE  6E15               	movwf	??___flpack& (0+255),c
  4651  0015C0  0E00               	movlw	0
  4652  0015C2  1410               	andwf	___flpack@arg+1,w,c
  4653  0015C4  6E16               	movwf	(??___flpack+1)& (0+255),c
  4654  0015C6  0E00               	movlw	0
  4655  0015C8  1411               	andwf	___flpack@arg+2,w,c
  4656  0015CA  6E17               	movwf	(??___flpack+2)& (0+255),c
  4657  0015CC  0EFF               	movlw	255
  4658  0015CE  1412               	andwf	___flpack@arg+3,w,c
  4659  0015D0  6E18               	movwf	(??___flpack+3)& (0+255),c
  4660  0015D2  5018               	movf	??___flpack+3,w,c
  4661  0015D4  1015               	iorwf	??___flpack,w,c
  4662  0015D6  1016               	iorwf	??___flpack+1,w,c
  4663  0015D8  1017               	iorwf	??___flpack+2,w,c
  4664  0015DA  B4D8               	btfsc	status,2,c
  4665  0015DC  D007               	goto	l1888
  4666  0015DE  D7E1               	goto	l1880
  4667  0015E0                     l1886:
  4668  0015E0  0613               	decf	___flpack@exp,f,c
  4669  0015E2  90D8               	bcf	status,0,c
  4670  0015E4  360F               	rlcf	___flpack@arg,f,c
  4671  0015E6  3610               	rlcf	___flpack@arg+1,f,c
  4672  0015E8  3611               	rlcf	___flpack@arg+2,f,c
  4673  0015EA  3612               	rlcf	___flpack@arg+3,f,c
  4674  0015EC                     l1888:
  4675  0015EC  AE11               	btfss	___flpack@arg+2,7,c
  4676  0015EE  D7F8               	goto	l1886
  4677  0015F0  B013               	btfsc	___flpack@exp,0,c
  4678  0015F2  D008               	goto	l489
  4679  0015F4  0EFF               	movlw	255
  4680  0015F6  160F               	andwf	___flpack@arg,f,c
  4681  0015F8  0EFF               	movlw	255
  4682  0015FA  1610               	andwf	___flpack@arg+1,f,c
  4683  0015FC  0E7F               	movlw	127
  4684  0015FE  1611               	andwf	___flpack@arg+2,f,c
  4685  001600  0EFF               	movlw	255
  4686  001602  1612               	andwf	___flpack@arg+3,f,c
  4687  001604                     l489:
  4688  001604  90D8               	bcf	status,0,c
  4689  001606  3213               	rrcf	___flpack@exp,f,c
  4690  001608  C013  F015         	movff	___flpack@exp,??___flpack
  4691  00160C  6A16               	clrf	(??___flpack+1)& (0+255),c
  4692  00160E  6A17               	clrf	(??___flpack+2)& (0+255),c
  4693  001610  6A18               	clrf	(??___flpack+3)& (0+255),c
  4694  001612  C015  F018         	movff	??___flpack,??___flpack+3
  4695  001616  6A17               	clrf	??___flpack+2,c
  4696  001618  6A16               	clrf	??___flpack+1,c
  4697  00161A  6A15               	clrf	??___flpack,c
  4698  00161C  5015               	movf	??___flpack,w,c
  4699  00161E  120F               	iorwf	___flpack@arg,f,c
  4700  001620  5016               	movf	??___flpack+1,w,c
  4701  001622  1210               	iorwf	___flpack@arg+1,f,c
  4702  001624  5017               	movf	??___flpack+2,w,c
  4703  001626  1211               	iorwf	___flpack@arg+2,f,c
  4704  001628  5018               	movf	??___flpack+3,w,c
  4705  00162A  1212               	iorwf	___flpack@arg+3,f,c
  4706  00162C  5014               	movf	___flpack@sign,w,c
  4707  00162E  A4D8               	btfss	status,2,c
  4708  001630  8E12               	bsf	___flpack@arg+3,7,c
  4709  001632  C00F  F00F         	movff	___flpack@arg,?___flpack
  4710  001636  C010  F010         	movff	___flpack@arg+1,?___flpack+1
  4711  00163A  C011  F011         	movff	___flpack@arg+2,?___flpack+2
  4712  00163E  C012  F012         	movff	___flpack@arg+3,?___flpack+3
  4713  001642  0012               	return	
  4714  001644                     __end_of___flpack:
  4715                           	opt stack 0
  4716                           tblptru	equ	0xFF8
  4717                           tblptrh	equ	0xFF7
  4718                           tblptrl	equ	0xFF6
  4719                           tablat	equ	0xFF5
  4720                           prodl	equ	0xFF3
  4721                           intcon	equ	0xFF2
  4722                           postinc0	equ	0xFEE
  4723                           wreg	equ	0xFE8
  4724                           postinc2	equ	0xFDE
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _AD_omv *****************
  4728 ;; Defined at:
  4729 ;;		line 324 in file "main.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  ADkanal         1    wreg     unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  ADkanal         1   18[COMRAM] unsigned char 
  4734 ;;  AD_value        2   19[COMRAM] unsigned int 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  2   14[COMRAM] int 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4744 ;;      Params:         2       0       0       0       0       0       0
  4745 ;;      Locals:         3       0       0       0       0       0       0
  4746 ;;      Temps:          2       0       0       0       0       0       0
  4747 ;;      Totals:         7       0       0       0       0       0       0
  4748 ;;Total ram usage:        7 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text22
  4759  001A32                     __ptext22:
  4760                           	opt stack 0
  4761  001A32                     _AD_omv:
  4762                           	opt stack 29
  4763                           
  4764                           ;incstack = 0
  4765                           ;AD_omv@ADkanal stored from wreg
  4766  001A32  6E13               	movwf	AD_omv@ADkanal,c
  4767                           
  4768                           ;main.c: 326: unsigned int AD_value = 0;
  4769  001A34  0E00               	movlw	0
  4770  001A36  6E15               	movwf	AD_omv@AD_value+1,c
  4771  001A38  0E00               	movlw	0
  4772  001A3A  6E14               	movwf	AD_omv@AD_value,c
  4773                           
  4774                           ;main.c: 327: ADCON0=(ADCON0 & 0b10000011)|(ADkanal<<2);
  4775  001A3C  C013  F011         	movff	AD_omv@ADkanal,??_AD_omv
  4776  001A40  90D8               	bcf	status,0,c
  4777  001A42  3611               	rlcf	??_AD_omv,f,c
  4778  001A44  90D8               	bcf	status,0,c
  4779  001A46  3611               	rlcf	??_AD_omv,f,c
  4780  001A48  50C2               	movf	4034,w,c	;volatile
  4781  001A4A  0B83               	andlw	131
  4782  001A4C  1011               	iorwf	??_AD_omv,w,c
  4783  001A4E  6EC2               	movwf	4034,c	;volatile
  4784                           
  4785                           ;main.c: 328: _delay((unsigned long)((5)*(4000000/4000000.0)));
  4786  001A50  F000               	nop	
  4787  001A52  D000               	nop2		;2 cycle nop
  4788  001A54  D000               	nop2		;2 cycle nop
  4789                           
  4790                           ;main.c: 329: ADCON0bits.GO=1;
  4791  001A56  82C2               	bsf	4034,1,c	;volatile
  4792  001A58                     l172:
  4793  001A58  B2C2               	btfsc	4034,1,c	;volatile
  4794  001A5A  D7FE               	goto	l172
  4795                           
  4796                           ;main.c: 331: AD_value = ADRESL + (ADRESH<<8);
  4797  001A5C  50C4               	movf	4036,w,c	;volatile
  4798  001A5E  6E12               	movwf	(??_AD_omv+1)& (0+255),c
  4799  001A60  6A11               	clrf	??_AD_omv& (0+255),c
  4800  001A62  50C3               	movf	4035,w,c	;volatile
  4801  001A64  2411               	addwf	??_AD_omv,w,c
  4802  001A66  6E14               	movwf	AD_omv@AD_value,c
  4803  001A68  0E00               	movlw	0
  4804  001A6A  2012               	addwfc	??_AD_omv+1,w,c
  4805  001A6C  6E15               	movwf	AD_omv@AD_value+1,c
  4806                           
  4807                           ;main.c: 332: return AD_value;
  4808  001A6E  C014  F00F         	movff	AD_omv@AD_value,?_AD_omv
  4809  001A72  C015  F010         	movff	AD_omv@AD_value+1,?_AD_omv+1
  4810  001A76  0012               	return	
  4811  001A78                     __end_of_AD_omv:
  4812                           	opt stack 0
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodl	equ	0xFF3
  4818                           intcon	equ	0xFF2
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           postinc2	equ	0xFDE
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function _isr *****************
  4825 ;; Defined at:
  4826 ;;		line 336 in file "main.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;		None               void
  4833 ;; Registers used:
  4834 ;;		wreg, status,2, status,0
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4840 ;;      Params:         0       0       0       0       0       0       0
  4841 ;;      Locals:         0       0       0       0       0       0       0
  4842 ;;      Temps:         14       0       0       0       0       0       0
  4843 ;;      Totals:        14       0       0       0       0       0       0
  4844 ;;Total ram usage:       14 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		Interrupt level 2
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	intcode
  4854  000008                     __pintcode:
  4855                           	opt stack 0
  4856  000008                     _isr:
  4857                           	opt stack 27
  4858                           
  4859                           ;incstack = 0
  4860  000008  CFFA F001          	movff	pclath,??_isr
  4861  00000C  CFFB F002          	movff	pclatu,??_isr+1
  4862  000010  CFE9 F003          	movff	fsr0l,??_isr+2
  4863  000014  CFEA F004          	movff	fsr0h,??_isr+3
  4864  000018  CFE1 F005          	movff	fsr1l,??_isr+4
  4865  00001C  CFE2 F006          	movff	fsr1h,??_isr+5
  4866  000020  CFD9 F007          	movff	fsr2l,??_isr+6
  4867  000024  CFDA F008          	movff	fsr2h,??_isr+7
  4868  000028  CFF3 F009          	movff	prodl,??_isr+8
  4869  00002C  CFF4 F00A          	movff	prodh,??_isr+9
  4870  000030  CFF6 F00B          	movff	tblptrl,??_isr+10
  4871  000034  CFF7 F00C          	movff	tblptrh,??_isr+11
  4872  000038  CFF8 F00D          	movff	tblptru,??_isr+12
  4873  00003C  CFF5 F00E          	movff	tablat,??_isr+13
  4874                           
  4875                           ;main.c: 337: if(PIR1bits.TMR1IF && PIE1bits.TMR1IE){
  4876  000040  B09E               	btfsc	3998,0,c	;volatile
  4877  000042  A09D               	btfss	3997,0,c	;volatile
  4878  000044  D07D               	goto	i2l188
  4879                           
  4880                           ;main.c: 338: TMR1H=0x3C;
  4881  000046  0E3C               	movlw	60
  4882  000048  6ECF               	movwf	4047,c	;volatile
  4883                           
  4884                           ;main.c: 339: TMR1L=0xD6;
  4885  00004A  0ED6               	movlw	214
  4886  00004C  6ECE               	movwf	4046,c	;volatile
  4887                           
  4888                           ;main.c: 340: if(++sample_interval >=16){
  4889  00004E  2A4B               	incf	_sample_interval,f,c
  4890  000050  0E0F               	movlw	15
  4891  000052  644B               	cpfsgt	_sample_interval& (0+255),c
  4892  000054  D008               	goto	i2l2680
  4893                           
  4894                           ;main.c: 341: sample_flag = 1;
  4895  000056  0E00               	movlw	0
  4896  000058  0100               	movlb	0	; () banked
  4897  00005A  6F83               	movwf	(_sample_flag+1)& (0+255),b
  4898  00005C  0E01               	movlw	1
  4899  00005E  0100               	movlb	0	; () banked
  4900  000060  6F82               	movwf	_sample_flag& (0+255),b
  4901                           
  4902                           ;main.c: 342: sample_interval = 0;
  4903  000062  0E00               	movlw	0
  4904  000064  6E4B               	movwf	_sample_interval,c
  4905  000066                     i2l2680:
  4906                           
  4907                           ;main.c: 343: }
  4908                           ;main.c: 344: if(++ramptime_scaler >=2){
  4909  000066  2A4A               	incf	_ramptime_scaler,f,c
  4910  000068  0E01               	movlw	1
  4911  00006A  644A               	cpfsgt	_ramptime_scaler& (0+255),c
  4912  00006C  D025               	goto	i2l2700
  4913                           
  4914                           ;main.c: 345: if(rampknapp_flag == 0xFF && (rampsignal< pot_Val)){
  4915  00006E  0100               	movlb	0	; () banked
  4916  000070  298C               	incf	_rampknapp_flag& (0+255),w,b
  4917  000072  A4D8               	btfss	status,2,c
  4918  000074  D00D               	goto	i2l2688
  4919                           
  4920                           ; BSR set to: 0
  4921  000076  0100               	movlb	0	; () banked
  4922  000078  517E               	movf	_pot_Val& (0+255),w,b
  4923  00007A  0100               	movlb	0	; () banked
  4924  00007C  5D80               	subwf	_rampsignal& (0+255),w,b
  4925  00007E  0100               	movlb	0	; () banked
  4926  000080  517F               	movf	(_pot_Val+1)& (0+255),w,b
  4927  000082  0100               	movlb	0	; () banked
  4928  000084  5981               	subwfb	(_rampsignal+1)& (0+255),w,b
  4929  000086  B0D8               	btfsc	status,0,c
  4930  000088  D003               	goto	i2l2688
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;main.c: 346: rampsignal += 1;
  4934  00008A  0100               	movlb	0	; () banked
  4935  00008C  4B80               	infsnz	_rampsignal& (0+255),f,b
  4936  00008E  2B81               	incf	(_rampsignal+1)& (0+255),f,b
  4937  000090                     i2l2688:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;main.c: 347: }
  4941                           ;main.c: 348: if(rampknapp_flag == 0xFF && (rampsignal> pot_Val)){
  4942  000090  0100               	movlb	0	; () banked
  4943  000092  298C               	incf	_rampknapp_flag& (0+255),w,b
  4944  000094  A4D8               	btfss	status,2,c
  4945  000096  D00E               	goto	i2l2698
  4946                           
  4947                           ; BSR set to: 0
  4948  000098  0100               	movlb	0	; () banked
  4949  00009A  5180               	movf	_rampsignal& (0+255),w,b
  4950  00009C  0100               	movlb	0	; () banked
  4951  00009E  5D7E               	subwf	_pot_Val& (0+255),w,b
  4952  0000A0  0100               	movlb	0	; () banked
  4953  0000A2  5181               	movf	(_rampsignal+1)& (0+255),w,b
  4954  0000A4  0100               	movlb	0	; () banked
  4955  0000A6  597F               	subwfb	(_pot_Val+1)& (0+255),w,b
  4956  0000A8  B0D8               	btfsc	status,0,c
  4957  0000AA  D004               	goto	i2l2698
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;main.c: 349: rampsignal -= 1;
  4961  0000AC  0100               	movlb	0	; () banked
  4962  0000AE  0780               	decf	_rampsignal& (0+255),f,b
  4963  0000B0  A0D8               	btfss	status,0,c
  4964  0000B2  0781               	decf	(_rampsignal+1)& (0+255),f,b
  4965  0000B4                     i2l2698:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;main.c: 353: }
  4969                           ;main.c: 354: ramptime_scaler = 0;
  4970  0000B4  0E00               	movlw	0
  4971  0000B6  6E4A               	movwf	_ramptime_scaler,c
  4972  0000B8                     i2l2700:
  4973                           
  4974                           ;main.c: 355: }
  4975                           ;main.c: 356: if(++time_scaler>=20){
  4976  0000B8  4A48               	infsnz	_time_scaler,f,c
  4977  0000BA  2A49               	incf	_time_scaler+1,f,c
  4978  0000BC  0E14               	movlw	20
  4979  0000BE  5C48               	subwf	_time_scaler& (0+255),w,c
  4980  0000C0  0E00               	movlw	0
  4981  0000C2  5849               	subwfb	(_time_scaler+1)& (0+255),w,c
  4982  0000C4  A0D8               	btfss	status,0,c
  4983  0000C6  D03B               	goto	i2l2718
  4984                           
  4985                           ;main.c: 357: time_scaler = 0;
  4986  0000C8  0E00               	movlw	0
  4987  0000CA  6E49               	movwf	_time_scaler+1,c
  4988  0000CC  0E00               	movlw	0
  4989  0000CE  6E48               	movwf	_time_scaler,c
  4990                           
  4991                           ;main.c: 358: blink_battery = blink_battery + 1;
  4992  0000D0  0100               	movlb	0	; () banked
  4993  0000D2  298B               	incf	_blink_battery& (0+255),w,b
  4994  0000D4  0100               	movlb	0	; () banked
  4995  0000D6  6F8B               	movwf	_blink_battery& (0+255),b
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;main.c: 360: if(++sekunder>=60){
  4999  0000D8  0100               	movlb	0	; () banked
  5000  0000DA  4B84               	infsnz	_sekunder& (0+255),f,b
  5001  0000DC  2B85               	incf	(_sekunder+1)& (0+255),f,b
  5002  0000DE  0E3C               	movlw	60
  5003  0000E0  0100               	movlb	0	; () banked
  5004  0000E2  5D84               	subwf	_sekunder& (0+255),w,b
  5005  0000E4  0E00               	movlw	0
  5006  0000E6  0100               	movlb	0	; () banked
  5007  0000E8  5985               	subwfb	(_sekunder+1)& (0+255),w,b
  5008  0000EA  A0D8               	btfss	status,0,c
  5009  0000EC  D028               	goto	i2l2718
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;main.c: 361: sekunder = 0;
  5013  0000EE  0E00               	movlw	0
  5014  0000F0  0100               	movlb	0	; () banked
  5015  0000F2  6F85               	movwf	(_sekunder+1)& (0+255),b
  5016  0000F4  0E00               	movlw	0
  5017  0000F6  0100               	movlb	0	; () banked
  5018  0000F8  6F84               	movwf	_sekunder& (0+255),b
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;main.c: 362: if(++minuter>=60){
  5022  0000FA  0100               	movlb	0	; () banked
  5023  0000FC  4B7C               	infsnz	_minuter& (0+255),f,b
  5024  0000FE  2B7D               	incf	(_minuter+1)& (0+255),f,b
  5025  000100  0E3C               	movlw	60
  5026  000102  0100               	movlb	0	; () banked
  5027  000104  5D7C               	subwf	_minuter& (0+255),w,b
  5028  000106  0E00               	movlw	0
  5029  000108  0100               	movlb	0	; () banked
  5030  00010A  597D               	subwfb	(_minuter+1)& (0+255),w,b
  5031  00010C  A0D8               	btfss	status,0,c
  5032  00010E  D017               	goto	i2l2718
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;main.c: 363: minuter=0;
  5036  000110  0E00               	movlw	0
  5037  000112  0100               	movlb	0	; () banked
  5038  000114  6F7D               	movwf	(_minuter+1)& (0+255),b
  5039  000116  0E00               	movlw	0
  5040  000118  0100               	movlb	0	; () banked
  5041  00011A  6F7C               	movwf	_minuter& (0+255),b
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;main.c: 364: if(++timmar>=24)
  5045  00011C  0100               	movlb	0	; () banked
  5046  00011E  4B88               	infsnz	_timmar& (0+255),f,b
  5047  000120  2B89               	incf	(_timmar+1)& (0+255),f,b
  5048  000122  0E18               	movlw	24
  5049  000124  0100               	movlb	0	; () banked
  5050  000126  5D88               	subwf	_timmar& (0+255),w,b
  5051  000128  0E00               	movlw	0
  5052  00012A  0100               	movlb	0	; () banked
  5053  00012C  5989               	subwfb	(_timmar+1)& (0+255),w,b
  5054  00012E  A0D8               	btfss	status,0,c
  5055  000130  D006               	goto	i2l2718
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;main.c: 365: timmar=0;
  5059  000132  0E00               	movlw	0
  5060  000134  0100               	movlb	0	; () banked
  5061  000136  6F89               	movwf	(_timmar+1)& (0+255),b
  5062  000138  0E00               	movlw	0
  5063  00013A  0100               	movlb	0	; () banked
  5064  00013C  6F88               	movwf	_timmar& (0+255),b
  5065  00013E                     i2l2718:
  5066                           
  5067                           ;main.c: 366: }
  5068                           ;main.c: 367: }
  5069                           ;main.c: 368: }
  5070                           ;main.c: 369: PIR1bits.TMR1IF = 0;
  5071  00013E  909E               	bcf	3998,0,c	;volatile
  5072  000140                     i2l188:
  5073  000140  C00E  FFF5         	movff	??_isr+13,tablat
  5074  000144  C00D  FFF8         	movff	??_isr+12,tblptru
  5075  000148  C00C  FFF7         	movff	??_isr+11,tblptrh
  5076  00014C  C00B  FFF6         	movff	??_isr+10,tblptrl
  5077  000150  C00A  FFF4         	movff	??_isr+9,prodh
  5078  000154  C009  FFF3         	movff	??_isr+8,prodl
  5079  000158  C008  FFDA         	movff	??_isr+7,fsr2h
  5080  00015C  C007  FFD9         	movff	??_isr+6,fsr2l
  5081  000160  C006  FFE2         	movff	??_isr+5,fsr1h
  5082  000164  C005  FFE1         	movff	??_isr+4,fsr1l
  5083  000168  C004  FFEA         	movff	??_isr+3,fsr0h
  5084  00016C  C003  FFE9         	movff	??_isr+2,fsr0l
  5085  000170  C002  FFFB         	movff	??_isr+1,pclatu
  5086  000174  C001  FFFA         	movff	??_isr,pclath
  5087  000178  0011               	retfie		f
  5088  00017A                     __end_of_isr:
  5089                           	opt stack 0
  5090                           pclatu	equ	0xFFB
  5091                           pclath	equ	0xFFA
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           intcon	equ	0xFF2
  5099                           postinc0	equ	0xFEE
  5100                           fsr0h	equ	0xFEA
  5101                           fsr0l	equ	0xFE9
  5102                           wreg	equ	0xFE8
  5103                           fsr1h	equ	0xFE2
  5104                           fsr1l	equ	0xFE1
  5105                           postinc2	equ	0xFDE
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           postinc0	equ	0xFEE
  5119                           fsr0h	equ	0xFEA
  5120                           fsr0l	equ	0xFE9
  5121                           wreg	equ	0xFE8
  5122                           fsr1h	equ	0xFE2
  5123                           fsr1l	equ	0xFE1
  5124                           postinc2	equ	0xFDE
  5125                           fsr2h	equ	0xFDA
  5126                           fsr2l	equ	0xFD9
  5127                           status	equ	0xFD8
  5128                           
  5129                           	psect	rparam
  5130  0000                     pclatu	equ	0xFFB
  5131                           pclath	equ	0xFFA
  5132                           tblptru	equ	0xFF8
  5133                           tblptrh	equ	0xFF7
  5134                           tblptrl	equ	0xFF6
  5135                           tablat	equ	0xFF5
  5136                           prodh	equ	0xFF4
  5137                           prodl	equ	0xFF3
  5138                           intcon	equ	0xFF2
  5139                           postinc0	equ	0xFEE
  5140                           fsr0h	equ	0xFEA
  5141                           fsr0l	equ	0xFE9
  5142                           wreg	equ	0xFE8
  5143                           fsr1h	equ	0xFE2
  5144                           fsr1l	equ	0xFE1
  5145                           postinc2	equ	0xFDE
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8


Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     71      75
    BANK0           160     28      46
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_writesc@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[16]), STR_7(CODE[17]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->___fladd
    _printTime->___awdiv
    _lcd_init->_lcd_writesc
    _lcd_writesc->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_cmd->_lcd_write
    _lcd_clear->_lcd_write
    _create_char->_lcd_char
    _lcd_char->_lcd_write
    ___lwtofl->___flpack
    ___fltol->___fldiv
    ___flneg->___flmul
    ___flmul->___awtofl
    ___fldiv->___lwtofl
    ___fladd->___flneg
    ___awtofl->___flpack

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   20015
                                             67 COMRAM     4     4      0
                                              0 BANK0     28    28      0
                             _AD_omv
                            ___awdiv
                            ___awmod
                           ___awtofl
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lwtofl
                        _create_char
                               _init
                           _lcd_goto
                           _lcd_init
                          _lcd_write
                        _lcd_writesc
                          _printTime
 ---------------------------------------------------------------------------------
 (1) _printTime                                           13    11      2    2247
                                             22 COMRAM    13    11      2
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     720
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     724
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1393
                                             17 COMRAM     1     1      0
                          _lcd_clear
                            _lcd_cmd
                           _lcd_goto
                          _lcd_write
                        _lcd_writesc
 ---------------------------------------------------------------------------------
 (1) _lcd_writesc                                          2     0      2     645
                                             15 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             1     1      0     198
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     198
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     176
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _create_char                                          8     8      0     646
                                             16 COMRAM     8     8      0
                           _lcd_char
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             1     1      0     198
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     176
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwtofl                                             4     0      4    1905
                                             24 COMRAM     4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     494
                                             47 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4      98
                                             48 COMRAM     4     0      4
                           ___awtofl (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             19    11      8    2342
                                             29 COMRAM    19    11      8
                           ___awtofl (ARG)
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     348
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             19    11      8    2401
                                             28 COMRAM    19    11      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             15     7      8    2936
                                             52 COMRAM    15     7      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___awtofl                                             9     5      4    1921
                                             24 COMRAM     5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___flpack                                            10     4      6    1724
                                             14 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _AD_omv                                               7     5      2      46
                                             14 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_omv
   ___awdiv
   ___awmod
   ___awtofl
     ___flpack
   ___fladd
     ___awtofl (ARG)
       ___flpack
     ___flmul (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
     ___flneg (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
     ___flpack (ARG)
   ___fldiv
     ___flpack
     ___lwtofl (ARG)
       ___flpack
   ___flge
   ___flmul
     ___awtofl (ARG)
       ___flpack
     ___flpack (ARG)
   ___flneg
     ___awtofl (ARG)
       ___flpack
     ___flmul (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
   ___fltol
     ___fldiv (ARG)
       ___flpack
       ___lwtofl (ARG)
         ___flpack
     ___lwtofl (ARG)
       ___flpack
   ___lwtofl
     ___flpack
   _create_char
     _lcd_char
       _lcd_write
     _lcd_write
   _init
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_clear
       _lcd_write
     _lcd_cmd
       _lcd_write
     _lcd_goto
       _lcd_write
     _lcd_write
     _lcd_writesc
       _lcd_write
   _lcd_write
   _lcd_writesc
     _lcd_write
   _printTime
     ___awdiv
     ___awmod
     _lcd_goto
       _lcd_write
     _lcd_write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1C      2E       4       28.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     47      4B       1       78.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      79       9        0.0%
DATA                 0      0      79      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Oct 10 11:34:15 2017

           create_char@i 0011             ___fldiv@cntr 002D             ___fldiv@sign 002F  
           ___awdiv@sign 0014             ?_lcd_writesc 0010             ___flpack@arg 000F  
           ___flpack@exp 0013                      l211 1992                      l221 19CA  
                    l213 199C                      l223 19D4                      l215 19A6  
                    l224 19D6                      l216 19A8                      l217 19B6  
                    l209 1988                      l129 07A4                      l219 19C0  
                    l172 1A58           lcd_cmd@command 0010                      l501 0E30  
                    l512 0EF0                      l194 124E                      l196 1264  
                    l197 127A                      l537 1798                      l483 15BA  
                    l489 1604                      l497 0E00                      _PR2 000FBB  
                    _isr 0008             ___awmod@sign 0014              lcd_goto@pos 0010  
                    wreg 000FE8             __CFG_FOSC$XT 000000             ___flmul@cntr 002F  
           ___flmul@sign 0030             printTime@var 0022             __CFG_LVP$OFF 000000  
          ___flpack@sign 0014             ___fltol@exp1 0039                     l2102 1030  
                   l2212 0E42                     l2300 1412                     l2206 0E12  
                   l2118 1068                     l2232 0E9E                     l2320 114E  
                   l2072 0FCC                     l2250 0F10                     l2234 0EAA  
                   l2226 0E7A                     l2314 1112                     l2244 0EDE  
                   l2236 0EB2                     l2332 1188                     l2412 14EC  
                   l2172 1292                     l2254 0F30                     l2246 0EEA  
                   l2238 0EBA                     l2430 153A                     l2422 1514  
                   l2190 132A                     l2174 12B6                     l2264 0F68  
                   l2280 13A8                     l2344 11B8                     l2336 119C  
                   l2424 1520                     l2416 14FC                     l2088 1004  
                   l2184 12E6                     l2520 098C                     l2512 095C  
                   l2274 136C                     l2426 1524                     l2602 0BB6  
                   l2364 1A08                     l2292 13E2                     l2372 175A  
                   l2348 11CC                     l1820 19B8                     l1812 199E  
                   l1804 198A                     l2612 0BD6                     l2532 09B2  
                   l2526 09A0                     l2470 06EE                     l1824 19C2  
                   l1808 1994                     l1920 182E                     l2624 0C5E  
                   l2608 0BC8                     l2544 0A3A                     l2464 06A8  
                   l2378 17D0                     l2386 1A98                     l1842 1AAC  
                   l1922 1836                     l1914 1818                     l2570 0B22  
                   l2474 072E                     l2396 148A                     l1828 19CC  
                   l1940 186E                     l1932 1856                     l1924 183A  
                   l1908 17F8                     l1846 1AC0                     l2662 0D5A  
                   l2654 0D22                     l2646 0CF0                     l2638 0CBE  
                   l2590 0B92                     l2558 0A9A                     l2478 076E  
                   l1880 15A2                     l1872 155E                     l1936 1860  
                   l1960 18C6                     l1952 189C                     l2584 0B82  
                   l1962 18CE                     l1876 1570                     l1964 18D2  
                   l1972 18F0                     l1956 18B8                     l2668 0D84  
                   l1886 15E0                     l1878 157C                     l1888 15EC  
                   l1976 18FE                     l1968 18E6                     ?_isr 0001  
                   STR_1 0620                     STR_2 0620                     STR_3 0620  
                   STR_4 0620                     STR_5 0620                     STR_6 0620  
                   STR_7 0601                     STR_8 0612                     u2050 146C  
                   u2070 14A8                     u2055 1462                     u2075 149E  
                   _IPR1 000F9F                     u1910 138A                     u2607 1B2C  
                   _PIE1 000F9D                     u1680 0DB4                     u2617 19DE  
                   u1690 0DDA                     u1915 1380                     u1940 10F4  
                   u1685 0DAA                     u2557 164E                     u1695 0DD0  
                   u2567 166A                     u1960 1130                     u1945 10EA  
                   u2577 167E                     u1890 134E                     u2587 1692  
                   u1965 1126                     u2597 16A8                     u1895 1344  
                   _main 0624              main@tid_old 0073                     _init 1908  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 017A            __CFG_IESO$OFF 000000         create_char@i_774 0013  
       create_char@i_775 0015         create_char@i_776 0017            printTime@pos1 001C  
          printTime@pos2 001E                    ??_isr 0001            ___fltol@sign1 0038  
        __end_of___fladd 0F96                    ?_main 0001                    ?_init 0001  
        __end_of___fldiv 144E          __end_of___awdiv 1878          __end_of___flneg 1AAA  
        __end_of___awmod 1908          __end_of___flmul 1212          __end_of___fltol 154C  
        ___awdiv@divisor 0011                    _T1CON 000FCD                    _T2CON 000FBA  
         __CFG_DEBUG$OFF 000000                    i2l188 0140          ___awdiv@counter 0013  
                  _TMR1H 000FCF                    _TMR1L 000FCE                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94             main@duty_LSB 006D  
           main@duty_MSB 006C           __CFG_FCMEN$OFF 000000            ___awtofl@sign 001D  
        __end_of_lcd_cmd 1B64       __CFG_MCLRE$EXTMCLR 000000             main@variabel 006E  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
         _rampknapp_flag 008C             lcd_writesc@s 0010          __initialization 1AFE  
           __end_of_main 0D96             __end_of_init 197E                   ??_main 0044  
                 ??_init 000F            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         __end_of___flpack 1644                   _CCPR5L 000F55  
       ___awdiv@dividend 000F         __end_of___awtofl 1A32                   _ANSELA 000F38  
                 _ANSELB 000F39                   _ANSELC 000F3A                   _AD_omv 1A32  
                 i2l2700 00B8           __CFG_WDTEN$OFF 000000                   i2l2718 013E  
                 i2l2680 0066                   i2l2688 0090                   i2l2698 00B4  
                 _INTCON 000FF2         __end_of___lwtofl 1AFE                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF                   _TXREG1 000FAD                   _TXSTA1 000FAC  
   __size_of_create_char 0140           __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000  
       __end_of_lcd_char 1B56         __end_of_lcd_init 171C         __end_of_lcd_goto 1B46  
                 ___flge 171C                ??___fladd 003D                ??___fldiv 0025  
              ??___awdiv 0013                ??___flneg 0035           __CFG_STVREN$ON 000000  
              ??___awmod 0013                ??___flmul 0026                ??___fltol 0034  
                 clear_0 1B04         ___awdiv@quotient 0015          ___awmod@divisor 0011  
                 _timmar 0088          ___awmod@counter 0013            AD_omv@ADkanal 0013  
              ??_lcd_cmd 0010     __size_of_lcd_writesc 002A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      printTime@sekunder 001B          __CFG_HFOFST$OFF 000000               ___fladd@f1 0035  
             ___fladd@f2 0039               ___flge@ff1 000F               ___flge@ff2 0013  
             ___fldiv@f1 001D               ___fldiv@f2 0021               ___fldiv@f3 0029  
             __accesstop 0060  __end_of__initialization 1B12               ___flneg@f1 0031  
             ___flmul@f1 001E               ___flmul@f2 0022               ___fltol@f1 0030  
             ___awtofl@c 0019           __pcstackCOMRAM 0001               ___lwtofl@c 0019  
     __size_of_lcd_clear 001A       __size_of_lcd_write 0068          printTime@timmar 0018  
             __pbssBANK0 007C                  ?_AD_omv 000F          __CFG_PLLCFG$OFF 000000  
                ?___flge 000F                  _CM1CON0 000F79                  _CM2CON1 000F77  
                _CCP5CON 000F54                ?___flpack 000F                ?___awtofl 0019  
              ?___lwtofl 0019       __size_of_printTime 011E                ?_lcd_char 0001  
              ?_lcd_init 0001                ?_lcd_goto 0001          __size_of_AD_omv 0046  
        _ramptime_scaler 004A                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcd_clear 1B36          __size_of___flge 00B8                  ___fladd 0D96  
                ___fldiv 1330                  ___awdiv 17D4                  ___flneg 1A78  
                ___awmod 1878                  ___flmul 10D6                  ___fltol 144E  
      __end_of_lcd_write 19E6             __psmallconst 0600                  _act_Val 008A  
             ??___flpack 0015                  __pcinit 1AFE               ??___awtofl 001D  
                __ramtop 0600                  __ptext0 0624                  __ptext1 1212  
                __ptext2 1878                  __ptext3 17D4                  __ptext4 1644  
                __ptext5 1AAA                  __ptext6 1B36                  __ptext7 1B56  
                __ptext8 1B1C                  __ptext9 1908                  _lcd_cmd 1B56  
             ??___lwtofl 001D           main@res_error1 006F           main@res_error2 006A  
           __size_of_isr 0172         ___awmod@dividend 000F                  _minuter 007C  
                _set_Val 008D                  _pot_Val 007E           AD_omv@AD_value 0014  
             ??_lcd_char 0010                  main@tid 007A               ??_lcd_init 0012  
             ??_lcd_goto 0010           main@sensor_Val 0071     end_of_initialization 1B12  
             _rampsignal 0080       lcd_char@cgram_addr 0010            __Lmediumconst 0000  
        _sample_interval 004B        __end_of_printTime 1330                  postinc0 000FEE  
                postinc2 000FDE                _PORTBbits 000F81                _PORTCbits 000F82  
              _TRISAbits 000F92              ___fldiv@exp 002E            ??_create_char 0011  
            _CM1CON0bits 000F79              ___flmul@exp 002A           __end_of_AD_omv 1A78  
             lcd_write@c 000F           __end_of___flge 17D4            ??_lcd_writesc 0012  
     main@character_code 0060      start_initialization 1AFE               _styrsignal 0086  
            __end_of_isr 017A                 ??_AD_omv 0011      __end_of_create_char 10D6  
               ??___flge 0017         printTime@minuter 0017        __size_of___flpack 00F8  
      __size_of___awtofl 004C              __pbssCOMRAM 0048        __size_of___lwtofl 002A  
    __end_of_lcd_writesc 1AD4            __pcstackBANK0 0060      __end_of__stringdata 0622  
      __size_of_lcd_char 0010        __size_of_lcd_init 00D8        __size_of_lcd_goto 0010  
              _main$1490 0062                __pintcode 0008                 ?___fladd 0035  
               ?___fldiv 001D                 ?___awdiv 000F                 ?___flneg 0031  
               ?___awmod 000F                 ?___flmul 001E                 ?___fltol 0030  
              _lcd_clear 1B1C         __CFG_PRICLKEN$ON 000000                 ?_lcd_cmd 0001  
              _lcd_write 197E              __smallconst 0600                 _BAUDCON1 000FB8  
               _CCPTMRS1 000F48      main@disp_rampsignal 0075              _create_char 0F96  
               _LATBbits 000F8A                 _LATCbits 000F8B                 _PIE1bits 000F9D  
               _PIR1bits 000F9E            _blink_battery 008B       main@battery_status 0061  
              _printTime 1212                 _VREFCON0 000F42               ?_lcd_clear 0001  
            _lcd_writesc 1AAA               _ADCON0bits 000FC2              __stringdata 0601  
             ?_lcd_write 0001               printTime@i 0020                 __Hrparam 0000  
               __Lrparam 0000               ?_printTime 0017         __size_of___fladd 0200  
       __size_of___fldiv 011E         __size_of___awdiv 00A4         __size_of___flneg 0032  
       __size_of___awmod 0090         __size_of___flmul 013C         __size_of___fltol 00FE  
               ___flpack 154C                 ___awtofl 19E6                 ___lwtofl 1AD4  
       __size_of_lcd_cmd 000E                 __ptext10 0F96                 __ptext11 1B46  
               __ptext20 19E6                 __ptext12 197E                 __ptext21 154C  
               __ptext13 1AD4                 __ptext22 1A32                 __ptext14 144E  
               __ptext15 1A78                 __ptext16 10D6                 __ptext17 171C  
               __ptext18 1330                 __ptext19 0D96                 _lcd_char 1B46  
               _lcd_init 1644                 _lcd_goto 1B36            __size_of_main 0772  
          __size_of_init 0076                 _sekunder 0084              ??_lcd_clear 0010  
            ??_lcd_write 000F    ___flmul@f3_as_product 002B         main@pump_signal1 0076  
       main@pump_signal2 0066              _sample_flag 0082                 intlevel2 0000  
            ??_printTime 0019              _time_scaler 0048             ?_create_char 0001  
           ___fladd@exp1 0043             ___fladd@exp2 0042             ___fladd@sign 0041  
